2025-02-25 13:39:33,552 p=6909 u=digitd n=ansible | {
    "_meta": {
        "hostvars": {
            "db.etcd.lan": {
                "ansible_port": 22,
                "ansible_python_interpreter": "auto_silent",
                "ansible_ssh_private_key_file": "../ssh-keys/.keys/my_key",
                "ansible_user": "root"
            },
            "db.master.lan": {
                "ansible_port": 22,
                "ansible_python_interpreter": "auto_silent",
                "ansible_ssh_private_key_file": "../ssh-keys/.keys/my_key",
                "ansible_user": "root"
            },
            "db.slave.lan": {
                "ansible_port": 22,
                "ansible_python_interpreter": "auto_silent",
                "ansible_ssh_private_key_file": "../ssh-keys/.keys/my_key",
                "ansible_user": "root"
            },
            "db.test.lan": {
                "ansible_port": 22,
                "ansible_python_interpreter": "auto_silent",
                "ansible_ssh_private_key_file": "../ssh-keys/.keys/my_key",
                "ansible_user": "root"
            },
            "db.test1.lan": {
                "ansible_port": 22,
                "ansible_python_interpreter": "auto_silent",
                "ansible_ssh_private_key_file": "../ssh-keys/.keys/my_key",
                "ansible_user": "root"
            }
        }
    },
    "all": {
        "children": [
            "ungrouped",
            "cluster",
            "database",
            "vip_hap",
            "etcd_cluster"
        ]
    },
    "cluster": {
        "children": [
            "haproxy",
            "haproxy_vip",
            "master",
            "slave",
            "etcd"
        ]
    },
    "database": {
        "children": [
            "master",
            "slave"
        ]
    },
    "etcd": {
        "hosts": [
            "db.etcd.lan"
        ]
    },
    "etcd_cluster": {
        "children": [
            "master",
            "slave",
            "etcd"
        ]
    },
    "haproxy": {
        "hosts": [
            "db.test.lan"
        ]
    },
    "haproxy_vip": {
        "hosts": [
            "db.test1.lan"
        ]
    },
    "master": {
        "hosts": [
            "db.master.lan"
        ]
    },
    "slave": {
        "hosts": [
            "db.slave.lan"
        ]
    },
    "vip_hap": {
        "children": [
            "haproxy",
            "haproxy_vip"
        ]
    }
}
2025-02-25 13:39:58,107 p=7098 u=digitd n=ansible | {
    "_meta": {
        "hostvars": {
            "db.etcd.lan": {
                "ansible_port": 22,
                "ansible_python_interpreter": "auto_silent",
                "ansible_ssh_private_key_file": "../ssh-keys/.keys/my_key",
                "ansible_user": "root"
            },
            "db.master.lan": {
                "ansible_port": 22,
                "ansible_python_interpreter": "auto_silent",
                "ansible_ssh_private_key_file": "../ssh-keys/.keys/my_key",
                "ansible_user": "root"
            },
            "db.slave.lan": {
                "ansible_port": 22,
                "ansible_python_interpreter": "auto_silent",
                "ansible_ssh_private_key_file": "../ssh-keys/.keys/my_key",
                "ansible_user": "root"
            },
            "db.test.lan": {
                "ansible_port": 22,
                "ansible_python_interpreter": "auto_silent",
                "ansible_ssh_private_key_file": "../ssh-keys/.keys/my_key",
                "ansible_user": "root"
            },
            "db.test1.lan": {
                "ansible_port": 22,
                "ansible_python_interpreter": "auto_silent",
                "ansible_ssh_private_key_file": "../ssh-keys/.keys/my_key",
                "ansible_user": "root"
            }
        }
    },
    "all": {
        "children": [
            "ungrouped",
            "cluster",
            "database",
            "vip_hap",
            "etcd_cluster"
        ]
    },
    "cluster": {
        "children": [
            "haproxy",
            "haproxy_vip",
            "master",
            "slave",
            "etcd"
        ]
    },
    "database": {
        "children": [
            "master",
            "slave"
        ]
    },
    "etcd": {
        "hosts": [
            "db.etcd.lan"
        ]
    },
    "etcd_cluster": {
        "children": [
            "master",
            "slave",
            "etcd"
        ]
    },
    "haproxy": {
        "hosts": [
            "db.test.lan"
        ]
    },
    "haproxy_vip": {
        "hosts": [
            "db.test1.lan"
        ]
    },
    "master": {
        "hosts": [
            "db.master.lan"
        ]
    },
    "slave": {
        "hosts": [
            "db.slave.lan"
        ]
    },
    "vip_hap": {
        "children": [
            "haproxy",
            "haproxy_vip"
        ]
    }
}
2025-02-26 10:31:07,515 p=1029 u=digitd n=ansible | [WARNING]: Unable to parse /home/digitd/git/travelata_test/ansible/firewall/cluster.ini as an inventory source

2025-02-26 10:31:07,516 p=1029 u=digitd n=ansible | [WARNING]: No inventory was parsed, only implicit localhost is available

2025-02-26 10:31:07,521 p=1029 u=digitd n=ansible | {
    "_meta": {
        "hostvars": {}
    },
    "all": {
        "children": [
            "ungrouped"
        ]
    }
}
2025-02-26 10:31:24,007 p=1144 u=digitd n=ansible | {
    "_meta": {
        "hostvars": {
            "db.etcd.lan": {
                "ansible_port": 22,
                "ansible_python_interpreter": "auto_silent",
                "ansible_ssh_private_key_file": "../ssh-keys/.keys/my_key",
                "ansible_user": "root"
            },
            "db.master.lan": {
                "ansible_port": 22,
                "ansible_python_interpreter": "auto_silent",
                "ansible_ssh_private_key_file": "../ssh-keys/.keys/my_key",
                "ansible_user": "root"
            },
            "db.slave.lan": {
                "ansible_port": 22,
                "ansible_python_interpreter": "auto_silent",
                "ansible_ssh_private_key_file": "../ssh-keys/.keys/my_key",
                "ansible_user": "root"
            },
            "db.test.lan": {
                "ansible_port": 22,
                "ansible_python_interpreter": "auto_silent",
                "ansible_ssh_private_key_file": "../ssh-keys/.keys/my_key",
                "ansible_user": "root"
            },
            "db.test1.lan": {
                "ansible_port": 22,
                "ansible_python_interpreter": "auto_silent",
                "ansible_ssh_private_key_file": "../ssh-keys/.keys/my_key",
                "ansible_user": "root"
            }
        }
    },
    "all": {
        "children": [
            "ungrouped",
            "cluster",
            "database",
            "vip_hap",
            "etcd_cluster"
        ]
    },
    "cluster": {
        "children": [
            "haproxy",
            "haproxy_vip",
            "master",
            "slave",
            "etcd"
        ]
    },
    "database": {
        "children": [
            "master",
            "slave"
        ]
    },
    "etcd": {
        "hosts": [
            "db.etcd.lan"
        ]
    },
    "etcd_cluster": {
        "children": [
            "master",
            "slave",
            "etcd"
        ]
    },
    "haproxy": {
        "hosts": [
            "db.test.lan"
        ]
    },
    "haproxy_vip": {
        "hosts": [
            "db.test1.lan"
        ]
    },
    "master": {
        "hosts": [
            "db.master.lan"
        ]
    },
    "slave": {
        "hosts": [
            "db.slave.lan"
        ]
    },
    "vip_hap": {
        "children": [
            "haproxy",
            "haproxy_vip"
        ]
    }
}
2025-02-26 10:49:12,715 p=7520 u=digitd n=ansible | db.test.lan | UNREACHABLE! => {
    "changed": false,
    "msg": "Failed to connect to the host via ssh: no such identity: ../ssh-keys/.keys/my_key: No such file or directory\r\nroot@db.test.lan: Permission denied (publickey,password).",
    "unreachable": true
}
2025-02-26 10:49:12,725 p=7520 u=digitd n=ansible | db.master.lan | UNREACHABLE! => {
    "changed": false,
    "msg": "Failed to connect to the host via ssh: no such identity: ../ssh-keys/.keys/my_key: No such file or directory\r\nroot@db.master.lan: Permission denied (publickey,password).",
    "unreachable": true
}
2025-02-26 10:49:12,730 p=7520 u=digitd n=ansible | db.test1.lan | UNREACHABLE! => {
    "changed": false,
    "msg": "Failed to connect to the host via ssh: no such identity: ../ssh-keys/.keys/my_key: No such file or directory\r\nroot@db.test1.lan: Permission denied (publickey,password).",
    "unreachable": true
}
2025-02-26 10:49:12,742 p=7520 u=digitd n=ansible | db.slave.lan | UNREACHABLE! => {
    "changed": false,
    "msg": "Failed to connect to the host via ssh: no such identity: ../ssh-keys/.keys/my_key: No such file or directory\r\nroot@db.slave.lan: Permission denied (publickey,password).",
    "unreachable": true
}
2025-02-26 10:49:13,078 p=7520 u=digitd n=ansible | db.etcd.lan | UNREACHABLE! => {
    "changed": false,
    "msg": "Failed to connect to the host via ssh: no such identity: ../ssh-keys/.keys/my_key: No such file or directory\r\nroot@db.etcd.lan: Permission denied (publickey,password).",
    "unreachable": true
}
2025-02-26 10:53:44,591 p=8383 u=digitd n=ansible | db.test.lan | UNREACHABLE! => {
    "changed": false,
    "msg": "Failed to connect to the host via ssh: no such identity: ../ssh-keys/.keys/my_key: No such file or directory\r\nroot@db.test.lan: Permission denied (publickey,password).",
    "unreachable": true
}
2025-02-26 10:53:44,607 p=8383 u=digitd n=ansible | db.master.lan | UNREACHABLE! => {
    "changed": false,
    "msg": "Failed to connect to the host via ssh: no such identity: ../ssh-keys/.keys/my_key: No such file or directory\r\nroot@db.master.lan: Permission denied (publickey,password).",
    "unreachable": true
}
2025-02-26 10:53:44,607 p=8383 u=digitd n=ansible | db.slave.lan | UNREACHABLE! => {
    "changed": false,
    "msg": "Failed to connect to the host via ssh: no such identity: ../ssh-keys/.keys/my_key: No such file or directory\r\nroot@db.slave.lan: Permission denied (publickey,password).",
    "unreachable": true
}
2025-02-26 10:53:44,612 p=8383 u=digitd n=ansible | db.test1.lan | UNREACHABLE! => {
    "changed": false,
    "msg": "Failed to connect to the host via ssh: no such identity: ../ssh-keys/.keys/my_key: No such file or directory\r\nroot@db.test1.lan: Permission denied (publickey,password).",
    "unreachable": true
}
2025-02-26 10:53:44,613 p=8383 u=digitd n=ansible | db.etcd.lan | UNREACHABLE! => {
    "changed": false,
    "msg": "Failed to connect to the host via ssh: no such identity: ../ssh-keys/.keys/my_key: No such file or directory\r\nroot@db.etcd.lan: Permission denied (publickey,password).",
    "unreachable": true
}
2025-02-26 10:54:20,603 p=8714 u=digitd n=ansible | db.test1.lan | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python3"
    },
    "changed": false,
    "ping": "pong"
}
2025-02-26 10:54:20,603 p=8714 u=digitd n=ansible | db.test.lan | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python3"
    },
    "changed": false,
    "ping": "pong"
}
2025-02-26 10:54:20,610 p=8714 u=digitd n=ansible | db.master.lan | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python3"
    },
    "changed": false,
    "ping": "pong"
}
2025-02-26 10:54:20,610 p=8714 u=digitd n=ansible | db.slave.lan | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python3"
    },
    "changed": false,
    "ping": "pong"
}
2025-02-26 10:54:20,638 p=8714 u=digitd n=ansible | db.etcd.lan | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python3"
    },
    "changed": false,
    "ping": "pong"
}
2025-02-26 10:54:27,137 p=8824 u=digitd n=ansible | db.test1.lan | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python3"
    },
    "changed": false,
    "ping": "pong"
}
2025-02-26 10:54:27,140 p=8824 u=digitd n=ansible | db.test.lan | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python3"
    },
    "changed": false,
    "ping": "pong"
}
2025-02-26 10:54:27,143 p=8824 u=digitd n=ansible | db.etcd.lan | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python3"
    },
    "changed": false,
    "ping": "pong"
}
2025-02-26 10:54:27,222 p=8824 u=digitd n=ansible | db.master.lan | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python3"
    },
    "changed": false,
    "ping": "pong"
}
2025-02-26 10:54:27,222 p=8824 u=digitd n=ansible | db.slave.lan | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python3"
    },
    "changed": false,
    "ping": "pong"
}
2025-02-26 10:54:59,041 p=9182 u=digitd n=ansible | PLAY [Setup firewall on the postgres machines] ***********************************************************************************************************************************************************************
2025-02-26 10:54:59,056 p=9182 u=digitd n=ansible | TASK [Ensure that nftables package is installed] *********************************************************************************************************************************************************************
2025-02-26 10:55:12,620 p=9182 u=digitd n=ansible | ok: [db.slave.lan]
2025-02-26 10:55:19,472 p=9182 u=digitd n=ansible | ok: [db.master.lan]
2025-02-26 10:55:19,477 p=9182 u=digitd n=ansible | TASK [Copy files to the machines] ************************************************************************************************************************************************************************************
2025-02-26 10:55:21,166 p=9182 u=digitd n=ansible | changed: [db.slave.lan]
2025-02-26 10:55:22,015 p=9182 u=digitd n=ansible | changed: [db.master.lan]
2025-02-26 10:55:22,032 p=9182 u=digitd n=ansible | TASK [Start and enable nftables service] *****************************************************************************************************************************************************************************
2025-02-26 10:55:27,015 p=9182 u=digitd n=ansible | changed: [db.slave.lan]
2025-02-26 10:55:29,607 p=9182 u=digitd n=ansible | changed: [db.master.lan]
2025-02-26 10:55:29,623 p=9182 u=digitd n=ansible | PLAY [Setup firewall on the haproxy machines] ************************************************************************************************************************************************************************
2025-02-26 10:55:29,634 p=9182 u=digitd n=ansible | TASK [Ensure that nftables package is installed] *********************************************************************************************************************************************************************
2025-02-26 10:55:29,874 p=9182 u=digitd n=ansible | fatal: [db.test.lan]: UNREACHABLE! => {"changed": false, "msg": "Failed to connect to the host via ssh: no such identity: ../ssh-keys/.keys/my_key: No such file or directory\r\nroot@db.test.lan: Permission denied (publickey,password).", "unreachable": true}
2025-02-26 10:55:29,894 p=9182 u=digitd n=ansible | fatal: [db.test1.lan]: UNREACHABLE! => {"changed": false, "msg": "Failed to connect to the host via ssh: no such identity: ../ssh-keys/.keys/my_key: No such file or directory\r\nroot@db.test1.lan: Permission denied (publickey,password).", "unreachable": true}
2025-02-26 10:55:29,895 p=9182 u=digitd n=ansible | PLAY RECAP ***********************************************************************************************************************************************************************************************************
2025-02-26 10:55:29,896 p=9182 u=digitd n=ansible | db.master.lan              : ok=3    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2025-02-26 10:55:29,896 p=9182 u=digitd n=ansible | db.slave.lan               : ok=3    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2025-02-26 10:55:29,896 p=9182 u=digitd n=ansible | db.test.lan                : ok=0    changed=0    unreachable=1    failed=0    skipped=0    rescued=0    ignored=0   
2025-02-26 10:55:29,896 p=9182 u=digitd n=ansible | db.test1.lan               : ok=0    changed=0    unreachable=1    failed=0    skipped=0    rescued=0    ignored=0   
2025-02-26 10:56:26,964 p=9848 u=digitd n=ansible | PLAY [Setup firewall on the postgres machines] ***********************************************************************************************************************************************************************
2025-02-26 10:56:26,976 p=9848 u=digitd n=ansible | TASK [Ensure that nftables package is installed] *********************************************************************************************************************************************************************
2025-02-26 10:56:27,269 p=9848 u=digitd n=ansible | fatal: [db.slave.lan]: UNREACHABLE! => {"changed": false, "msg": "Failed to connect to the host via ssh: no such identity: ../ssh-keys/.keys/my_key: No such file or directory\r\nroot@db.slave.lan: Permission denied (publickey,password).", "unreachable": true}
2025-02-26 10:56:32,759 p=9848 u=digitd n=ansible |  [ERROR]: User interrupted execution

2025-02-26 10:59:31,505 p=10806 u=digitd n=ansible | PLAY [Setup firewall on the postgres machines] ***********************************************************************************************************************************************************************
2025-02-26 10:59:31,519 p=10806 u=digitd n=ansible | TASK [Ensure that nftables package is installed] *********************************************************************************************************************************************************************
2025-02-26 10:59:31,758 p=10806 u=digitd n=ansible | fatal: [db.slave.lan]: UNREACHABLE! => {"changed": false, "msg": "Failed to connect to the host via ssh: no such identity: ../ssh-keys/.keys/my_key: No such file or directory\r\nroot@db.slave.lan: Permission denied (publickey,password).", "unreachable": true}
2025-02-26 10:59:31,935 p=10806 u=digitd n=ansible | fatal: [db.master.lan]: UNREACHABLE! => {"changed": false, "msg": "Failed to connect to the host via ssh: no such identity: ../ssh-keys/.keys/my_key: No such file or directory\r\nroot@db.master.lan: Permission denied (publickey,password).", "unreachable": true}
2025-02-26 10:59:31,936 p=10806 u=digitd n=ansible | PLAY RECAP ***********************************************************************************************************************************************************************************************************
2025-02-26 10:59:31,936 p=10806 u=digitd n=ansible | db.master.lan              : ok=0    changed=0    unreachable=1    failed=0    skipped=0    rescued=0    ignored=0   
2025-02-26 10:59:31,937 p=10806 u=digitd n=ansible | db.slave.lan               : ok=0    changed=0    unreachable=1    failed=0    skipped=0    rescued=0    ignored=0   
2025-02-26 11:00:01,449 p=10988 u=digitd n=ansible | db.test.lan | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python3"
    },
    "changed": false,
    "ping": "pong"
}
2025-02-26 11:00:01,458 p=10988 u=digitd n=ansible | db.test1.lan | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python3"
    },
    "changed": false,
    "ping": "pong"
}
2025-02-26 11:00:01,606 p=10988 u=digitd n=ansible | db.etcd.lan | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python3"
    },
    "changed": false,
    "ping": "pong"
}
2025-02-26 11:00:01,750 p=10988 u=digitd n=ansible | db.master.lan | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python3"
    },
    "changed": false,
    "ping": "pong"
}
2025-02-26 11:00:01,959 p=10988 u=digitd n=ansible | db.slave.lan | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python3"
    },
    "changed": false,
    "ping": "pong"
}
2025-02-26 11:00:11,631 p=11132 u=digitd n=ansible | PLAY [Setup firewall on the postgres machines] ***********************************************************************************************************************************************************************
2025-02-26 11:00:11,649 p=11132 u=digitd n=ansible | TASK [Ensure that nftables package is installed] *********************************************************************************************************************************************************************
2025-02-26 11:00:14,060 p=11132 u=digitd n=ansible | ok: [db.master.lan]
2025-02-26 11:00:18,244 p=11132 u=digitd n=ansible | ok: [db.slave.lan]
2025-02-26 11:00:18,247 p=11132 u=digitd n=ansible | TASK [Copy files to the machines] ************************************************************************************************************************************************************************************
2025-02-26 11:00:19,342 p=11132 u=digitd n=ansible | ok: [db.slave.lan]
2025-02-26 11:00:19,342 p=11132 u=digitd n=ansible | ok: [db.master.lan]
2025-02-26 11:00:19,345 p=11132 u=digitd n=ansible | TASK [Start and enable nftables service] *****************************************************************************************************************************************************************************
2025-02-26 11:00:21,037 p=11132 u=digitd n=ansible | ok: [db.slave.lan]
2025-02-26 11:00:21,077 p=11132 u=digitd n=ansible | ok: [db.master.lan]
2025-02-26 11:00:21,094 p=11132 u=digitd n=ansible | PLAY [Setup firewall on the haproxy machines] ************************************************************************************************************************************************************************
2025-02-26 11:00:21,102 p=11132 u=digitd n=ansible | TASK [Ensure that nftables package is installed] *********************************************************************************************************************************************************************
2025-02-26 11:00:38,660 p=11132 u=digitd n=ansible | ok: [db.test.lan]
2025-02-26 11:00:42,187 p=11132 u=digitd n=ansible | ok: [db.test1.lan]
2025-02-26 11:00:42,190 p=11132 u=digitd n=ansible | TASK [Copy files to the machines] ************************************************************************************************************************************************************************************
2025-02-26 11:00:43,132 p=11132 u=digitd n=ansible | changed: [db.test1.lan]
2025-02-26 11:00:43,160 p=11132 u=digitd n=ansible | changed: [db.test.lan]
2025-02-26 11:00:43,164 p=11132 u=digitd n=ansible | TASK [Start and enable nftables service] *****************************************************************************************************************************************************************************
2025-02-26 11:00:44,370 p=11132 u=digitd n=ansible | changed: [db.test.lan]
2025-02-26 11:00:45,282 p=11132 u=digitd n=ansible | changed: [db.test1.lan]
2025-02-26 11:00:45,294 p=11132 u=digitd n=ansible | PLAY RECAP ***********************************************************************************************************************************************************************************************************
2025-02-26 11:00:45,294 p=11132 u=digitd n=ansible | db.master.lan              : ok=3    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2025-02-26 11:00:45,308 p=11132 u=digitd n=ansible | db.slave.lan               : ok=3    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2025-02-26 11:00:45,309 p=11132 u=digitd n=ansible | db.test.lan                : ok=3    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2025-02-26 11:00:45,309 p=11132 u=digitd n=ansible | db.test1.lan               : ok=3    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2025-02-26 11:02:16,747 p=11880 u=digitd n=ansible | PLAY [Setup firewall on the postgres machines] ***********************************************************************************************************************************************************************
2025-02-26 11:02:16,763 p=11880 u=digitd n=ansible | TASK [Ensure that nftables package is installed] *********************************************************************************************************************************************************************
2025-02-26 11:02:18,876 p=11880 u=digitd n=ansible | ok: [db.master.lan]
2025-02-26 11:02:19,004 p=11880 u=digitd n=ansible | ok: [db.slave.lan]
2025-02-26 11:02:19,007 p=11880 u=digitd n=ansible | TASK [Copy files to the machines] ************************************************************************************************************************************************************************************
2025-02-26 11:02:19,977 p=11880 u=digitd n=ansible | ok: [db.master.lan]
2025-02-26 11:02:19,979 p=11880 u=digitd n=ansible | ok: [db.slave.lan]
2025-02-26 11:02:19,981 p=11880 u=digitd n=ansible | TASK [Start and enable nftables service] *****************************************************************************************************************************************************************************
2025-02-26 11:02:21,613 p=11880 u=digitd n=ansible | ok: [db.master.lan]
2025-02-26 11:02:21,627 p=11880 u=digitd n=ansible | ok: [db.slave.lan]
2025-02-26 11:02:21,651 p=11880 u=digitd n=ansible | PLAY [Setup firewall on the haproxy machines] ************************************************************************************************************************************************************************
2025-02-26 11:02:21,695 p=11880 u=digitd n=ansible | TASK [Ensure that nftables package is installed] *********************************************************************************************************************************************************************
2025-02-26 11:02:23,834 p=11880 u=digitd n=ansible | ok: [db.test.lan]
2025-02-26 11:02:23,842 p=11880 u=digitd n=ansible | ok: [db.test1.lan]
2025-02-26 11:02:23,845 p=11880 u=digitd n=ansible | TASK [Copy files to the machines] ************************************************************************************************************************************************************************************
2025-02-26 11:02:24,778 p=11880 u=digitd n=ansible | changed: [db.test1.lan]
2025-02-26 11:02:24,778 p=11880 u=digitd n=ansible | changed: [db.test.lan]
2025-02-26 11:02:24,781 p=11880 u=digitd n=ansible | TASK [Start and enable nftables service] *****************************************************************************************************************************************************************************
2025-02-26 11:02:25,852 p=11880 u=digitd n=ansible | ok: [db.test.lan]
2025-02-26 11:02:25,862 p=11880 u=digitd n=ansible | ok: [db.test1.lan]
2025-02-26 11:02:25,876 p=11880 u=digitd n=ansible | PLAY RECAP ***********************************************************************************************************************************************************************************************************
2025-02-26 11:02:25,876 p=11880 u=digitd n=ansible | db.master.lan              : ok=3    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2025-02-26 11:02:25,876 p=11880 u=digitd n=ansible | db.slave.lan               : ok=3    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2025-02-26 11:02:25,876 p=11880 u=digitd n=ansible | db.test.lan                : ok=3    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2025-02-26 11:02:25,876 p=11880 u=digitd n=ansible | db.test1.lan               : ok=3    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2025-02-26 11:05:27,839 p=13180 u=digitd n=ansible | PLAY [Setup firewall on the postgres machines] ***********************************************************************************************************************************************************************
2025-02-26 11:05:27,852 p=13180 u=digitd n=ansible | TASK [Ensure that nftables package is installed] *********************************************************************************************************************************************************************
2025-02-26 11:05:29,988 p=13180 u=digitd n=ansible | ok: [db.slave.lan]
2025-02-26 11:05:30,102 p=13180 u=digitd n=ansible | ok: [db.master.lan]
2025-02-26 11:05:30,104 p=13180 u=digitd n=ansible | TASK [Copy files to the machines] ************************************************************************************************************************************************************************************
2025-02-26 11:05:31,069 p=13180 u=digitd n=ansible | ok: [db.slave.lan]
2025-02-26 11:05:31,111 p=13180 u=digitd n=ansible | ok: [db.master.lan]
2025-02-26 11:05:31,114 p=13180 u=digitd n=ansible | TASK [Start and enable nftables service] *****************************************************************************************************************************************************************************
2025-02-26 11:05:33,031 p=13180 u=digitd n=ansible | changed: [db.slave.lan]
2025-02-26 11:05:33,072 p=13180 u=digitd n=ansible | changed: [db.master.lan]
2025-02-26 11:05:33,085 p=13180 u=digitd n=ansible | PLAY [Setup firewall on the haproxy machines] ************************************************************************************************************************************************************************
2025-02-26 11:05:33,094 p=13180 u=digitd n=ansible | TASK [Ensure that nftables package is installed] *********************************************************************************************************************************************************************
2025-02-26 11:05:34,902 p=13180 u=digitd n=ansible | ok: [db.test.lan]
2025-02-26 11:05:35,077 p=13180 u=digitd n=ansible | ok: [db.test1.lan]
2025-02-26 11:05:35,080 p=13180 u=digitd n=ansible | TASK [Copy files to the machines] ************************************************************************************************************************************************************************************
2025-02-26 11:05:35,770 p=13180 u=digitd n=ansible | ok: [db.test.lan]
2025-02-26 11:05:35,783 p=13180 u=digitd n=ansible | ok: [db.test1.lan]
2025-02-26 11:05:35,786 p=13180 u=digitd n=ansible | TASK [Start and enable nftables service] *****************************************************************************************************************************************************************************
2025-02-26 11:05:36,969 p=13180 u=digitd n=ansible | changed: [db.test1.lan]
2025-02-26 11:05:37,011 p=13180 u=digitd n=ansible | changed: [db.test.lan]
2025-02-26 11:05:37,022 p=13180 u=digitd n=ansible | PLAY RECAP ***********************************************************************************************************************************************************************************************************
2025-02-26 11:05:37,022 p=13180 u=digitd n=ansible | db.master.lan              : ok=3    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2025-02-26 11:05:37,022 p=13180 u=digitd n=ansible | db.slave.lan               : ok=3    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2025-02-26 11:05:37,022 p=13180 u=digitd n=ansible | db.test.lan                : ok=3    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2025-02-26 11:05:37,022 p=13180 u=digitd n=ansible | db.test1.lan               : ok=3    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2025-02-26 11:48:26,253 p=24527 u=digitd n=ansible | db.test.lan | UNREACHABLE! => {
    "changed": false,
    "msg": "Failed to connect to the host via ssh: @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n@         WARNING: UNPROTECTED PRIVATE KEY FILE!          @\r\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\nPermissions 0644 for '../../ssh-keys/.keys/my_key' are too open.\r\nIt is required that your private key files are NOT accessible by others.\r\nThis private key will be ignored.\r\nLoad key \"../../ssh-keys/.keys/my_key\": bad permissions\r\nroot@db.test.lan: Permission denied (publickey,password).",
    "unreachable": true
}
2025-02-26 11:48:26,266 p=24527 u=digitd n=ansible | db.test1.lan | UNREACHABLE! => {
    "changed": false,
    "msg": "Failed to connect to the host via ssh: @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n@         WARNING: UNPROTECTED PRIVATE KEY FILE!          @\r\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\nPermissions 0644 for '../../ssh-keys/.keys/my_key' are too open.\r\nIt is required that your private key files are NOT accessible by others.\r\nThis private key will be ignored.\r\nLoad key \"../../ssh-keys/.keys/my_key\": bad permissions\r\nroot@db.test1.lan: Permission denied (publickey,password).",
    "unreachable": true
}
2025-02-26 11:48:26,270 p=24527 u=digitd n=ansible | db.slave.lan | UNREACHABLE! => {
    "changed": false,
    "msg": "Failed to connect to the host via ssh: @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n@         WARNING: UNPROTECTED PRIVATE KEY FILE!          @\r\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\nPermissions 0644 for '../../ssh-keys/.keys/my_key' are too open.\r\nIt is required that your private key files are NOT accessible by others.\r\nThis private key will be ignored.\r\nLoad key \"../../ssh-keys/.keys/my_key\": bad permissions\r\nroot@db.slave.lan: Permission denied (publickey,password).",
    "unreachable": true
}
2025-02-26 11:48:26,285 p=24527 u=digitd n=ansible | db.etcd.lan | UNREACHABLE! => {
    "changed": false,
    "msg": "Failed to connect to the host via ssh: @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n@         WARNING: UNPROTECTED PRIVATE KEY FILE!          @\r\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\nPermissions 0644 for '../../ssh-keys/.keys/my_key' are too open.\r\nIt is required that your private key files are NOT accessible by others.\r\nThis private key will be ignored.\r\nLoad key \"../../ssh-keys/.keys/my_key\": bad permissions\r\nroot@db.etcd.lan: Permission denied (publickey,password).",
    "unreachable": true
}
2025-02-26 11:48:26,288 p=24527 u=digitd n=ansible | db.master.lan | UNREACHABLE! => {
    "changed": false,
    "msg": "Failed to connect to the host via ssh: @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n@         WARNING: UNPROTECTED PRIVATE KEY FILE!          @\r\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\nPermissions 0644 for '../../ssh-keys/.keys/my_key' are too open.\r\nIt is required that your private key files are NOT accessible by others.\r\nThis private key will be ignored.\r\nLoad key \"../../ssh-keys/.keys/my_key\": bad permissions\r\nroot@db.master.lan: Permission denied (publickey,password).",
    "unreachable": true
}
2025-02-26 11:48:33,576 p=24610 u=digitd n=ansible | db.test.lan | UNREACHABLE! => {
    "changed": false,
    "msg": "Failed to connect to the host via ssh: @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n@         WARNING: UNPROTECTED PRIVATE KEY FILE!          @\r\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\nPermissions 0644 for '../../ssh-keys/.keys/my_key' are too open.\r\nIt is required that your private key files are NOT accessible by others.\r\nThis private key will be ignored.\r\nLoad key \"../../ssh-keys/.keys/my_key\": bad permissions\r\nroot@db.test.lan: Permission denied (publickey,password).",
    "unreachable": true
}
2025-02-26 11:48:33,588 p=24610 u=digitd n=ansible | db.test1.lan | UNREACHABLE! => {
    "changed": false,
    "msg": "Failed to connect to the host via ssh: @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n@         WARNING: UNPROTECTED PRIVATE KEY FILE!          @\r\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\nPermissions 0644 for '../../ssh-keys/.keys/my_key' are too open.\r\nIt is required that your private key files are NOT accessible by others.\r\nThis private key will be ignored.\r\nLoad key \"../../ssh-keys/.keys/my_key\": bad permissions\r\nroot@db.test1.lan: Permission denied (publickey,password).",
    "unreachable": true
}
2025-02-26 11:48:33,593 p=24610 u=digitd n=ansible | db.slave.lan | UNREACHABLE! => {
    "changed": false,
    "msg": "Failed to connect to the host via ssh: @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n@         WARNING: UNPROTECTED PRIVATE KEY FILE!          @\r\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\nPermissions 0644 for '../../ssh-keys/.keys/my_key' are too open.\r\nIt is required that your private key files are NOT accessible by others.\r\nThis private key will be ignored.\r\nLoad key \"../../ssh-keys/.keys/my_key\": bad permissions\r\nroot@db.slave.lan: Permission denied (publickey,password).",
    "unreachable": true
}
2025-02-26 11:48:33,599 p=24610 u=digitd n=ansible | db.master.lan | UNREACHABLE! => {
    "changed": false,
    "msg": "Failed to connect to the host via ssh: @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n@         WARNING: UNPROTECTED PRIVATE KEY FILE!          @\r\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\nPermissions 0644 for '../../ssh-keys/.keys/my_key' are too open.\r\nIt is required that your private key files are NOT accessible by others.\r\nThis private key will be ignored.\r\nLoad key \"../../ssh-keys/.keys/my_key\": bad permissions\r\nroot@db.master.lan: Permission denied (publickey,password).",
    "unreachable": true
}
2025-02-26 11:48:33,602 p=24610 u=digitd n=ansible | db.etcd.lan | UNREACHABLE! => {
    "changed": false,
    "msg": "Failed to connect to the host via ssh: @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n@         WARNING: UNPROTECTED PRIVATE KEY FILE!          @\r\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\nPermissions 0644 for '../../ssh-keys/.keys/my_key' are too open.\r\nIt is required that your private key files are NOT accessible by others.\r\nThis private key will be ignored.\r\nLoad key \"../../ssh-keys/.keys/my_key\": bad permissions\r\nroot@db.etcd.lan: Permission denied (publickey,password).",
    "unreachable": true
}
2025-02-27 12:16:40,679 p=1076 u=digitd n=ansible | db.test1.lan | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python3"
    },
    "changed": false,
    "ping": "pong"
}
2025-02-27 12:16:40,680 p=1076 u=digitd n=ansible | db.test.lan | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python3"
    },
    "changed": false,
    "ping": "pong"
}
2025-02-27 12:16:43,561 p=1076 u=digitd n=ansible | db.slave.lan | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python3"
    },
    "changed": false,
    "ping": "pong"
}
2025-02-27 12:16:43,581 p=1076 u=digitd n=ansible | db.etcd.lan | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python3"
    },
    "changed": false,
    "ping": "pong"
}
2025-02-27 12:16:44,352 p=1076 u=digitd n=ansible | db.master.lan | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python3"
    },
    "changed": false,
    "ping": "pong"
}
2025-02-28 11:35:03,666 p=953 u=digitd n=ansible | db.test.lan | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python3"
    },
    "changed": false,
    "ping": "pong"
}
2025-02-28 11:35:03,722 p=953 u=digitd n=ansible | db.test1.lan | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python3"
    },
    "changed": false,
    "ping": "pong"
}
2025-02-28 11:35:04,358 p=953 u=digitd n=ansible | db.master.lan | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python3.11"
    },
    "changed": false,
    "ping": "pong"
}
2025-02-28 11:35:04,463 p=953 u=digitd n=ansible | db.slave.lan | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python3.11"
    },
    "changed": false,
    "ping": "pong"
}
2025-02-28 11:35:04,620 p=953 u=digitd n=ansible | db.etcd.lan | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python3"
    },
    "changed": false,
    "ping": "pong"
}
2025-02-28 11:38:21,300 p=1728 u=digitd n=ansible | PLAY [Create directory for storing backups] ***********************************************************************************************************************************
2025-02-28 11:38:21,310 p=1728 u=digitd n=ansible | TASK [Create and setup rights] ************************************************************************************************************************************************
2025-02-28 11:38:22,237 p=1728 u=digitd n=ansible | changed: [db.etcd.lan]
2025-02-28 11:38:22,239 p=1728 u=digitd n=ansible | TASK [Create .ssh directory and authorized_keys file] *************************************************************************************************************************
2025-02-28 11:38:22,692 p=1728 u=digitd n=ansible | changed: [db.etcd.lan] => (item={'path': '/var/lib/postgresql/15/data/.ssh', 'state': 'directory', 'mode': '0700'})
2025-02-28 11:38:23,092 p=1728 u=digitd n=ansible | changed: [db.etcd.lan] => (item={'path': '/var/lib/postgresql/15/data/.ssh/authorized_keys', 'state': 'touch', 'mode': '0600'})
2025-02-28 11:38:23,107 p=1728 u=digitd n=ansible | PLAY [Setup pgbackrest (postgres backup tool) on the patroni nodes] ***********************************************************************************************************
2025-02-28 11:38:23,115 p=1728 u=digitd n=ansible | TASK [Ensure that pgbackrest package is installed] ****************************************************************************************************************************
2025-02-28 11:46:51,318 p=1728 u=digitd n=ansible | changed: [db.slave.lan]
2025-02-28 11:46:51,341 p=1728 u=digitd n=ansible | TASK [Copy files to the machines] *********************************************************************************************************************************************
2025-02-28 11:46:53,877 p=1728 u=digitd n=ansible | changed: [db.slave.lan]
2025-02-28 11:46:53,895 p=1728 u=digitd n=ansible | TASK [Generate keys] **********************************************************************************************************************************************************
2025-02-28 11:46:57,592 p=1728 u=digitd n=ansible | changed: [db.slave.lan]
2025-02-28 11:46:57,594 p=1728 u=digitd n=ansible | TASK [Scan sha1-hash] *********************************************************************************************************************************************************
2025-02-28 11:46:58,564 p=1728 u=digitd n=ansible | changed: [db.slave.lan]
2025-02-28 11:46:58,581 p=1728 u=digitd n=ansible | TASK [Start and enable pgbackrest service] ************************************************************************************************************************************
2025-02-28 11:47:04,889 p=1728 u=digitd n=ansible | fatal: [db.slave.lan]: FAILED! => {"changed": false, "msg": "Unable to start service pgbackrest: Job for pgbackrest.service failed because the control process exited with error code.\nSee \"systemctl status pgbackrest.service\" and \"journalctl -xeu pgbackrest.service\" for details.\n"}
2025-02-28 11:47:04,891 p=1728 u=digitd n=ansible | PLAY RECAP ********************************************************************************************************************************************************************
2025-02-28 11:47:04,905 p=1728 u=digitd n=ansible | db.etcd.lan                : ok=2    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2025-02-28 11:47:04,905 p=1728 u=digitd n=ansible | db.slave.lan               : ok=4    changed=4    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2025-02-28 11:50:40,996 p=4535 u=digitd n=ansible | PLAY [Create directory for storing backups] ***********************************************************************************************************************************
2025-02-28 11:50:41,011 p=4535 u=digitd n=ansible | TASK [Create and setup rights] ************************************************************************************************************************************************
2025-02-28 11:50:41,956 p=4535 u=digitd n=ansible | ok: [db.etcd.lan]
2025-02-28 11:50:41,959 p=4535 u=digitd n=ansible | TASK [Create .ssh directory and authorized_keys file] *************************************************************************************************************************
2025-02-28 11:50:42,389 p=4535 u=digitd n=ansible | ok: [db.etcd.lan] => (item={'path': '/var/lib/postgresql/15/data/.ssh', 'state': 'directory', 'mode': '0700'})
2025-02-28 11:50:42,788 p=4535 u=digitd n=ansible | changed: [db.etcd.lan] => (item={'path': '/var/lib/postgresql/15/data/.ssh/authorized_keys', 'state': 'touch', 'mode': '0600'})
2025-02-28 11:50:42,797 p=4535 u=digitd n=ansible | PLAY [Setup pgbackrest (postgres backup tool) on the patroni nodes] ***********************************************************************************************************
2025-02-28 11:50:42,802 p=4535 u=digitd n=ansible | TASK [Ensure that pgbackrest package is installed] ****************************************************************************************************************************
2025-02-28 11:50:46,591 p=4535 u=digitd n=ansible | ok: [db.slave.lan]
2025-02-28 11:50:46,595 p=4535 u=digitd n=ansible | TASK [Copy files to the machines] *********************************************************************************************************************************************
2025-02-28 11:50:47,483 p=4535 u=digitd n=ansible | ok: [db.slave.lan]
2025-02-28 11:50:47,486 p=4535 u=digitd n=ansible | TASK [Generate keys] **********************************************************************************************************************************************************
2025-02-28 11:53:12,024 p=4535 u=digitd n=ansible |  [ERROR]: User interrupted execution

2025-02-28 11:53:42,191 p=5521 u=digitd n=ansible | PLAY [Create directory for storing backups] ***********************************************************************************************************************************
2025-02-28 11:53:42,202 p=5521 u=digitd n=ansible | TASK [Create and setup rights] ************************************************************************************************************************************************
2025-02-28 11:53:43,144 p=5521 u=digitd n=ansible | ok: [db.etcd.lan]
2025-02-28 11:53:43,146 p=5521 u=digitd n=ansible | TASK [Create .ssh directory and authorized_keys file] *************************************************************************************************************************
2025-02-28 11:53:43,595 p=5521 u=digitd n=ansible | ok: [db.etcd.lan] => (item={'path': '/var/lib/postgresql/15/data/.ssh', 'state': 'directory', 'mode': '0700'})
2025-02-28 11:53:44,013 p=5521 u=digitd n=ansible | changed: [db.etcd.lan] => (item={'path': '/var/lib/postgresql/15/data/.ssh/authorized_keys', 'state': 'touch', 'mode': '0600'})
2025-02-28 11:53:44,021 p=5521 u=digitd n=ansible | PLAY [Setup pgbackrest (postgres backup tool) on the patroni nodes] ***********************************************************************************************************
2025-02-28 11:53:44,028 p=5521 u=digitd n=ansible | TASK [Ensure that pgbackrest package is installed] ****************************************************************************************************************************
2025-02-28 11:53:46,045 p=5521 u=digitd n=ansible | ok: [db.slave.lan]
2025-02-28 11:53:46,048 p=5521 u=digitd n=ansible | TASK [Copy files to the machines] *********************************************************************************************************************************************
2025-02-28 11:53:46,953 p=5521 u=digitd n=ansible | ok: [db.slave.lan]
2025-02-28 11:53:46,955 p=5521 u=digitd n=ansible | TASK [Generate keys] **********************************************************************************************************************************************************
2025-02-28 11:54:34,640 p=5521 u=digitd n=ansible |  [ERROR]: User interrupted execution

2025-02-28 11:54:49,199 p=6019 u=digitd n=ansible | PLAY [Create directory for storing backups] ***********************************************************************************************************************************
2025-02-28 11:54:49,207 p=6019 u=digitd n=ansible | TASK [Create and setup rights] ************************************************************************************************************************************************
2025-02-28 11:54:50,126 p=6019 u=digitd n=ansible | ok: [db.etcd.lan]
2025-02-28 11:54:50,128 p=6019 u=digitd n=ansible | TASK [Create .ssh directory and authorized_keys file] *************************************************************************************************************************
2025-02-28 11:54:50,567 p=6019 u=digitd n=ansible | ok: [db.etcd.lan] => (item={'path': '/var/lib/postgresql/15/data/.ssh', 'state': 'directory', 'mode': '0700'})
2025-02-28 11:54:50,975 p=6019 u=digitd n=ansible | changed: [db.etcd.lan] => (item={'path': '/var/lib/postgresql/15/data/.ssh/authorized_keys', 'state': 'touch', 'mode': '0600'})
2025-02-28 11:54:50,983 p=6019 u=digitd n=ansible | PLAY [Setup pgbackrest (postgres backup tool) on the patroni nodes] ***********************************************************************************************************
2025-02-28 11:54:50,999 p=6019 u=digitd n=ansible | TASK [Ensure that pgbackrest package is installed] ****************************************************************************************************************************
2025-02-28 11:54:52,929 p=6019 u=digitd n=ansible | ok: [db.slave.lan]
2025-02-28 11:54:52,932 p=6019 u=digitd n=ansible | TASK [Copy files to the machines] *********************************************************************************************************************************************
2025-02-28 11:54:53,853 p=6019 u=digitd n=ansible | ok: [db.slave.lan]
2025-02-28 11:54:53,855 p=6019 u=digitd n=ansible | TASK [Scan sha1-hash] *********************************************************************************************************************************************************
2025-02-28 11:54:54,825 p=6019 u=digitd n=ansible | changed: [db.slave.lan]
2025-02-28 11:54:54,827 p=6019 u=digitd n=ansible | TASK [Create stanza] **********************************************************************************************************************************************************
2025-02-28 11:54:55,294 p=6019 u=digitd n=ansible | fatal: [db.slave.lan]: FAILED! => {"changed": true, "cmd": ["sudo", "-u", "postgres", "pgbackrest", "--stanza=testcluster", "--log-level-console=info", "check"], "delta": "0:00:00.038787", "end": "2025-02-28 11:54:55.314120", "msg": "non-zero return code", "rc": 29, "start": "2025-02-28 11:54:55.275333", "stderr": "", "stderr_lines": [], "stdout": "P00  ERROR: [029]: key/value found outside of section at line 1: pg1-path=/var/lib/postgresql/15/data", "stdout_lines": ["P00  ERROR: [029]: key/value found outside of section at line 1: pg1-path=/var/lib/postgresql/15/data"]}
2025-02-28 11:54:55,294 p=6019 u=digitd n=ansible | PLAY RECAP ********************************************************************************************************************************************************************
2025-02-28 11:54:55,295 p=6019 u=digitd n=ansible | db.etcd.lan                : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2025-02-28 11:54:55,295 p=6019 u=digitd n=ansible | db.slave.lan               : ok=3    changed=1    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2025-02-28 11:56:41,141 p=6616 u=digitd n=ansible | PLAY [Create directory for storing backups] ***********************************************************************************************************************************
2025-02-28 11:56:41,149 p=6616 u=digitd n=ansible | TASK [Create and setup rights] ************************************************************************************************************************************************
2025-02-28 11:56:42,109 p=6616 u=digitd n=ansible | ok: [db.etcd.lan]
2025-02-28 11:56:42,112 p=6616 u=digitd n=ansible | TASK [Create .ssh directory and authorized_keys file] *************************************************************************************************************************
2025-02-28 11:56:42,547 p=6616 u=digitd n=ansible | ok: [db.etcd.lan] => (item={'path': '/var/lib/postgresql/15/data/.ssh', 'state': 'directory', 'mode': '0700'})
2025-02-28 11:56:42,975 p=6616 u=digitd n=ansible | changed: [db.etcd.lan] => (item={'path': '/var/lib/postgresql/15/data/.ssh/authorized_keys', 'state': 'touch', 'mode': '0600'})
2025-02-28 11:56:42,985 p=6616 u=digitd n=ansible | PLAY [Setup pgbackrest (postgres backup tool) on the patroni nodes] ***********************************************************************************************************
2025-02-28 11:56:42,990 p=6616 u=digitd n=ansible | TASK [Ensure that pgbackrest package is installed] ****************************************************************************************************************************
2025-02-28 11:56:45,280 p=6616 u=digitd n=ansible | ok: [db.slave.lan]
2025-02-28 11:56:45,284 p=6616 u=digitd n=ansible | TASK [Copy files to the machines] *********************************************************************************************************************************************
2025-02-28 11:56:46,139 p=6616 u=digitd n=ansible | ok: [db.slave.lan]
2025-02-28 11:56:46,142 p=6616 u=digitd n=ansible | TASK [Scan sha1-hash] *********************************************************************************************************************************************************
2025-02-28 11:56:47,121 p=6616 u=digitd n=ansible | changed: [db.slave.lan]
2025-02-28 11:56:47,123 p=6616 u=digitd n=ansible | TASK [Create stanza] **********************************************************************************************************************************************************
2025-02-28 11:56:47,586 p=6616 u=digitd n=ansible | fatal: [db.slave.lan]: FAILED! => {"changed": true, "cmd": ["sudo", "-u", "postgres", "pgbackrest", "--stanza=testcluster", "--log-level-console=info", "create-stanza"], "delta": "0:00:00.038210", "end": "2025-02-28 11:56:47.609307", "msg": "non-zero return code", "rc": 48, "start": "2025-02-28 11:56:47.571097", "stderr": "ERROR: [048]: invalid command 'create-stanza'", "stderr_lines": ["ERROR: [048]: invalid command 'create-stanza'"], "stdout": "", "stdout_lines": []}
2025-02-28 11:56:47,587 p=6616 u=digitd n=ansible | PLAY RECAP ********************************************************************************************************************************************************************
2025-02-28 11:56:47,588 p=6616 u=digitd n=ansible | db.etcd.lan                : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2025-02-28 11:56:47,588 p=6616 u=digitd n=ansible | db.slave.lan               : ok=3    changed=1    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2025-02-28 11:56:59,582 p=6908 u=digitd n=ansible | ansible-playbook [core 2.14.18]
  config file = /home/digitd/travelata_test/ansible/backup_setup/ansible.cfg
  configured module search path = ['/home/digitd/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3/dist-packages/ansible
  ansible collection location = /home/digitd/.ansible/collections:/usr/share/ansible/collections
  executable location = /usr/bin/ansible-playbook
  python version = 3.11.2 (main, Sep 14 2024, 03:00:30) [GCC 12.2.0] (/usr/bin/python3)
  jinja version = 3.1.2
  libyaml = True
2025-02-28 11:56:59,582 p=6908 u=digitd n=ansible | Using /home/digitd/travelata_test/ansible/backup_setup/ansible.cfg as config file
2025-02-28 11:56:59,698 p=6908 u=digitd n=ansible | Skipping callback 'default', as we already have a stdout callback.
2025-02-28 11:56:59,698 p=6908 u=digitd n=ansible | Skipping callback 'minimal', as we already have a stdout callback.
2025-02-28 11:56:59,698 p=6908 u=digitd n=ansible | Skipping callback 'oneline', as we already have a stdout callback.
2025-02-28 11:56:59,698 p=6908 u=digitd n=ansible | PLAYBOOK: setup_backup.yml ****************************************************************************************************************************************************
2025-02-28 11:56:59,698 p=6908 u=digitd n=ansible | 2 plays in ./setup_backup.yml
2025-02-28 11:56:59,699 p=6908 u=digitd n=ansible | PLAY [Create directory for storing backups] ***********************************************************************************************************************************
2025-02-28 11:56:59,709 p=6908 u=digitd n=ansible | TASK [Create and setup rights] ************************************************************************************************************************************************
2025-02-28 11:57:00,306 p=6908 u=digitd n=ansible | ok: [db.etcd.lan] => {"ansible_facts": {"discovered_interpreter_python": "/usr/bin/python3"}, "changed": false, "gid": 110, "group": "postgres", "mode": "0764", "owner": "postgres", "path": "/mnt/pgbackrest_backups", "size": 4096, "state": "directory", "uid": 102}
2025-02-28 11:57:00,308 p=6908 u=digitd n=ansible | TASK [Create .ssh directory and authorized_keys file] *************************************************************************************************************************
2025-02-28 11:57:00,756 p=6908 u=digitd n=ansible | ok: [db.etcd.lan] => (item={'path': '/var/lib/postgresql/15/data/.ssh', 'state': 'directory', 'mode': '0700'}) => {"ansible_loop_var": "item", "changed": false, "gid": 110, "group": "postgres", "item": {"mode": "0700", "path": "/var/lib/postgresql/15/data/.ssh", "state": "directory"}, "mode": "0700", "owner": "postgres", "path": "/var/lib/postgresql/15/data/.ssh", "size": 4096, "state": "directory", "uid": 102}
2025-02-28 11:57:01,169 p=6908 u=digitd n=ansible | changed: [db.etcd.lan] => (item={'path': '/var/lib/postgresql/15/data/.ssh/authorized_keys', 'state': 'touch', 'mode': '0600'}) => {"ansible_loop_var": "item", "changed": true, "dest": "/var/lib/postgresql/15/data/.ssh/authorized_keys", "gid": 110, "group": "postgres", "item": {"mode": "0600", "path": "/var/lib/postgresql/15/data/.ssh/authorized_keys", "state": "touch"}, "mode": "0600", "owner": "postgres", "size": 0, "state": "file", "uid": 102}
2025-02-28 11:57:01,177 p=6908 u=digitd n=ansible | PLAY [Setup pgbackrest (postgres backup tool) on the patroni nodes] ***********************************************************************************************************
2025-02-28 11:57:01,184 p=6908 u=digitd n=ansible | TASK [Ensure that pgbackrest package is installed] ****************************************************************************************************************************
2025-02-28 11:57:03,200 p=6908 u=digitd n=ansible | ok: [db.slave.lan] => {"ansible_facts": {"discovered_interpreter_python": "/usr/bin/python3.11"}, "cache_update_time": 1740727222, "cache_updated": false, "changed": false}
2025-02-28 11:57:03,202 p=6908 u=digitd n=ansible | TASK [Copy files to the machines] *********************************************************************************************************************************************
2025-02-28 11:57:04,060 p=6908 u=digitd n=ansible | ok: [db.slave.lan] => {"changed": false, "checksum": "1c1fbd82b49213764767cd19faf2efb5bde136a0", "dest": "/etc/pgbackrest.conf", "gid": 111, "group": "postgres", "mode": "0640", "owner": "postgres", "path": "/etc/pgbackrest.conf", "size": 552, "state": "file", "uid": 103}
2025-02-28 11:57:04,063 p=6908 u=digitd n=ansible | TASK [Scan sha1-hash] *********************************************************************************************************************************************************
2025-02-28 11:57:05,000 p=6908 u=digitd n=ansible | changed: [db.slave.lan] => {"changed": true, "cmd": ["sudo", "-u", "postgres", "ssh-keyscan", "-H", "db.etcd.lan", ">>", "/var/lib/postgresql/.ssh/known_hosts"], "delta": "0:00:00.422337", "end": "2025-02-28 11:57:04.990083", "msg": "", "rc": 0, "start": "2025-02-28 11:57:04.567746", "stderr": "getaddrinfo >>: Name or service not known\r\ngetaddrinfo >>: Name or service not known\r\ngetaddrinfo >>: Name or service not known\r\ngetaddrinfo >>: Name or service not known\r\ngetaddrinfo >>: Name or service not known\r\ngetaddrinfo /var/lib/postgresql/.ssh/known_hosts: Name or service not known\r\ngetaddrinfo /var/lib/postgresql/.ssh/known_hosts: Name or service not known\r\ngetaddrinfo /var/lib/postgresql/.ssh/known_hosts: Name or service not known\r\ngetaddrinfo /var/lib/postgresql/.ssh/known_hosts: Name or service not known\r\ngetaddrinfo /var/lib/postgresql/.ssh/known_hosts: Name or service not known", "stderr_lines": ["getaddrinfo >>: Name or service not known", "getaddrinfo >>: Name or service not known", "getaddrinfo >>: Name or service not known", "getaddrinfo >>: Name or service not known", "getaddrinfo >>: Name or service not known", "getaddrinfo /var/lib/postgresql/.ssh/known_hosts: Name or service not known", "getaddrinfo /var/lib/postgresql/.ssh/known_hosts: Name or service not known", "getaddrinfo /var/lib/postgresql/.ssh/known_hosts: Name or service not known", "getaddrinfo /var/lib/postgresql/.ssh/known_hosts: Name or service not known", "getaddrinfo /var/lib/postgresql/.ssh/known_hosts: Name or service not known"], "stdout": "# db.etcd.lan:22 SSH-2.0-OpenSSH_9.2p1 Debian-2+deb12u5\n|1|dPBIploGmmI033b/b1GJ1q8seSI=|bVlb1Bmqr+1hbhJWl6hwCwbxO+A= ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBN0skod/ZCxD3lltYw6hNIrGwdY2fpKwhnmxWL3Zs9JWXPGf4kaUxp40PAFr8npVzyuNNe94fzpzkym5zfiEp2E=\n# db.etcd.lan:22 SSH-2.0-OpenSSH_9.2p1 Debian-2+deb12u5\n|1|rwodoiPy3s4zs9xp3oygzpyFcrk=|CGgapjFG2YdDBNnvVn/BdtXAh88= ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCYYtwr+bKyS0H5pOMJsfddOblcEno3Ir8wPO/Qaiyu0LwmK6eRfnoEo6NgXCCNGM0PgcLIVuUMIImS7x6Htyh2EBYNkJwWmSy90ol5sUX7AdiploT+xxg7kA65MEE4tU+FtVyYygvd0mnSlQsUVXRL+w82sCLsC7ufpmBX2LQDiUhqjFvNRuIyfm4PH+e06mYqOT3h+9bIFLrIuGBLEWLtbl488nAmBtzzn6ahvctrvYPrH0W0jlpM7Qk69LMz8156aZHTot9LIVotZlnqSmxV41I2E4Y/VGuAVavbicKg4JqimU9kSJz7pNRZb771pDU4QBJxeRXipWXDWsVOkL3wZPsjWDKDfqW5aQERWITCQ0inhjO/H993zgMTqVGlbJeCvwakCe0F0y1/js7iGe8ZaH6IwQpp46sgg4cad9itdWejjPrgsLx8HE7f6Eo9Ue2S7OZhIp6vN6PWIUX+e/ARq4Qebyl3quCku0ZVAXgi4aH5c0Kc3niPAOc5hT/jM9c=\n# db.etcd.lan:22 SSH-2.0-OpenSSH_9.2p1 Debian-2+deb12u5\n|1|Yy8smz4JkuLmPnL2Vu9xj8V+Axk=|co209F2pUA4jI0+Z3l0UgVGaQSU= ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIL/ZaaTZgBm91hbmIrW7xo4q28fr4Cg6DCQwx/JJT3On\n# db.etcd.lan:22 SSH-2.0-OpenSSH_9.2p1 Debian-2+deb12u5\n# db.etcd.lan:22 SSH-2.0-OpenSSH_9.2p1 Debian-2+deb12u5", "stdout_lines": ["# db.etcd.lan:22 SSH-2.0-OpenSSH_9.2p1 Debian-2+deb12u5", "|1|dPBIploGmmI033b/b1GJ1q8seSI=|bVlb1Bmqr+1hbhJWl6hwCwbxO+A= ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBN0skod/ZCxD3lltYw6hNIrGwdY2fpKwhnmxWL3Zs9JWXPGf4kaUxp40PAFr8npVzyuNNe94fzpzkym5zfiEp2E=", "# db.etcd.lan:22 SSH-2.0-OpenSSH_9.2p1 Debian-2+deb12u5", "|1|rwodoiPy3s4zs9xp3oygzpyFcrk=|CGgapjFG2YdDBNnvVn/BdtXAh88= ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCYYtwr+bKyS0H5pOMJsfddOblcEno3Ir8wPO/Qaiyu0LwmK6eRfnoEo6NgXCCNGM0PgcLIVuUMIImS7x6Htyh2EBYNkJwWmSy90ol5sUX7AdiploT+xxg7kA65MEE4tU+FtVyYygvd0mnSlQsUVXRL+w82sCLsC7ufpmBX2LQDiUhqjFvNRuIyfm4PH+e06mYqOT3h+9bIFLrIuGBLEWLtbl488nAmBtzzn6ahvctrvYPrH0W0jlpM7Qk69LMz8156aZHTot9LIVotZlnqSmxV41I2E4Y/VGuAVavbicKg4JqimU9kSJz7pNRZb771pDU4QBJxeRXipWXDWsVOkL3wZPsjWDKDfqW5aQERWITCQ0inhjO/H993zgMTqVGlbJeCvwakCe0F0y1/js7iGe8ZaH6IwQpp46sgg4cad9itdWejjPrgsLx8HE7f6Eo9Ue2S7OZhIp6vN6PWIUX+e/ARq4Qebyl3quCku0ZVAXgi4aH5c0Kc3niPAOc5hT/jM9c=", "# db.etcd.lan:22 SSH-2.0-OpenSSH_9.2p1 Debian-2+deb12u5", "|1|Yy8smz4JkuLmPnL2Vu9xj8V+Axk=|co209F2pUA4jI0+Z3l0UgVGaQSU= ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIL/ZaaTZgBm91hbmIrW7xo4q28fr4Cg6DCQwx/JJT3On", "# db.etcd.lan:22 SSH-2.0-OpenSSH_9.2p1 Debian-2+deb12u5", "# db.etcd.lan:22 SSH-2.0-OpenSSH_9.2p1 Debian-2+deb12u5"]}
2025-02-28 11:57:05,002 p=6908 u=digitd n=ansible | TASK [Create stanza] **********************************************************************************************************************************************************
2025-02-28 11:57:05,583 p=6908 u=digitd n=ansible | fatal: [db.slave.lan]: FAILED! => {"changed": true, "cmd": ["sudo", "-u", "postgres", "pgbackrest", "--stanza=testcluster", "--log-level-console=info", "create-stanza"], "delta": "0:00:00.037742", "end": "2025-02-28 11:57:05.600885", "msg": "non-zero return code", "rc": 48, "start": "2025-02-28 11:57:05.563143", "stderr": "ERROR: [048]: invalid command 'create-stanza'", "stderr_lines": ["ERROR: [048]: invalid command 'create-stanza'"], "stdout": "", "stdout_lines": []}
2025-02-28 11:57:05,584 p=6908 u=digitd n=ansible | PLAY RECAP ********************************************************************************************************************************************************************
2025-02-28 11:57:05,585 p=6908 u=digitd n=ansible | db.etcd.lan                : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2025-02-28 11:57:05,585 p=6908 u=digitd n=ansible | db.slave.lan               : ok=3    changed=1    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2025-02-28 12:00:23,580 p=8013 u=digitd n=ansible | ansible-playbook [core 2.14.18]
  config file = /home/digitd/travelata_test/ansible/backup_setup/ansible.cfg
  configured module search path = ['/home/digitd/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3/dist-packages/ansible
  ansible collection location = /home/digitd/.ansible/collections:/usr/share/ansible/collections
  executable location = /usr/bin/ansible-playbook
  python version = 3.11.2 (main, Sep 14 2024, 03:00:30) [GCC 12.2.0] (/usr/bin/python3)
  jinja version = 3.1.2
  libyaml = True
2025-02-28 12:00:23,581 p=8013 u=digitd n=ansible | Using /home/digitd/travelata_test/ansible/backup_setup/ansible.cfg as config file
2025-02-28 12:00:23,707 p=8013 u=digitd n=ansible | Skipping callback 'default', as we already have a stdout callback.
2025-02-28 12:00:23,707 p=8013 u=digitd n=ansible | Skipping callback 'minimal', as we already have a stdout callback.
2025-02-28 12:00:23,707 p=8013 u=digitd n=ansible | Skipping callback 'oneline', as we already have a stdout callback.
2025-02-28 12:00:23,708 p=8013 u=digitd n=ansible | PLAYBOOK: setup_backup.yml ****************************************************************************************************************************************************
2025-02-28 12:00:23,708 p=8013 u=digitd n=ansible | 2 plays in ./setup_backup.yml
2025-02-28 12:00:23,709 p=8013 u=digitd n=ansible | PLAY [Create directory for storing backups] ***********************************************************************************************************************************
2025-02-28 12:00:23,720 p=8013 u=digitd n=ansible | TASK [Create and setup rights] ************************************************************************************************************************************************
2025-02-28 12:00:24,627 p=8013 u=digitd n=ansible | ok: [db.etcd.lan] => {"ansible_facts": {"discovered_interpreter_python": "/usr/bin/python3"}, "changed": false, "gid": 110, "group": "postgres", "mode": "0764", "owner": "postgres", "path": "/mnt/pgbackrest_backups", "size": 4096, "state": "directory", "uid": 102}
2025-02-28 12:00:24,629 p=8013 u=digitd n=ansible | TASK [Create .ssh directory and authorized_keys file] *************************************************************************************************************************
2025-02-28 12:00:25,064 p=8013 u=digitd n=ansible | ok: [db.etcd.lan] => (item={'path': '/var/lib/postgresql/15/data/.ssh', 'state': 'directory', 'mode': '0700'}) => {"ansible_loop_var": "item", "changed": false, "gid": 110, "group": "postgres", "item": {"mode": "0700", "path": "/var/lib/postgresql/15/data/.ssh", "state": "directory"}, "mode": "0700", "owner": "postgres", "path": "/var/lib/postgresql/15/data/.ssh", "size": 4096, "state": "directory", "uid": 102}
2025-02-28 12:00:25,459 p=8013 u=digitd n=ansible | changed: [db.etcd.lan] => (item={'path': '/var/lib/postgresql/15/data/.ssh/authorized_keys', 'state': 'touch', 'mode': '0600'}) => {"ansible_loop_var": "item", "changed": true, "dest": "/var/lib/postgresql/15/data/.ssh/authorized_keys", "gid": 110, "group": "postgres", "item": {"mode": "0600", "path": "/var/lib/postgresql/15/data/.ssh/authorized_keys", "state": "touch"}, "mode": "0600", "owner": "postgres", "size": 0, "state": "file", "uid": 102}
2025-02-28 12:00:25,470 p=8013 u=digitd n=ansible | PLAY [Setup pgbackrest (postgres backup tool) on the patroni nodes] ***********************************************************************************************************
2025-02-28 12:00:25,480 p=8013 u=digitd n=ansible | TASK [Ensure that pgbackrest package is installed] ****************************************************************************************************************************
2025-02-28 12:00:49,423 p=8013 u=digitd n=ansible | ok: [db.slave.lan] => {"ansible_facts": {"discovered_interpreter_python": "/usr/bin/python3.11"}, "cache_update_time": 1740733242, "cache_updated": true, "changed": false}
2025-02-28 12:00:49,426 p=8013 u=digitd n=ansible | TASK [Copy files to the machines] *********************************************************************************************************************************************
2025-02-28 12:00:50,269 p=8013 u=digitd n=ansible | ok: [db.slave.lan] => {"changed": false, "checksum": "1c1fbd82b49213764767cd19faf2efb5bde136a0", "dest": "/etc/pgbackrest.conf", "gid": 111, "group": "postgres", "mode": "0640", "owner": "postgres", "path": "/etc/pgbackrest.conf", "size": 552, "state": "file", "uid": 103}
2025-02-28 12:00:50,271 p=8013 u=digitd n=ansible | TASK [Scan sha1-hash] *********************************************************************************************************************************************************
2025-02-28 12:00:51,268 p=8013 u=digitd n=ansible | changed: [db.slave.lan] => {"changed": true, "cmd": ["sudo", "-u", "postgres", "ssh-keyscan", "-H", "db.etcd.lan", ">>", "/var/lib/postgresql/.ssh/known_hosts"], "delta": "0:00:00.437349", "end": "2025-02-28 12:00:51.293252", "msg": "", "rc": 0, "start": "2025-02-28 12:00:50.855903", "stderr": "getaddrinfo >>: Name or service not known\r\ngetaddrinfo >>: Name or service not known\r\ngetaddrinfo >>: Name or service not known\r\ngetaddrinfo >>: Name or service not known\r\ngetaddrinfo >>: Name or service not known\r\ngetaddrinfo /var/lib/postgresql/.ssh/known_hosts: Name or service not known\r\ngetaddrinfo /var/lib/postgresql/.ssh/known_hosts: Name or service not known\r\ngetaddrinfo /var/lib/postgresql/.ssh/known_hosts: Name or service not known\r\ngetaddrinfo /var/lib/postgresql/.ssh/known_hosts: Name or service not known\r\ngetaddrinfo /var/lib/postgresql/.ssh/known_hosts: Name or service not known", "stderr_lines": ["getaddrinfo >>: Name or service not known", "getaddrinfo >>: Name or service not known", "getaddrinfo >>: Name or service not known", "getaddrinfo >>: Name or service not known", "getaddrinfo >>: Name or service not known", "getaddrinfo /var/lib/postgresql/.ssh/known_hosts: Name or service not known", "getaddrinfo /var/lib/postgresql/.ssh/known_hosts: Name or service not known", "getaddrinfo /var/lib/postgresql/.ssh/known_hosts: Name or service not known", "getaddrinfo /var/lib/postgresql/.ssh/known_hosts: Name or service not known", "getaddrinfo /var/lib/postgresql/.ssh/known_hosts: Name or service not known"], "stdout": "# db.etcd.lan:22 SSH-2.0-OpenSSH_9.2p1 Debian-2+deb12u5\n# db.etcd.lan:22 SSH-2.0-OpenSSH_9.2p1 Debian-2+deb12u5\n|1|TuSoFMszub5it4xsy2JJqPERTDk=|3jZISBksBBRokpm0Uh/j9f3+UBc= ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCYYtwr+bKyS0H5pOMJsfddOblcEno3Ir8wPO/Qaiyu0LwmK6eRfnoEo6NgXCCNGM0PgcLIVuUMIImS7x6Htyh2EBYNkJwWmSy90ol5sUX7AdiploT+xxg7kA65MEE4tU+FtVyYygvd0mnSlQsUVXRL+w82sCLsC7ufpmBX2LQDiUhqjFvNRuIyfm4PH+e06mYqOT3h+9bIFLrIuGBLEWLtbl488nAmBtzzn6ahvctrvYPrH0W0jlpM7Qk69LMz8156aZHTot9LIVotZlnqSmxV41I2E4Y/VGuAVavbicKg4JqimU9kSJz7pNRZb771pDU4QBJxeRXipWXDWsVOkL3wZPsjWDKDfqW5aQERWITCQ0inhjO/H993zgMTqVGlbJeCvwakCe0F0y1/js7iGe8ZaH6IwQpp46sgg4cad9itdWejjPrgsLx8HE7f6Eo9Ue2S7OZhIp6vN6PWIUX+e/ARq4Qebyl3quCku0ZVAXgi4aH5c0Kc3niPAOc5hT/jM9c=\n# db.etcd.lan:22 SSH-2.0-OpenSSH_9.2p1 Debian-2+deb12u5\n|1|+IJO3k9UI4GwXI6PGtGT6r+lWEk=|KxO0qSenfG6dZS9IrxMCEYqVFUg= ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBN0skod/ZCxD3lltYw6hNIrGwdY2fpKwhnmxWL3Zs9JWXPGf4kaUxp40PAFr8npVzyuNNe94fzpzkym5zfiEp2E=\n# db.etcd.lan:22 SSH-2.0-OpenSSH_9.2p1 Debian-2+deb12u5\n|1|EH1VGl0hPaBn2WAcFwMYXQZeiL0=|SgzJHhiN+koCeH5DurszjQ38eG0= ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIL/ZaaTZgBm91hbmIrW7xo4q28fr4Cg6DCQwx/JJT3On\n# db.etcd.lan:22 SSH-2.0-OpenSSH_9.2p1 Debian-2+deb12u5", "stdout_lines": ["# db.etcd.lan:22 SSH-2.0-OpenSSH_9.2p1 Debian-2+deb12u5", "# db.etcd.lan:22 SSH-2.0-OpenSSH_9.2p1 Debian-2+deb12u5", "|1|TuSoFMszub5it4xsy2JJqPERTDk=|3jZISBksBBRokpm0Uh/j9f3+UBc= ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCYYtwr+bKyS0H5pOMJsfddOblcEno3Ir8wPO/Qaiyu0LwmK6eRfnoEo6NgXCCNGM0PgcLIVuUMIImS7x6Htyh2EBYNkJwWmSy90ol5sUX7AdiploT+xxg7kA65MEE4tU+FtVyYygvd0mnSlQsUVXRL+w82sCLsC7ufpmBX2LQDiUhqjFvNRuIyfm4PH+e06mYqOT3h+9bIFLrIuGBLEWLtbl488nAmBtzzn6ahvctrvYPrH0W0jlpM7Qk69LMz8156aZHTot9LIVotZlnqSmxV41I2E4Y/VGuAVavbicKg4JqimU9kSJz7pNRZb771pDU4QBJxeRXipWXDWsVOkL3wZPsjWDKDfqW5aQERWITCQ0inhjO/H993zgMTqVGlbJeCvwakCe0F0y1/js7iGe8ZaH6IwQpp46sgg4cad9itdWejjPrgsLx8HE7f6Eo9Ue2S7OZhIp6vN6PWIUX+e/ARq4Qebyl3quCku0ZVAXgi4aH5c0Kc3niPAOc5hT/jM9c=", "# db.etcd.lan:22 SSH-2.0-OpenSSH_9.2p1 Debian-2+deb12u5", "|1|+IJO3k9UI4GwXI6PGtGT6r+lWEk=|KxO0qSenfG6dZS9IrxMCEYqVFUg= ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBN0skod/ZCxD3lltYw6hNIrGwdY2fpKwhnmxWL3Zs9JWXPGf4kaUxp40PAFr8npVzyuNNe94fzpzkym5zfiEp2E=", "# db.etcd.lan:22 SSH-2.0-OpenSSH_9.2p1 Debian-2+deb12u5", "|1|EH1VGl0hPaBn2WAcFwMYXQZeiL0=|SgzJHhiN+koCeH5DurszjQ38eG0= ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIL/ZaaTZgBm91hbmIrW7xo4q28fr4Cg6DCQwx/JJT3On", "# db.etcd.lan:22 SSH-2.0-OpenSSH_9.2p1 Debian-2+deb12u5"]}
2025-02-28 12:00:51,283 p=8013 u=digitd n=ansible | TASK [Create stanza] **********************************************************************************************************************************************************
2025-02-28 12:00:51,742 p=8013 u=digitd n=ansible | fatal: [db.slave.lan]: FAILED! => {"changed": true, "cmd": "sudo -u postgres pgbackrest --stanza=testcluster --log-level-console=info create-stanza", "delta": "0:00:00.032020", "end": "2025-02-28 12:00:51.768541", "msg": "non-zero return code", "rc": 48, "start": "2025-02-28 12:00:51.736521", "stderr": "ERROR: [048]: invalid command 'create-stanza'", "stderr_lines": ["ERROR: [048]: invalid command 'create-stanza'"], "stdout": "", "stdout_lines": []}
2025-02-28 12:00:51,743 p=8013 u=digitd n=ansible | PLAY RECAP ********************************************************************************************************************************************************************
2025-02-28 12:00:51,743 p=8013 u=digitd n=ansible | db.etcd.lan                : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2025-02-28 12:00:51,743 p=8013 u=digitd n=ansible | db.slave.lan               : ok=3    changed=1    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2025-02-28 12:48:50,317 p=20522 u=digitd n=ansible | ansible-playbook [core 2.14.18]
  config file = /home/digitd/travelata_test/ansible/backup_setup/ansible.cfg
  configured module search path = ['/home/digitd/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3/dist-packages/ansible
  ansible collection location = /home/digitd/.ansible/collections:/usr/share/ansible/collections
  executable location = /usr/bin/ansible-playbook
  python version = 3.11.2 (main, Sep 14 2024, 03:00:30) [GCC 12.2.0] (/usr/bin/python3)
  jinja version = 3.1.2
  libyaml = True
2025-02-28 12:48:50,318 p=20522 u=digitd n=ansible | Using /home/digitd/travelata_test/ansible/backup_setup/ansible.cfg as config file
2025-02-28 12:48:50,635 p=20522 u=digitd n=ansible | Skipping callback 'default', as we already have a stdout callback.
2025-02-28 12:48:50,635 p=20522 u=digitd n=ansible | Skipping callback 'minimal', as we already have a stdout callback.
2025-02-28 12:48:50,635 p=20522 u=digitd n=ansible | Skipping callback 'oneline', as we already have a stdout callback.
2025-02-28 12:48:50,635 p=20522 u=digitd n=ansible | PLAYBOOK: setup_backup.yml ****************************************************************************************************************************************************
2025-02-28 12:48:50,635 p=20522 u=digitd n=ansible | 2 plays in ./setup_backup.yml
2025-02-28 12:48:50,636 p=20522 u=digitd n=ansible | PLAY [Create directory for storing backups] ***********************************************************************************************************************************
2025-02-28 12:48:50,657 p=20522 u=digitd n=ansible | TASK [Create and setup rights] ************************************************************************************************************************************************
2025-02-28 12:48:51,632 p=20522 u=digitd n=ansible | ok: [db.etcd.lan] => {"ansible_facts": {"discovered_interpreter_python": "/usr/bin/python3"}, "changed": false, "gid": 110, "group": "postgres", "mode": "0764", "owner": "postgres", "path": "/mnt/pgbackrest_backups", "size": 4096, "state": "directory", "uid": 102}
2025-02-28 12:48:51,634 p=20522 u=digitd n=ansible | TASK [Create .ssh directory and authorized_keys file] *************************************************************************************************************************
2025-02-28 12:48:52,072 p=20522 u=digitd n=ansible | ok: [db.etcd.lan] => (item={'path': '/var/lib/postgresql/15/data/.ssh', 'state': 'directory', 'mode': '0700'}) => {"ansible_loop_var": "item", "changed": false, "gid": 110, "group": "postgres", "item": {"mode": "0700", "path": "/var/lib/postgresql/15/data/.ssh", "state": "directory"}, "mode": "0700", "owner": "postgres", "path": "/var/lib/postgresql/15/data/.ssh", "size": 4096, "state": "directory", "uid": 102}
2025-02-28 12:48:52,493 p=20522 u=digitd n=ansible | changed: [db.etcd.lan] => (item={'path': '/var/lib/postgresql/15/data/.ssh/authorized_keys', 'state': 'touch', 'mode': '0600'}) => {"ansible_loop_var": "item", "changed": true, "dest": "/var/lib/postgresql/15/data/.ssh/authorized_keys", "gid": 110, "group": "postgres", "item": {"mode": "0600", "path": "/var/lib/postgresql/15/data/.ssh/authorized_keys", "state": "touch"}, "mode": "0600", "owner": "postgres", "size": 0, "state": "file", "uid": 102}
2025-02-28 12:48:52,521 p=20522 u=digitd n=ansible | PLAY [Setup pgbackrest (postgres backup tool) on the patroni nodes] ***********************************************************************************************************
2025-02-28 12:48:52,528 p=20522 u=digitd n=ansible | TASK [Ensure that pgbackrest package is installed] ****************************************************************************************************************************
2025-02-28 12:48:55,531 p=20522 u=digitd n=ansible | ok: [db.slave.lan] => {"ansible_facts": {"discovered_interpreter_python": "/usr/bin/python3.11"}, "cache_update_time": 1740733242, "cache_updated": false, "changed": false}
2025-02-28 12:48:55,547 p=20522 u=digitd n=ansible | TASK [Copy files to the machines] *********************************************************************************************************************************************
2025-02-28 12:48:56,518 p=20522 u=digitd n=ansible | ok: [db.slave.lan] => {"changed": false, "checksum": "1c1fbd82b49213764767cd19faf2efb5bde136a0", "dest": "/etc/pgbackrest.conf", "gid": 111, "group": "postgres", "mode": "0640", "owner": "postgres", "path": "/etc/pgbackrest.conf", "size": 552, "state": "file", "uid": 103}
2025-02-28 12:48:56,521 p=20522 u=digitd n=ansible | TASK [Generate keys] **********************************************************************************************************************************************************
2025-02-28 12:49:32,650 p=20522 u=digitd n=ansible |  [ERROR]: User interrupted execution

2025-02-28 12:49:39,693 p=20861 u=digitd n=ansible | ansible-playbook [core 2.14.18]
  config file = /home/digitd/travelata_test/ansible/backup_setup/ansible.cfg
  configured module search path = ['/home/digitd/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3/dist-packages/ansible
  ansible collection location = /home/digitd/.ansible/collections:/usr/share/ansible/collections
  executable location = /usr/bin/ansible-playbook
  python version = 3.11.2 (main, Sep 14 2024, 03:00:30) [GCC 12.2.0] (/usr/bin/python3)
  jinja version = 3.1.2
  libyaml = True
2025-02-28 12:49:39,693 p=20861 u=digitd n=ansible | Using /home/digitd/travelata_test/ansible/backup_setup/ansible.cfg as config file
2025-02-28 12:49:39,865 p=20861 u=digitd n=ansible | Skipping callback 'default', as we already have a stdout callback.
2025-02-28 12:49:39,865 p=20861 u=digitd n=ansible | Skipping callback 'minimal', as we already have a stdout callback.
2025-02-28 12:49:39,865 p=20861 u=digitd n=ansible | Skipping callback 'oneline', as we already have a stdout callback.
2025-02-28 12:49:39,865 p=20861 u=digitd n=ansible | PLAYBOOK: setup_backup.yml ****************************************************************************************************************************************************
2025-02-28 12:49:39,865 p=20861 u=digitd n=ansible | 2 plays in ./setup_backup.yml
2025-02-28 12:49:39,866 p=20861 u=digitd n=ansible | PLAY [Create directory for storing backups] ***********************************************************************************************************************************
2025-02-28 12:49:39,876 p=20861 u=digitd n=ansible | TASK [Create and setup rights] ************************************************************************************************************************************************
2025-02-28 12:49:40,524 p=20861 u=digitd n=ansible | ok: [db.etcd.lan] => {"ansible_facts": {"discovered_interpreter_python": "/usr/bin/python3"}, "changed": false, "gid": 110, "group": "postgres", "mode": "0764", "owner": "postgres", "path": "/mnt/pgbackrest_backups", "size": 4096, "state": "directory", "uid": 102}
2025-02-28 12:49:40,527 p=20861 u=digitd n=ansible | TASK [Create .ssh directory and authorized_keys file] *************************************************************************************************************************
2025-02-28 12:49:40,962 p=20861 u=digitd n=ansible | ok: [db.etcd.lan] => (item={'path': '/var/lib/postgresql/15/data/.ssh', 'state': 'directory', 'mode': '0700'}) => {"ansible_loop_var": "item", "changed": false, "gid": 110, "group": "postgres", "item": {"mode": "0700", "path": "/var/lib/postgresql/15/data/.ssh", "state": "directory"}, "mode": "0700", "owner": "postgres", "path": "/var/lib/postgresql/15/data/.ssh", "size": 4096, "state": "directory", "uid": 102}
2025-02-28 12:49:41,384 p=20861 u=digitd n=ansible | changed: [db.etcd.lan] => (item={'path': '/var/lib/postgresql/15/data/.ssh/authorized_keys', 'state': 'touch', 'mode': '0600'}) => {"ansible_loop_var": "item", "changed": true, "dest": "/var/lib/postgresql/15/data/.ssh/authorized_keys", "gid": 110, "group": "postgres", "item": {"mode": "0600", "path": "/var/lib/postgresql/15/data/.ssh/authorized_keys", "state": "touch"}, "mode": "0600", "owner": "postgres", "size": 0, "state": "file", "uid": 102}
2025-02-28 12:49:41,391 p=20861 u=digitd n=ansible | PLAY [Setup pgbackrest (postgres backup tool) on the patroni nodes] ***********************************************************************************************************
2025-02-28 12:49:41,398 p=20861 u=digitd n=ansible | TASK [Ensure that pgbackrest package is installed] ****************************************************************************************************************************
2025-02-28 12:49:43,330 p=20861 u=digitd n=ansible | ok: [db.slave.lan] => {"ansible_facts": {"discovered_interpreter_python": "/usr/bin/python3.11"}, "cache_update_time": 1740733242, "cache_updated": false, "changed": false}
2025-02-28 12:49:43,333 p=20861 u=digitd n=ansible | TASK [Copy files to the machines] *********************************************************************************************************************************************
2025-02-28 12:49:44,219 p=20861 u=digitd n=ansible | ok: [db.slave.lan] => {"changed": false, "checksum": "1c1fbd82b49213764767cd19faf2efb5bde136a0", "dest": "/etc/pgbackrest.conf", "gid": 111, "group": "postgres", "mode": "0640", "owner": "postgres", "path": "/etc/pgbackrest.conf", "size": 552, "state": "file", "uid": 103}
2025-02-28 12:49:44,222 p=20861 u=digitd n=ansible | TASK [Scan sha1-hash] *********************************************************************************************************************************************************
2025-02-28 12:49:45,194 p=20861 u=digitd n=ansible | changed: [db.slave.lan] => {"changed": true, "cmd": ["sudo", "-u", "postgres", "ssh-keyscan", "-H", "db.etcd.lan", ">>", "/var/lib/postgresql/.ssh/known_hosts"], "delta": "0:00:00.425983", "end": "2025-02-28 12:49:45.225142", "msg": "", "rc": 0, "start": "2025-02-28 12:49:44.799159", "stderr": "getaddrinfo >>: Name or service not known\r\ngetaddrinfo >>: Name or service not known\r\ngetaddrinfo >>: Name or service not known\r\ngetaddrinfo >>: Name or service not known\r\ngetaddrinfo >>: Name or service not known\r\ngetaddrinfo /var/lib/postgresql/.ssh/known_hosts: Name or service not known\r\ngetaddrinfo /var/lib/postgresql/.ssh/known_hosts: Name or service not known\r\ngetaddrinfo /var/lib/postgresql/.ssh/known_hosts: Name or service not known\r\ngetaddrinfo /var/lib/postgresql/.ssh/known_hosts: Name or service not known\r\ngetaddrinfo /var/lib/postgresql/.ssh/known_hosts: Name or service not known", "stderr_lines": ["getaddrinfo >>: Name or service not known", "getaddrinfo >>: Name or service not known", "getaddrinfo >>: Name or service not known", "getaddrinfo >>: Name or service not known", "getaddrinfo >>: Name or service not known", "getaddrinfo /var/lib/postgresql/.ssh/known_hosts: Name or service not known", "getaddrinfo /var/lib/postgresql/.ssh/known_hosts: Name or service not known", "getaddrinfo /var/lib/postgresql/.ssh/known_hosts: Name or service not known", "getaddrinfo /var/lib/postgresql/.ssh/known_hosts: Name or service not known", "getaddrinfo /var/lib/postgresql/.ssh/known_hosts: Name or service not known"], "stdout": "# db.etcd.lan:22 SSH-2.0-OpenSSH_9.2p1 Debian-2+deb12u5\n|1|tLYSWJyQKFsfDIOhLSQI++1rZRk=|2iJp3eWohq/Cw2EtXPWhz8Oiy+8= ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCYYtwr+bKyS0H5pOMJsfddOblcEno3Ir8wPO/Qaiyu0LwmK6eRfnoEo6NgXCCNGM0PgcLIVuUMIImS7x6Htyh2EBYNkJwWmSy90ol5sUX7AdiploT+xxg7kA65MEE4tU+FtVyYygvd0mnSlQsUVXRL+w82sCLsC7ufpmBX2LQDiUhqjFvNRuIyfm4PH+e06mYqOT3h+9bIFLrIuGBLEWLtbl488nAmBtzzn6ahvctrvYPrH0W0jlpM7Qk69LMz8156aZHTot9LIVotZlnqSmxV41I2E4Y/VGuAVavbicKg4JqimU9kSJz7pNRZb771pDU4QBJxeRXipWXDWsVOkL3wZPsjWDKDfqW5aQERWITCQ0inhjO/H993zgMTqVGlbJeCvwakCe0F0y1/js7iGe8ZaH6IwQpp46sgg4cad9itdWejjPrgsLx8HE7f6Eo9Ue2S7OZhIp6vN6PWIUX+e/ARq4Qebyl3quCku0ZVAXgi4aH5c0Kc3niPAOc5hT/jM9c=\n# db.etcd.lan:22 SSH-2.0-OpenSSH_9.2p1 Debian-2+deb12u5\n|1|YmtuA4D94oRPFgDRDZNC3Yz9hh0=|ob2Nb/UQII1Z1uAeMEQMtiMdr4Q= ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBN0skod/ZCxD3lltYw6hNIrGwdY2fpKwhnmxWL3Zs9JWXPGf4kaUxp40PAFr8npVzyuNNe94fzpzkym5zfiEp2E=\n# db.etcd.lan:22 SSH-2.0-OpenSSH_9.2p1 Debian-2+deb12u5\n|1|hnMILB6z1vmEtxViOaIlLhSsi4g=|pbE9ldhQepat9rSSRlD3SMmEniw= ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIL/ZaaTZgBm91hbmIrW7xo4q28fr4Cg6DCQwx/JJT3On\n# db.etcd.lan:22 SSH-2.0-OpenSSH_9.2p1 Debian-2+deb12u5\n# db.etcd.lan:22 SSH-2.0-OpenSSH_9.2p1 Debian-2+deb12u5", "stdout_lines": ["# db.etcd.lan:22 SSH-2.0-OpenSSH_9.2p1 Debian-2+deb12u5", "|1|tLYSWJyQKFsfDIOhLSQI++1rZRk=|2iJp3eWohq/Cw2EtXPWhz8Oiy+8= ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCYYtwr+bKyS0H5pOMJsfddOblcEno3Ir8wPO/Qaiyu0LwmK6eRfnoEo6NgXCCNGM0PgcLIVuUMIImS7x6Htyh2EBYNkJwWmSy90ol5sUX7AdiploT+xxg7kA65MEE4tU+FtVyYygvd0mnSlQsUVXRL+w82sCLsC7ufpmBX2LQDiUhqjFvNRuIyfm4PH+e06mYqOT3h+9bIFLrIuGBLEWLtbl488nAmBtzzn6ahvctrvYPrH0W0jlpM7Qk69LMz8156aZHTot9LIVotZlnqSmxV41I2E4Y/VGuAVavbicKg4JqimU9kSJz7pNRZb771pDU4QBJxeRXipWXDWsVOkL3wZPsjWDKDfqW5aQERWITCQ0inhjO/H993zgMTqVGlbJeCvwakCe0F0y1/js7iGe8ZaH6IwQpp46sgg4cad9itdWejjPrgsLx8HE7f6Eo9Ue2S7OZhIp6vN6PWIUX+e/ARq4Qebyl3quCku0ZVAXgi4aH5c0Kc3niPAOc5hT/jM9c=", "# db.etcd.lan:22 SSH-2.0-OpenSSH_9.2p1 Debian-2+deb12u5", "|1|YmtuA4D94oRPFgDRDZNC3Yz9hh0=|ob2Nb/UQII1Z1uAeMEQMtiMdr4Q= ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBN0skod/ZCxD3lltYw6hNIrGwdY2fpKwhnmxWL3Zs9JWXPGf4kaUxp40PAFr8npVzyuNNe94fzpzkym5zfiEp2E=", "# db.etcd.lan:22 SSH-2.0-OpenSSH_9.2p1 Debian-2+deb12u5", "|1|hnMILB6z1vmEtxViOaIlLhSsi4g=|pbE9ldhQepat9rSSRlD3SMmEniw= ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIL/ZaaTZgBm91hbmIrW7xo4q28fr4Cg6DCQwx/JJT3On", "# db.etcd.lan:22 SSH-2.0-OpenSSH_9.2p1 Debian-2+deb12u5", "# db.etcd.lan:22 SSH-2.0-OpenSSH_9.2p1 Debian-2+deb12u5"]}
2025-02-28 12:49:45,206 p=20861 u=digitd n=ansible | TASK [Start and enable pgbackrest service] ************************************************************************************************************************************
2025-02-28 12:49:49,863 p=20861 u=digitd n=ansible | fatal: [db.slave.lan]: FAILED! => {"changed": false, "msg": "Unable to restart service pgbackrest: Job for pgbackrest.service failed because the control process exited with error code.\nSee \"systemctl status pgbackrest.service\" and \"journalctl -xeu pgbackrest.service\" for details.\n"}
2025-02-28 12:49:49,863 p=20861 u=digitd n=ansible | PLAY RECAP ********************************************************************************************************************************************************************
2025-02-28 12:49:49,864 p=20861 u=digitd n=ansible | db.etcd.lan                : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2025-02-28 12:49:49,864 p=20861 u=digitd n=ansible | db.slave.lan               : ok=3    changed=1    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2025-02-28 12:50:00,496 p=21133 u=digitd n=ansible | ansible-playbook [core 2.14.18]
  config file = /home/digitd/travelata_test/ansible/backup_setup/ansible.cfg
  configured module search path = ['/home/digitd/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3/dist-packages/ansible
  ansible collection location = /home/digitd/.ansible/collections:/usr/share/ansible/collections
  executable location = /usr/bin/ansible-playbook
  python version = 3.11.2 (main, Sep 14 2024, 03:00:30) [GCC 12.2.0] (/usr/bin/python3)
  jinja version = 3.1.2
  libyaml = True
2025-02-28 12:50:00,496 p=21133 u=digitd n=ansible | Using /home/digitd/travelata_test/ansible/backup_setup/ansible.cfg as config file
2025-02-28 12:50:00,621 p=21133 u=digitd n=ansible | Skipping callback 'default', as we already have a stdout callback.
2025-02-28 12:50:00,621 p=21133 u=digitd n=ansible | Skipping callback 'minimal', as we already have a stdout callback.
2025-02-28 12:50:00,622 p=21133 u=digitd n=ansible | Skipping callback 'oneline', as we already have a stdout callback.
2025-02-28 12:50:00,622 p=21133 u=digitd n=ansible | PLAYBOOK: setup_backup.yml ****************************************************************************************************************************************************
2025-02-28 12:50:00,622 p=21133 u=digitd n=ansible | 2 plays in ./setup_backup.yml
2025-02-28 12:50:00,623 p=21133 u=digitd n=ansible | PLAY [Create directory for storing backups] ***********************************************************************************************************************************
2025-02-28 12:50:00,632 p=21133 u=digitd n=ansible | TASK [Create and setup rights] ************************************************************************************************************************************************
2025-02-28 12:50:01,241 p=21133 u=digitd n=ansible | ok: [db.etcd.lan] => {"ansible_facts": {"discovered_interpreter_python": "/usr/bin/python3"}, "changed": false, "gid": 110, "group": "postgres", "mode": "0764", "owner": "postgres", "path": "/mnt/pgbackrest_backups", "size": 4096, "state": "directory", "uid": 102}
2025-02-28 12:50:01,244 p=21133 u=digitd n=ansible | TASK [Create .ssh directory and authorized_keys file] *************************************************************************************************************************
2025-02-28 12:50:01,672 p=21133 u=digitd n=ansible | ok: [db.etcd.lan] => (item={'path': '/var/lib/postgresql/15/data/.ssh', 'state': 'directory', 'mode': '0700'}) => {"ansible_loop_var": "item", "changed": false, "gid": 110, "group": "postgres", "item": {"mode": "0700", "path": "/var/lib/postgresql/15/data/.ssh", "state": "directory"}, "mode": "0700", "owner": "postgres", "path": "/var/lib/postgresql/15/data/.ssh", "size": 4096, "state": "directory", "uid": 102}
2025-02-28 12:50:02,082 p=21133 u=digitd n=ansible | changed: [db.etcd.lan] => (item={'path': '/var/lib/postgresql/15/data/.ssh/authorized_keys', 'state': 'touch', 'mode': '0600'}) => {"ansible_loop_var": "item", "changed": true, "dest": "/var/lib/postgresql/15/data/.ssh/authorized_keys", "gid": 110, "group": "postgres", "item": {"mode": "0600", "path": "/var/lib/postgresql/15/data/.ssh/authorized_keys", "state": "touch"}, "mode": "0600", "owner": "postgres", "size": 0, "state": "file", "uid": 102}
2025-02-28 12:50:02,091 p=21133 u=digitd n=ansible | PLAY [Setup pgbackrest (postgres backup tool) on the patroni nodes] ***********************************************************************************************************
2025-02-28 12:50:02,099 p=21133 u=digitd n=ansible | TASK [Ensure that pgbackrest package is installed] ****************************************************************************************************************************
2025-02-28 12:50:03,980 p=21133 u=digitd n=ansible | ok: [db.slave.lan] => {"ansible_facts": {"discovered_interpreter_python": "/usr/bin/python3.11"}, "cache_update_time": 1740733242, "cache_updated": false, "changed": false}
2025-02-28 12:50:03,982 p=21133 u=digitd n=ansible | TASK [Copy files to the machines] *********************************************************************************************************************************************
2025-02-28 12:50:04,832 p=21133 u=digitd n=ansible | ok: [db.slave.lan] => {"changed": false, "checksum": "1c1fbd82b49213764767cd19faf2efb5bde136a0", "dest": "/etc/pgbackrest.conf", "gid": 111, "group": "postgres", "mode": "0640", "owner": "postgres", "path": "/etc/pgbackrest.conf", "size": 552, "state": "file", "uid": 103}
2025-02-28 12:50:04,835 p=21133 u=digitd n=ansible | TASK [Scan sha1-hash] *********************************************************************************************************************************************************
2025-02-28 12:50:05,768 p=21133 u=digitd n=ansible | changed: [db.slave.lan] => {"changed": true, "cmd": ["sudo", "-u", "postgres", "ssh-keyscan", "-H", "db.etcd.lan", ">>", "/var/lib/postgresql/.ssh/known_hosts"], "delta": "0:00:00.427030", "end": "2025-02-28 12:50:05.805813", "msg": "", "rc": 0, "start": "2025-02-28 12:50:05.378783", "stderr": "getaddrinfo >>: Name or service not known\r\ngetaddrinfo >>: Name or service not known\r\ngetaddrinfo >>: Name or service not known\r\ngetaddrinfo >>: Name or service not known\r\ngetaddrinfo >>: Name or service not known\r\ngetaddrinfo /var/lib/postgresql/.ssh/known_hosts: Name or service not known\r\ngetaddrinfo /var/lib/postgresql/.ssh/known_hosts: Name or service not known\r\ngetaddrinfo /var/lib/postgresql/.ssh/known_hosts: Name or service not known\r\ngetaddrinfo /var/lib/postgresql/.ssh/known_hosts: Name or service not known\r\ngetaddrinfo /var/lib/postgresql/.ssh/known_hosts: Name or service not known", "stderr_lines": ["getaddrinfo >>: Name or service not known", "getaddrinfo >>: Name or service not known", "getaddrinfo >>: Name or service not known", "getaddrinfo >>: Name or service not known", "getaddrinfo >>: Name or service not known", "getaddrinfo /var/lib/postgresql/.ssh/known_hosts: Name or service not known", "getaddrinfo /var/lib/postgresql/.ssh/known_hosts: Name or service not known", "getaddrinfo /var/lib/postgresql/.ssh/known_hosts: Name or service not known", "getaddrinfo /var/lib/postgresql/.ssh/known_hosts: Name or service not known", "getaddrinfo /var/lib/postgresql/.ssh/known_hosts: Name or service not known"], "stdout": "# db.etcd.lan:22 SSH-2.0-OpenSSH_9.2p1 Debian-2+deb12u5\n|1|J2Sweu/3oeGbzRRvNZ97EEq4vkY=|mIlRZZlFYSNxlieNRpyxOCBdZ40= ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBN0skod/ZCxD3lltYw6hNIrGwdY2fpKwhnmxWL3Zs9JWXPGf4kaUxp40PAFr8npVzyuNNe94fzpzkym5zfiEp2E=\n# db.etcd.lan:22 SSH-2.0-OpenSSH_9.2p1 Debian-2+deb12u5\n|1|aMem2ceaD+9s0fAXL1iOmcyKih0=|IafTqcVQNqm37x+fNIMpb8StyeM= ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCYYtwr+bKyS0H5pOMJsfddOblcEno3Ir8wPO/Qaiyu0LwmK6eRfnoEo6NgXCCNGM0PgcLIVuUMIImS7x6Htyh2EBYNkJwWmSy90ol5sUX7AdiploT+xxg7kA65MEE4tU+FtVyYygvd0mnSlQsUVXRL+w82sCLsC7ufpmBX2LQDiUhqjFvNRuIyfm4PH+e06mYqOT3h+9bIFLrIuGBLEWLtbl488nAmBtzzn6ahvctrvYPrH0W0jlpM7Qk69LMz8156aZHTot9LIVotZlnqSmxV41I2E4Y/VGuAVavbicKg4JqimU9kSJz7pNRZb771pDU4QBJxeRXipWXDWsVOkL3wZPsjWDKDfqW5aQERWITCQ0inhjO/H993zgMTqVGlbJeCvwakCe0F0y1/js7iGe8ZaH6IwQpp46sgg4cad9itdWejjPrgsLx8HE7f6Eo9Ue2S7OZhIp6vN6PWIUX+e/ARq4Qebyl3quCku0ZVAXgi4aH5c0Kc3niPAOc5hT/jM9c=\n# db.etcd.lan:22 SSH-2.0-OpenSSH_9.2p1 Debian-2+deb12u5\n|1|H3AZcs7reGh7oys37P7qsIqJyzw=|kFCefeNjwFdrhrmF6ZWRLKKM+6c= ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIL/ZaaTZgBm91hbmIrW7xo4q28fr4Cg6DCQwx/JJT3On\n# db.etcd.lan:22 SSH-2.0-OpenSSH_9.2p1 Debian-2+deb12u5\n# db.etcd.lan:22 SSH-2.0-OpenSSH_9.2p1 Debian-2+deb12u5", "stdout_lines": ["# db.etcd.lan:22 SSH-2.0-OpenSSH_9.2p1 Debian-2+deb12u5", "|1|J2Sweu/3oeGbzRRvNZ97EEq4vkY=|mIlRZZlFYSNxlieNRpyxOCBdZ40= ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBN0skod/ZCxD3lltYw6hNIrGwdY2fpKwhnmxWL3Zs9JWXPGf4kaUxp40PAFr8npVzyuNNe94fzpzkym5zfiEp2E=", "# db.etcd.lan:22 SSH-2.0-OpenSSH_9.2p1 Debian-2+deb12u5", "|1|aMem2ceaD+9s0fAXL1iOmcyKih0=|IafTqcVQNqm37x+fNIMpb8StyeM= ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCYYtwr+bKyS0H5pOMJsfddOblcEno3Ir8wPO/Qaiyu0LwmK6eRfnoEo6NgXCCNGM0PgcLIVuUMIImS7x6Htyh2EBYNkJwWmSy90ol5sUX7AdiploT+xxg7kA65MEE4tU+FtVyYygvd0mnSlQsUVXRL+w82sCLsC7ufpmBX2LQDiUhqjFvNRuIyfm4PH+e06mYqOT3h+9bIFLrIuGBLEWLtbl488nAmBtzzn6ahvctrvYPrH0W0jlpM7Qk69LMz8156aZHTot9LIVotZlnqSmxV41I2E4Y/VGuAVavbicKg4JqimU9kSJz7pNRZb771pDU4QBJxeRXipWXDWsVOkL3wZPsjWDKDfqW5aQERWITCQ0inhjO/H993zgMTqVGlbJeCvwakCe0F0y1/js7iGe8ZaH6IwQpp46sgg4cad9itdWejjPrgsLx8HE7f6Eo9Ue2S7OZhIp6vN6PWIUX+e/ARq4Qebyl3quCku0ZVAXgi4aH5c0Kc3niPAOc5hT/jM9c=", "# db.etcd.lan:22 SSH-2.0-OpenSSH_9.2p1 Debian-2+deb12u5", "|1|H3AZcs7reGh7oys37P7qsIqJyzw=|kFCefeNjwFdrhrmF6ZWRLKKM+6c= ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIL/ZaaTZgBm91hbmIrW7xo4q28fr4Cg6DCQwx/JJT3On", "# db.etcd.lan:22 SSH-2.0-OpenSSH_9.2p1 Debian-2+deb12u5", "# db.etcd.lan:22 SSH-2.0-OpenSSH_9.2p1 Debian-2+deb12u5"]}
2025-02-28 12:50:05,770 p=21133 u=digitd n=ansible | TASK [Create stanza] **********************************************************************************************************************************************************
2025-02-28 12:50:06,245 p=21133 u=digitd n=ansible | fatal: [db.slave.lan]: FAILED! => {"changed": true, "cmd": ["sudo", "-u", "postgres", "pgbackrest", "--stanza=testcluster", "--log-level-console=info", "stanza-create"], "delta": "0:00:00.037950", "end": "2025-02-28 12:50:06.284612", "msg": "non-zero return code", "rc": 29, "start": "2025-02-28 12:50:06.246662", "stderr": "", "stderr_lines": [], "stdout": "P00  ERROR: [029]: key/value found outside of section at line 1: pg1-path=/var/lib/postgresql/15/data", "stdout_lines": ["P00  ERROR: [029]: key/value found outside of section at line 1: pg1-path=/var/lib/postgresql/15/data"]}
2025-02-28 12:50:06,245 p=21133 u=digitd n=ansible | PLAY RECAP ********************************************************************************************************************************************************************
2025-02-28 12:50:06,245 p=21133 u=digitd n=ansible | db.etcd.lan                : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2025-02-28 12:50:06,246 p=21133 u=digitd n=ansible | db.slave.lan               : ok=3    changed=1    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2025-02-28 12:51:58,269 p=21738 u=digitd n=ansible | ansible-playbook [core 2.14.18]
  config file = /home/digitd/travelata_test/ansible/backup_setup/ansible.cfg
  configured module search path = ['/home/digitd/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3/dist-packages/ansible
  ansible collection location = /home/digitd/.ansible/collections:/usr/share/ansible/collections
  executable location = /usr/bin/ansible-playbook
  python version = 3.11.2 (main, Sep 14 2024, 03:00:30) [GCC 12.2.0] (/usr/bin/python3)
  jinja version = 3.1.2
  libyaml = True
2025-02-28 12:51:58,269 p=21738 u=digitd n=ansible | Using /home/digitd/travelata_test/ansible/backup_setup/ansible.cfg as config file
2025-02-28 12:51:58,397 p=21738 u=digitd n=ansible | Skipping callback 'default', as we already have a stdout callback.
2025-02-28 12:51:58,398 p=21738 u=digitd n=ansible | Skipping callback 'minimal', as we already have a stdout callback.
2025-02-28 12:51:58,398 p=21738 u=digitd n=ansible | Skipping callback 'oneline', as we already have a stdout callback.
2025-02-28 12:51:58,398 p=21738 u=digitd n=ansible | PLAYBOOK: setup_backup.yml ****************************************************************************************************************************************************
2025-02-28 12:51:58,398 p=21738 u=digitd n=ansible | 2 plays in ./setup_backup.yml
2025-02-28 12:51:58,399 p=21738 u=digitd n=ansible | PLAY [Create directory for storing backups] ***********************************************************************************************************************************
2025-02-28 12:51:58,408 p=21738 u=digitd n=ansible | TASK [Create and setup rights] ************************************************************************************************************************************************
2025-02-28 12:51:59,336 p=21738 u=digitd n=ansible | ok: [db.etcd.lan] => {"ansible_facts": {"discovered_interpreter_python": "/usr/bin/python3"}, "changed": false, "gid": 110, "group": "postgres", "mode": "0764", "owner": "postgres", "path": "/mnt/pgbackrest_backups", "size": 4096, "state": "directory", "uid": 102}
2025-02-28 12:51:59,338 p=21738 u=digitd n=ansible | TASK [Create .ssh directory and authorized_keys file] *************************************************************************************************************************
2025-02-28 12:51:59,781 p=21738 u=digitd n=ansible | ok: [db.etcd.lan] => (item={'path': '/var/lib/postgresql/15/data/.ssh', 'state': 'directory', 'mode': '0700'}) => {"ansible_loop_var": "item", "changed": false, "gid": 110, "group": "postgres", "item": {"mode": "0700", "path": "/var/lib/postgresql/15/data/.ssh", "state": "directory"}, "mode": "0700", "owner": "postgres", "path": "/var/lib/postgresql/15/data/.ssh", "size": 4096, "state": "directory", "uid": 102}
2025-02-28 12:52:00,191 p=21738 u=digitd n=ansible | changed: [db.etcd.lan] => (item={'path': '/var/lib/postgresql/15/data/.ssh/authorized_keys', 'state': 'touch', 'mode': '0600'}) => {"ansible_loop_var": "item", "changed": true, "dest": "/var/lib/postgresql/15/data/.ssh/authorized_keys", "gid": 110, "group": "postgres", "item": {"mode": "0600", "path": "/var/lib/postgresql/15/data/.ssh/authorized_keys", "state": "touch"}, "mode": "0600", "owner": "postgres", "size": 0, "state": "file", "uid": 102}
2025-02-28 12:52:00,199 p=21738 u=digitd n=ansible | PLAY [Setup pgbackrest (postgres backup tool) on the patroni nodes] ***********************************************************************************************************
2025-02-28 12:52:00,204 p=21738 u=digitd n=ansible | TASK [Ensure that pgbackrest package is installed] ****************************************************************************************************************************
2025-02-28 12:52:02,379 p=21738 u=digitd n=ansible | ok: [db.slave.lan] => {"ansible_facts": {"discovered_interpreter_python": "/usr/bin/python3.11"}, "cache_update_time": 1740733242, "cache_updated": false, "changed": false}
2025-02-28 12:52:02,382 p=21738 u=digitd n=ansible | TASK [Copy files to the machines] *********************************************************************************************************************************************
2025-02-28 12:52:03,458 p=21738 u=digitd n=ansible | changed: [db.slave.lan] => {"changed": true, "checksum": "30b396d562c8f7467d7f0e39915effcb3d989e55", "dest": "/etc/pgbackrest.conf", "gid": 111, "group": "postgres", "md5sum": "9da971557b17f96f46139e25535b6c9b", "mode": "0640", "owner": "postgres", "size": 566, "src": "/root/.ansible/tmp/ansible-tmp-1740736322.4164703-21823-272592197957505/source", "state": "file", "uid": 103}
2025-02-28 12:52:03,461 p=21738 u=digitd n=ansible | TASK [Scan sha1-hash] *********************************************************************************************************************************************************
2025-02-28 12:52:04,426 p=21738 u=digitd n=ansible | changed: [db.slave.lan] => {"changed": true, "cmd": ["sudo", "-u", "postgres", "ssh-keyscan", "-H", "db.etcd.lan", ">>", "/var/lib/postgresql/.ssh/known_hosts"], "delta": "0:00:00.426896", "end": "2025-02-28 12:52:04.466413", "msg": "", "rc": 0, "start": "2025-02-28 12:52:04.039517", "stderr": "getaddrinfo >>: Name or service not known\r\ngetaddrinfo >>: Name or service not known\r\ngetaddrinfo >>: Name or service not known\r\ngetaddrinfo >>: Name or service not known\r\ngetaddrinfo >>: Name or service not known\r\ngetaddrinfo /var/lib/postgresql/.ssh/known_hosts: Name or service not known\r\ngetaddrinfo /var/lib/postgresql/.ssh/known_hosts: Name or service not known\r\ngetaddrinfo /var/lib/postgresql/.ssh/known_hosts: Name or service not known\r\ngetaddrinfo /var/lib/postgresql/.ssh/known_hosts: Name or service not known\r\ngetaddrinfo /var/lib/postgresql/.ssh/known_hosts: Name or service not known", "stderr_lines": ["getaddrinfo >>: Name or service not known", "getaddrinfo >>: Name or service not known", "getaddrinfo >>: Name or service not known", "getaddrinfo >>: Name or service not known", "getaddrinfo >>: Name or service not known", "getaddrinfo /var/lib/postgresql/.ssh/known_hosts: Name or service not known", "getaddrinfo /var/lib/postgresql/.ssh/known_hosts: Name or service not known", "getaddrinfo /var/lib/postgresql/.ssh/known_hosts: Name or service not known", "getaddrinfo /var/lib/postgresql/.ssh/known_hosts: Name or service not known", "getaddrinfo /var/lib/postgresql/.ssh/known_hosts: Name or service not known"], "stdout": "# db.etcd.lan:22 SSH-2.0-OpenSSH_9.2p1 Debian-2+deb12u5\n|1|xTV83qT6/yD+a7p0ap14f1Q0F2A=|4/cmUgpuw9tvT67YQ5xJxmv2efE= ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBN0skod/ZCxD3lltYw6hNIrGwdY2fpKwhnmxWL3Zs9JWXPGf4kaUxp40PAFr8npVzyuNNe94fzpzkym5zfiEp2E=\n# db.etcd.lan:22 SSH-2.0-OpenSSH_9.2p1 Debian-2+deb12u5\n|1|4ubJIYAqwWpyHjE+8gTYtBajlNw=|5kC69gmCSaStzPPN7kInWWD0Im4= ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCYYtwr+bKyS0H5pOMJsfddOblcEno3Ir8wPO/Qaiyu0LwmK6eRfnoEo6NgXCCNGM0PgcLIVuUMIImS7x6Htyh2EBYNkJwWmSy90ol5sUX7AdiploT+xxg7kA65MEE4tU+FtVyYygvd0mnSlQsUVXRL+w82sCLsC7ufpmBX2LQDiUhqjFvNRuIyfm4PH+e06mYqOT3h+9bIFLrIuGBLEWLtbl488nAmBtzzn6ahvctrvYPrH0W0jlpM7Qk69LMz8156aZHTot9LIVotZlnqSmxV41I2E4Y/VGuAVavbicKg4JqimU9kSJz7pNRZb771pDU4QBJxeRXipWXDWsVOkL3wZPsjWDKDfqW5aQERWITCQ0inhjO/H993zgMTqVGlbJeCvwakCe0F0y1/js7iGe8ZaH6IwQpp46sgg4cad9itdWejjPrgsLx8HE7f6Eo9Ue2S7OZhIp6vN6PWIUX+e/ARq4Qebyl3quCku0ZVAXgi4aH5c0Kc3niPAOc5hT/jM9c=\n# db.etcd.lan:22 SSH-2.0-OpenSSH_9.2p1 Debian-2+deb12u5\n|1|GCpMOfizyRp2Y+b9QpX8T6dVEzU=|y9vg3sxqKtJFXhTxhXForgNa3yk= ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIL/ZaaTZgBm91hbmIrW7xo4q28fr4Cg6DCQwx/JJT3On\n# db.etcd.lan:22 SSH-2.0-OpenSSH_9.2p1 Debian-2+deb12u5\n# db.etcd.lan:22 SSH-2.0-OpenSSH_9.2p1 Debian-2+deb12u5", "stdout_lines": ["# db.etcd.lan:22 SSH-2.0-OpenSSH_9.2p1 Debian-2+deb12u5", "|1|xTV83qT6/yD+a7p0ap14f1Q0F2A=|4/cmUgpuw9tvT67YQ5xJxmv2efE= ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBN0skod/ZCxD3lltYw6hNIrGwdY2fpKwhnmxWL3Zs9JWXPGf4kaUxp40PAFr8npVzyuNNe94fzpzkym5zfiEp2E=", "# db.etcd.lan:22 SSH-2.0-OpenSSH_9.2p1 Debian-2+deb12u5", "|1|4ubJIYAqwWpyHjE+8gTYtBajlNw=|5kC69gmCSaStzPPN7kInWWD0Im4= ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCYYtwr+bKyS0H5pOMJsfddOblcEno3Ir8wPO/Qaiyu0LwmK6eRfnoEo6NgXCCNGM0PgcLIVuUMIImS7x6Htyh2EBYNkJwWmSy90ol5sUX7AdiploT+xxg7kA65MEE4tU+FtVyYygvd0mnSlQsUVXRL+w82sCLsC7ufpmBX2LQDiUhqjFvNRuIyfm4PH+e06mYqOT3h+9bIFLrIuGBLEWLtbl488nAmBtzzn6ahvctrvYPrH0W0jlpM7Qk69LMz8156aZHTot9LIVotZlnqSmxV41I2E4Y/VGuAVavbicKg4JqimU9kSJz7pNRZb771pDU4QBJxeRXipWXDWsVOkL3wZPsjWDKDfqW5aQERWITCQ0inhjO/H993zgMTqVGlbJeCvwakCe0F0y1/js7iGe8ZaH6IwQpp46sgg4cad9itdWejjPrgsLx8HE7f6Eo9Ue2S7OZhIp6vN6PWIUX+e/ARq4Qebyl3quCku0ZVAXgi4aH5c0Kc3niPAOc5hT/jM9c=", "# db.etcd.lan:22 SSH-2.0-OpenSSH_9.2p1 Debian-2+deb12u5", "|1|GCpMOfizyRp2Y+b9QpX8T6dVEzU=|y9vg3sxqKtJFXhTxhXForgNa3yk= ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIL/ZaaTZgBm91hbmIrW7xo4q28fr4Cg6DCQwx/JJT3On", "# db.etcd.lan:22 SSH-2.0-OpenSSH_9.2p1 Debian-2+deb12u5", "# db.etcd.lan:22 SSH-2.0-OpenSSH_9.2p1 Debian-2+deb12u5"]}
2025-02-28 12:52:04,428 p=21738 u=digitd n=ansible | TASK [Create stanza] **********************************************************************************************************************************************************
2025-02-28 12:52:05,100 p=21738 u=digitd n=ansible | fatal: [db.slave.lan]: FAILED! => {"changed": true, "cmd": ["sudo", "-u", "postgres", "pgbackrest", "--stanza=testcluster", "--log-level-console=info", "stanza-create"], "delta": "0:00:00.237102", "end": "2025-02-28 12:52:05.139060", "msg": "non-zero return code", "rc": 56, "start": "2025-02-28 12:52:04.901958", "stderr": "", "stderr_lines": [], "stdout": "2025-02-28 12:52:05.117 P00   INFO: stanza-create command begin 2.54.2: --exec-id=406958-a64f82ef --log-level-console=info --pg1-path=/var/lib/postgresql/15/data --pg1-port=5050 --repo1-cipher-pass=<redacted> --repo1-cipher-type=aes-256-cbc --repo1-path=/mnt/pgbackrest_backups --repo1-sftp-host=db.etcd.lan --repo1-sftp-host-key-hash-type=sha1 --repo1-sftp-host-user=postgres --repo1-sftp-private-key-file=/var/lib/postgresql/.ssh/id_ed25519 --repo1-sftp-public-key-file=/var/lib/postgresql/.ssh/id_ed25519.pub --repo1-type=sftp --stanza=testcluster\n2025-02-28 12:52:05.134 P00   WARN: unable to check pg1: [DbConnectError] unable to connect to 'dbname='postgres' port=5050': connection to server on socket \"/var/run/postgresql/.s.PGSQL.5050\" failed: No such file or directory\n                                    \tIs the server running locally and accepting connections on that socket?\n2025-02-28 12:52:05.134 P00  ERROR: [056]: unable to find primary cluster - cannot proceed\n                                    HINT: are all available clusters in recovery?\n2025-02-28 12:52:05.134 P00   INFO: stanza-create command end: aborted with exception [056]", "stdout_lines": ["2025-02-28 12:52:05.117 P00   INFO: stanza-create command begin 2.54.2: --exec-id=406958-a64f82ef --log-level-console=info --pg1-path=/var/lib/postgresql/15/data --pg1-port=5050 --repo1-cipher-pass=<redacted> --repo1-cipher-type=aes-256-cbc --repo1-path=/mnt/pgbackrest_backups --repo1-sftp-host=db.etcd.lan --repo1-sftp-host-key-hash-type=sha1 --repo1-sftp-host-user=postgres --repo1-sftp-private-key-file=/var/lib/postgresql/.ssh/id_ed25519 --repo1-sftp-public-key-file=/var/lib/postgresql/.ssh/id_ed25519.pub --repo1-type=sftp --stanza=testcluster", "2025-02-28 12:52:05.134 P00   WARN: unable to check pg1: [DbConnectError] unable to connect to 'dbname='postgres' port=5050': connection to server on socket \"/var/run/postgresql/.s.PGSQL.5050\" failed: No such file or directory", "                                    \tIs the server running locally and accepting connections on that socket?", "2025-02-28 12:52:05.134 P00  ERROR: [056]: unable to find primary cluster - cannot proceed", "                                    HINT: are all available clusters in recovery?", "2025-02-28 12:52:05.134 P00   INFO: stanza-create command end: aborted with exception [056]"]}
2025-02-28 12:52:05,101 p=21738 u=digitd n=ansible | PLAY RECAP ********************************************************************************************************************************************************************
2025-02-28 12:52:05,101 p=21738 u=digitd n=ansible | db.etcd.lan                : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2025-02-28 12:52:05,101 p=21738 u=digitd n=ansible | db.slave.lan               : ok=3    changed=2    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2025-02-28 13:06:21,920 p=26431 u=digitd n=ansible | ansible-playbook [core 2.14.18]
  config file = /home/digitd/travelata_test/ansible/backup_setup/ansible.cfg
  configured module search path = ['/home/digitd/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3/dist-packages/ansible
  ansible collection location = /home/digitd/.ansible/collections:/usr/share/ansible/collections
  executable location = /usr/bin/ansible-playbook
  python version = 3.11.2 (main, Sep 14 2024, 03:00:30) [GCC 12.2.0] (/usr/bin/python3)
  jinja version = 3.1.2
  libyaml = True
2025-02-28 13:06:21,921 p=26431 u=digitd n=ansible | Using /home/digitd/travelata_test/ansible/backup_setup/ansible.cfg as config file
2025-02-28 13:06:22,326 p=26431 u=digitd n=ansible | Skipping callback 'default', as we already have a stdout callback.
2025-02-28 13:06:22,326 p=26431 u=digitd n=ansible | Skipping callback 'minimal', as we already have a stdout callback.
2025-02-28 13:06:22,326 p=26431 u=digitd n=ansible | Skipping callback 'oneline', as we already have a stdout callback.
2025-02-28 13:06:22,327 p=26431 u=digitd n=ansible | PLAYBOOK: setup_backup.yml ****************************************************************************************************************************************************
2025-02-28 13:06:22,327 p=26431 u=digitd n=ansible | 2 plays in ./setup_backup.yml
2025-02-28 13:06:22,328 p=26431 u=digitd n=ansible | PLAY [Create directory for storing backups] ***********************************************************************************************************************************
2025-02-28 13:06:22,353 p=26431 u=digitd n=ansible | TASK [Create and setup rights] ************************************************************************************************************************************************
2025-02-28 13:06:28,336 p=26431 u=digitd n=ansible | ok: [db.etcd.lan] => {"ansible_facts": {"discovered_interpreter_python": "/usr/bin/python3"}, "changed": false, "gid": 110, "group": "postgres", "mode": "0764", "owner": "postgres", "path": "/mnt/pgbackrest_backups", "size": 4096, "state": "directory", "uid": 102}
2025-02-28 13:06:28,339 p=26431 u=digitd n=ansible | TASK [Create .ssh directory and authorized_keys file] *************************************************************************************************************************
2025-02-28 13:06:28,771 p=26431 u=digitd n=ansible | ok: [db.etcd.lan] => (item={'path': '/var/lib/postgresql/15/data/.ssh', 'state': 'directory', 'mode': '0700'}) => {"ansible_loop_var": "item", "changed": false, "gid": 110, "group": "postgres", "item": {"mode": "0700", "path": "/var/lib/postgresql/15/data/.ssh", "state": "directory"}, "mode": "0700", "owner": "postgres", "path": "/var/lib/postgresql/15/data/.ssh", "size": 4096, "state": "directory", "uid": 102}
2025-02-28 13:06:29,182 p=26431 u=digitd n=ansible | changed: [db.etcd.lan] => (item={'path': '/var/lib/postgresql/15/data/.ssh/authorized_keys', 'state': 'touch', 'mode': '0600'}) => {"ansible_loop_var": "item", "changed": true, "dest": "/var/lib/postgresql/15/data/.ssh/authorized_keys", "gid": 110, "group": "postgres", "item": {"mode": "0600", "path": "/var/lib/postgresql/15/data/.ssh/authorized_keys", "state": "touch"}, "mode": "0600", "owner": "postgres", "size": 0, "state": "file", "uid": 102}
2025-02-28 13:06:29,192 p=26431 u=digitd n=ansible | PLAY [Setup pgbackrest (postgres backup tool) on the patroni nodes] ***********************************************************************************************************
2025-02-28 13:06:29,198 p=26431 u=digitd n=ansible | TASK [Ensure that pgbackrest package is installed] ****************************************************************************************************************************
2025-02-28 13:06:31,379 p=26431 u=digitd n=ansible | ok: [db.slave.lan] => {"ansible_facts": {"discovered_interpreter_python": "/usr/bin/python3.11"}, "cache_update_time": 1740733242, "cache_updated": false, "changed": false}
2025-02-28 13:06:31,382 p=26431 u=digitd n=ansible | TASK [Copy files to the machines] *********************************************************************************************************************************************
2025-02-28 13:06:32,173 p=26431 u=digitd n=ansible | ok: [db.slave.lan] => {"changed": false, "checksum": "30b396d562c8f7467d7f0e39915effcb3d989e55", "dest": "/etc/pgbackrest.conf", "gid": 111, "group": "postgres", "mode": "0640", "owner": "postgres", "path": "/etc/pgbackrest.conf", "size": 566, "state": "file", "uid": 103}
2025-02-28 13:06:32,189 p=26431 u=digitd n=ansible | TASK [Scan sha1-hash] *********************************************************************************************************************************************************
2025-02-28 13:06:33,074 p=26431 u=digitd n=ansible | changed: [db.slave.lan] => {"changed": true, "cmd": ["sudo", "-u", "postgres", "ssh-keyscan", "-H", "db.etcd.lan", ">>", "/var/lib/postgresql/.ssh/known_hosts"], "delta": "0:00:00.415029", "end": "2025-02-28 13:06:33.109796", "msg": "", "rc": 0, "start": "2025-02-28 13:06:32.694767", "stderr": "getaddrinfo >>: Name or service not known\r\ngetaddrinfo >>: Name or service not known\r\ngetaddrinfo >>: Name or service not known\r\ngetaddrinfo >>: Name or service not known\r\ngetaddrinfo >>: Name or service not known\r\ngetaddrinfo /var/lib/postgresql/.ssh/known_hosts: Name or service not known\r\ngetaddrinfo /var/lib/postgresql/.ssh/known_hosts: Name or service not known\r\ngetaddrinfo /var/lib/postgresql/.ssh/known_hosts: Name or service not known\r\ngetaddrinfo /var/lib/postgresql/.ssh/known_hosts: Name or service not known\r\ngetaddrinfo /var/lib/postgresql/.ssh/known_hosts: Name or service not known", "stderr_lines": ["getaddrinfo >>: Name or service not known", "getaddrinfo >>: Name or service not known", "getaddrinfo >>: Name or service not known", "getaddrinfo >>: Name or service not known", "getaddrinfo >>: Name or service not known", "getaddrinfo /var/lib/postgresql/.ssh/known_hosts: Name or service not known", "getaddrinfo /var/lib/postgresql/.ssh/known_hosts: Name or service not known", "getaddrinfo /var/lib/postgresql/.ssh/known_hosts: Name or service not known", "getaddrinfo /var/lib/postgresql/.ssh/known_hosts: Name or service not known", "getaddrinfo /var/lib/postgresql/.ssh/known_hosts: Name or service not known"], "stdout": "# db.etcd.lan:22 SSH-2.0-OpenSSH_9.2p1 Debian-2+deb12u5\n|1|D5vWJ49uP3G+Zsx01Gjzwa88rvQ=|hRXqD49u7+Dug7cs9LIxxmplgHw= ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIL/ZaaTZgBm91hbmIrW7xo4q28fr4Cg6DCQwx/JJT3On\n# db.etcd.lan:22 SSH-2.0-OpenSSH_9.2p1 Debian-2+deb12u5\n|1|FoFTcVxoS3KxyoOg1yifMxKVIfw=|JMTEnuGGz/MQTumZANszfbvjODo= ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCYYtwr+bKyS0H5pOMJsfddOblcEno3Ir8wPO/Qaiyu0LwmK6eRfnoEo6NgXCCNGM0PgcLIVuUMIImS7x6Htyh2EBYNkJwWmSy90ol5sUX7AdiploT+xxg7kA65MEE4tU+FtVyYygvd0mnSlQsUVXRL+w82sCLsC7ufpmBX2LQDiUhqjFvNRuIyfm4PH+e06mYqOT3h+9bIFLrIuGBLEWLtbl488nAmBtzzn6ahvctrvYPrH0W0jlpM7Qk69LMz8156aZHTot9LIVotZlnqSmxV41I2E4Y/VGuAVavbicKg4JqimU9kSJz7pNRZb771pDU4QBJxeRXipWXDWsVOkL3wZPsjWDKDfqW5aQERWITCQ0inhjO/H993zgMTqVGlbJeCvwakCe0F0y1/js7iGe8ZaH6IwQpp46sgg4cad9itdWejjPrgsLx8HE7f6Eo9Ue2S7OZhIp6vN6PWIUX+e/ARq4Qebyl3quCku0ZVAXgi4aH5c0Kc3niPAOc5hT/jM9c=\n# db.etcd.lan:22 SSH-2.0-OpenSSH_9.2p1 Debian-2+deb12u5\n|1|5N4zomORDVEM7FEkDYiRoTdAtzM=|JQVpAQexQeQ+Mu8Yh7Tv2oyKXWA= ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBN0skod/ZCxD3lltYw6hNIrGwdY2fpKwhnmxWL3Zs9JWXPGf4kaUxp40PAFr8npVzyuNNe94fzpzkym5zfiEp2E=\n# db.etcd.lan:22 SSH-2.0-OpenSSH_9.2p1 Debian-2+deb12u5\n# db.etcd.lan:22 SSH-2.0-OpenSSH_9.2p1 Debian-2+deb12u5", "stdout_lines": ["# db.etcd.lan:22 SSH-2.0-OpenSSH_9.2p1 Debian-2+deb12u5", "|1|D5vWJ49uP3G+Zsx01Gjzwa88rvQ=|hRXqD49u7+Dug7cs9LIxxmplgHw= ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIL/ZaaTZgBm91hbmIrW7xo4q28fr4Cg6DCQwx/JJT3On", "# db.etcd.lan:22 SSH-2.0-OpenSSH_9.2p1 Debian-2+deb12u5", "|1|FoFTcVxoS3KxyoOg1yifMxKVIfw=|JMTEnuGGz/MQTumZANszfbvjODo= ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCYYtwr+bKyS0H5pOMJsfddOblcEno3Ir8wPO/Qaiyu0LwmK6eRfnoEo6NgXCCNGM0PgcLIVuUMIImS7x6Htyh2EBYNkJwWmSy90ol5sUX7AdiploT+xxg7kA65MEE4tU+FtVyYygvd0mnSlQsUVXRL+w82sCLsC7ufpmBX2LQDiUhqjFvNRuIyfm4PH+e06mYqOT3h+9bIFLrIuGBLEWLtbl488nAmBtzzn6ahvctrvYPrH0W0jlpM7Qk69LMz8156aZHTot9LIVotZlnqSmxV41I2E4Y/VGuAVavbicKg4JqimU9kSJz7pNRZb771pDU4QBJxeRXipWXDWsVOkL3wZPsjWDKDfqW5aQERWITCQ0inhjO/H993zgMTqVGlbJeCvwakCe0F0y1/js7iGe8ZaH6IwQpp46sgg4cad9itdWejjPrgsLx8HE7f6Eo9Ue2S7OZhIp6vN6PWIUX+e/ARq4Qebyl3quCku0ZVAXgi4aH5c0Kc3niPAOc5hT/jM9c=", "# db.etcd.lan:22 SSH-2.0-OpenSSH_9.2p1 Debian-2+deb12u5", "|1|5N4zomORDVEM7FEkDYiRoTdAtzM=|JQVpAQexQeQ+Mu8Yh7Tv2oyKXWA= ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBN0skod/ZCxD3lltYw6hNIrGwdY2fpKwhnmxWL3Zs9JWXPGf4kaUxp40PAFr8npVzyuNNe94fzpzkym5zfiEp2E=", "# db.etcd.lan:22 SSH-2.0-OpenSSH_9.2p1 Debian-2+deb12u5", "# db.etcd.lan:22 SSH-2.0-OpenSSH_9.2p1 Debian-2+deb12u5"]}
2025-02-28 13:06:33,075 p=26431 u=digitd n=ansible | TASK [Create stanza] **********************************************************************************************************************************************************
2025-02-28 13:06:34,019 p=26431 u=digitd n=ansible | changed: [db.slave.lan] => {"changed": true, "cmd": ["sudo", "-u", "postgres", "pgbackrest", "--stanza=testcluster", "--log-level-console=info", "stanza-create"], "delta": "0:00:00.486268", "end": "2025-02-28 13:06:34.037467", "msg": "", "rc": 0, "start": "2025-02-28 13:06:33.551199", "stderr": "ПРЕДУПРЕЖДЕНИЕ:  несовпадение версии для правила сортировки в базе данных \"postgres\"\nDETAIL:  База данных была создана с версией правила сортировки 2.36, но операционная система предоставляет версию 2.40.\nHINT:  Перестройте все объекты в этой базе, задействующие основное правило сортировки, и выполните ALTER DATABASE postgres REFRESH COLLATION VERSION, либо соберите PostgreSQL с правильной версией библиотеки.", "stderr_lines": ["ПРЕДУПРЕЖДЕНИЕ:  несовпадение версии для правила сортировки в базе данных \"postgres\"", "DETAIL:  База данных была создана с версией правила сортировки 2.36, но операционная система предоставляет версию 2.40.", "HINT:  Перестройте все объекты в этой базе, задействующие основное правило сортировки, и выполните ALTER DATABASE postgres REFRESH COLLATION VERSION, либо соберите PostgreSQL с правильной версией библиотеки."], "stdout": "2025-02-28 13:06:33.576 P00   INFO: stanza-create command begin 2.54.2: --exec-id=409566-1db93ef5 --log-level-console=info --pg1-path=/var/lib/postgresql/15/data --pg1-port=5050 --repo1-cipher-pass=<redacted> --repo1-cipher-type=aes-256-cbc --repo1-path=/mnt/pgbackrest_backups --repo1-sftp-host=db.etcd.lan --repo1-sftp-host-key-hash-type=sha1 --repo1-sftp-host-user=postgres --repo1-sftp-private-key-file=/var/lib/postgresql/.ssh/id_ed25519 --repo1-sftp-public-key-file=/var/lib/postgresql/.ssh/id_ed25519.pub --repo1-type=sftp --stanza=testcluster\n2025-02-28 13:06:33.615 P00   INFO: stanza-create for stanza 'testcluster' on repo1\n2025-02-28 13:06:34.023 P00   INFO: stanza 'testcluster' already exists on repo1 and is valid\n2025-02-28 13:06:34.023 P00   INFO: stanza-create command end: completed successfully (450ms)", "stdout_lines": ["2025-02-28 13:06:33.576 P00   INFO: stanza-create command begin 2.54.2: --exec-id=409566-1db93ef5 --log-level-console=info --pg1-path=/var/lib/postgresql/15/data --pg1-port=5050 --repo1-cipher-pass=<redacted> --repo1-cipher-type=aes-256-cbc --repo1-path=/mnt/pgbackrest_backups --repo1-sftp-host=db.etcd.lan --repo1-sftp-host-key-hash-type=sha1 --repo1-sftp-host-user=postgres --repo1-sftp-private-key-file=/var/lib/postgresql/.ssh/id_ed25519 --repo1-sftp-public-key-file=/var/lib/postgresql/.ssh/id_ed25519.pub --repo1-type=sftp --stanza=testcluster", "2025-02-28 13:06:33.615 P00   INFO: stanza-create for stanza 'testcluster' on repo1", "2025-02-28 13:06:34.023 P00   INFO: stanza 'testcluster' already exists on repo1 and is valid", "2025-02-28 13:06:34.023 P00   INFO: stanza-create command end: completed successfully (450ms)"]}
2025-02-28 13:06:34,021 p=26431 u=digitd n=ansible | TASK [Check] ******************************************************************************************************************************************************************
2025-02-28 13:06:35,993 p=26431 u=digitd n=ansible | changed: [db.slave.lan] => {"changed": true, "cmd": ["sudo", "-u", "postgres", "pgbackrest", "--stanza=testcluster", "--log-level-console=info", "check"], "delta": "0:00:01.545630", "end": "2025-02-28 13:06:36.031421", "msg": "", "rc": 0, "start": "2025-02-28 13:06:34.485791", "stderr": "ПРЕДУПРЕЖДЕНИЕ:  несовпадение версии для правила сортировки в базе данных \"postgres\"\nDETAIL:  База данных была создана с версией правила сортировки 2.36, но операционная система предоставляет версию 2.40.\nHINT:  Перестройте все объекты в этой базе, задействующие основное правило сортировки, и выполните ALTER DATABASE postgres REFRESH COLLATION VERSION, либо соберите PostgreSQL с правильной версией библиотеки.", "stderr_lines": ["ПРЕДУПРЕЖДЕНИЕ:  несовпадение версии для правила сортировки в базе данных \"postgres\"", "DETAIL:  База данных была создана с версией правила сортировки 2.36, но операционная система предоставляет версию 2.40.", "HINT:  Перестройте все объекты в этой базе, задействующие основное правило сортировки, и выполните ALTER DATABASE postgres REFRESH COLLATION VERSION, либо соберите PostgreSQL с правильной версией библиотеки."], "stdout": "2025-02-28 13:06:34.511 P00   INFO: check command begin 2.54.2: --exec-id=409595-b963adae --log-level-console=info --pg1-path=/var/lib/postgresql/15/data --pg1-port=5050 --repo1-cipher-pass=<redacted> --repo1-cipher-type=aes-256-cbc --repo1-path=/mnt/pgbackrest_backups --repo1-sftp-host=db.etcd.lan --repo1-sftp-host-key-hash-type=sha1 --repo1-sftp-host-user=postgres --repo1-sftp-private-key-file=/var/lib/postgresql/.ssh/id_ed25519 --repo1-sftp-public-key-file=/var/lib/postgresql/.ssh/id_ed25519.pub --repo1-type=sftp --stanza=testcluster\n2025-02-28 13:06:34.525 P00   INFO: check repo1 configuration (primary)\n2025-02-28 13:06:34.908 P00   INFO: check repo1 archive for WAL (primary)\n2025-02-28 13:06:36.020 P00   INFO: WAL segment 000000040000000000000003 successfully archived to '/mnt/pgbackrest_backups/archive/testcluster/15-1/0000000400000000/000000040000000000000003-15fdaac72c82cd34e4d7bc9ef43791fc23d072d1.gz' on repo1\n2025-02-28 13:06:36.020 P00   INFO: check command end: completed successfully (1512ms)", "stdout_lines": ["2025-02-28 13:06:34.511 P00   INFO: check command begin 2.54.2: --exec-id=409595-b963adae --log-level-console=info --pg1-path=/var/lib/postgresql/15/data --pg1-port=5050 --repo1-cipher-pass=<redacted> --repo1-cipher-type=aes-256-cbc --repo1-path=/mnt/pgbackrest_backups --repo1-sftp-host=db.etcd.lan --repo1-sftp-host-key-hash-type=sha1 --repo1-sftp-host-user=postgres --repo1-sftp-private-key-file=/var/lib/postgresql/.ssh/id_ed25519 --repo1-sftp-public-key-file=/var/lib/postgresql/.ssh/id_ed25519.pub --repo1-type=sftp --stanza=testcluster", "2025-02-28 13:06:34.525 P00   INFO: check repo1 configuration (primary)", "2025-02-28 13:06:34.908 P00   INFO: check repo1 archive for WAL (primary)", "2025-02-28 13:06:36.020 P00   INFO: WAL segment 000000040000000000000003 successfully archived to '/mnt/pgbackrest_backups/archive/testcluster/15-1/0000000400000000/000000040000000000000003-15fdaac72c82cd34e4d7bc9ef43791fc23d072d1.gz' on repo1", "2025-02-28 13:06:36.020 P00   INFO: check command end: completed successfully (1512ms)"]}
2025-02-28 13:06:35,995 p=26431 u=digitd n=ansible | TASK [Perform first backup of DB] *********************************************************************************************************************************************
2025-02-28 13:08:01,715 p=26431 u=digitd n=ansible | fatal: [db.slave.lan]: FAILED! => {"changed": true, "cmd": ["sudo", "-u", "postgres", "pgbackrest", "--stanza=testcluster", "--log-level-console=info", "backup"], "delta": "0:01:25.253765", "end": "2025-02-28 13:08:01.734363", "msg": "non-zero return code", "rc": 82, "start": "2025-02-28 13:06:36.480598", "stderr": "ПРЕДУПРЕЖДЕНИЕ:  несовпадение версии для правила сортировки в базе данных \"postgres\"\nDETAIL:  База данных была создана с версией правила сортировки 2.36, но операционная система предоставляет версию 2.40.\nHINT:  Перестройте все объекты в этой базе, задействующие основное правило сортировки, и выполните ALTER DATABASE postgres REFRESH COLLATION VERSION, либо соберите PostgreSQL с правильной версией библиотеки.", "stderr_lines": ["ПРЕДУПРЕЖДЕНИЕ:  несовпадение версии для правила сортировки в базе данных \"postgres\"", "DETAIL:  База данных была создана с версией правила сортировки 2.36, но операционная система предоставляет версию 2.40.", "HINT:  Перестройте все объекты в этой базе, задействующие основное правило сортировки, и выполните ALTER DATABASE postgres REFRESH COLLATION VERSION, либо соберите PostgreSQL с правильной версией библиотеки."], "stdout": "2025-02-28 13:06:36.506 P00   INFO: backup command begin 2.54.2: --exec-id=409623-b4dac893 --log-level-console=info --pg1-path=/var/lib/postgresql/15/data --pg1-port=5050 --process-max=4 --repo1-block --repo1-bundle --repo1-cipher-pass=<redacted> --repo1-cipher-type=aes-256-cbc --repo1-path=/mnt/pgbackrest_backups --repo1-retention-diff=2 --repo1-retention-full=2 --repo1-sftp-host=db.etcd.lan --repo1-sftp-host-key-hash-type=sha1 --repo1-sftp-host-user=postgres --repo1-sftp-private-key-file=/var/lib/postgresql/.ssh/id_ed25519 --repo1-sftp-public-key-file=/var/lib/postgresql/.ssh/id_ed25519.pub --repo1-type=sftp --stanza=testcluster --start-fast\n2025-02-28 13:06:36.830 P00   INFO: last backup label = 20250228-094415F, version = 2.54.2\n2025-02-28 13:06:36.831 P00   INFO: execute non-exclusive backup start: backup begins after the requested immediate checkpoint completes\n2025-02-28 13:06:50.103 P00   INFO: backup start archive = 000000040000000000000005, lsn = 0/5000028\n2025-02-28 13:06:50.103 P00   INFO: check archive for prior segment 000000040000000000000004\n2025-02-28 13:06:51.004 P00   WARN: a timeline switch has occurred since the 20250228-094415F backup, enabling delta checksum\n                                    HINT: this is normal after restoring from backup or promoting a standby.\n2025-02-28 13:06:59.765 P00   INFO: execute non-exclusive backup stop and wait for all WAL segments to archive\n2025-02-28 13:07:00.465 P00   INFO: backup stop archive = 000000040000000000000005, lsn = 0/5000138\n2025-02-28 13:07:01.176 P00   INFO: check archive for segment(s) 000000040000000000000005:000000040000000000000005\n2025-02-28 13:08:01.708 P00  ERROR: [082]: WAL segment 000000040000000000000005 was not archived before the 60000ms timeout\n                                    HINT: check the archive_command to ensure that all options are correct (especially --stanza).\n                                    HINT: check the PostgreSQL server log for errors.\n                                    HINT: run the 'start' command if the stanza was previously stopped.\n2025-02-28 13:08:01.718 P00   INFO: backup command end: aborted with exception [082]", "stdout_lines": ["2025-02-28 13:06:36.506 P00   INFO: backup command begin 2.54.2: --exec-id=409623-b4dac893 --log-level-console=info --pg1-path=/var/lib/postgresql/15/data --pg1-port=5050 --process-max=4 --repo1-block --repo1-bundle --repo1-cipher-pass=<redacted> --repo1-cipher-type=aes-256-cbc --repo1-path=/mnt/pgbackrest_backups --repo1-retention-diff=2 --repo1-retention-full=2 --repo1-sftp-host=db.etcd.lan --repo1-sftp-host-key-hash-type=sha1 --repo1-sftp-host-user=postgres --repo1-sftp-private-key-file=/var/lib/postgresql/.ssh/id_ed25519 --repo1-sftp-public-key-file=/var/lib/postgresql/.ssh/id_ed25519.pub --repo1-type=sftp --stanza=testcluster --start-fast", "2025-02-28 13:06:36.830 P00   INFO: last backup label = 20250228-094415F, version = 2.54.2", "2025-02-28 13:06:36.831 P00   INFO: execute non-exclusive backup start: backup begins after the requested immediate checkpoint completes", "2025-02-28 13:06:50.103 P00   INFO: backup start archive = 000000040000000000000005, lsn = 0/5000028", "2025-02-28 13:06:50.103 P00   INFO: check archive for prior segment 000000040000000000000004", "2025-02-28 13:06:51.004 P00   WARN: a timeline switch has occurred since the 20250228-094415F backup, enabling delta checksum", "                                    HINT: this is normal after restoring from backup or promoting a standby.", "2025-02-28 13:06:59.765 P00   INFO: execute non-exclusive backup stop and wait for all WAL segments to archive", "2025-02-28 13:07:00.465 P00   INFO: backup stop archive = 000000040000000000000005, lsn = 0/5000138", "2025-02-28 13:07:01.176 P00   INFO: check archive for segment(s) 000000040000000000000005:000000040000000000000005", "2025-02-28 13:08:01.708 P00  ERROR: [082]: WAL segment 000000040000000000000005 was not archived before the 60000ms timeout", "                                    HINT: check the archive_command to ensure that all options are correct (especially --stanza).", "                                    HINT: check the PostgreSQL server log for errors.", "                                    HINT: run the 'start' command if the stanza was previously stopped.", "2025-02-28 13:08:01.718 P00   INFO: backup command end: aborted with exception [082]"]}
2025-02-28 13:08:01,717 p=26431 u=digitd n=ansible | PLAY RECAP ********************************************************************************************************************************************************************
2025-02-28 13:08:01,718 p=26431 u=digitd n=ansible | db.etcd.lan                : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2025-02-28 13:08:01,718 p=26431 u=digitd n=ansible | db.slave.lan               : ok=5    changed=3    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2025-02-28 13:46:56,440 p=3280 u=digitd n=ansible | ansible-playbook [core 2.14.18]
  config file = /home/digitd/travelata_test/ansible/backup_setup/ansible.cfg
  configured module search path = ['/home/digitd/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3/dist-packages/ansible
  ansible collection location = /home/digitd/.ansible/collections:/usr/share/ansible/collections
  executable location = /usr/bin/ansible-playbook
  python version = 3.11.2 (main, Sep 14 2024, 03:00:30) [GCC 12.2.0] (/usr/bin/python3)
  jinja version = 3.1.2
  libyaml = True
2025-02-28 13:46:56,441 p=3280 u=digitd n=ansible | Using /home/digitd/travelata_test/ansible/backup_setup/ansible.cfg as config file
2025-02-28 13:46:56,752 p=3280 u=digitd n=ansible | Skipping callback 'default', as we already have a stdout callback.
2025-02-28 13:46:56,753 p=3280 u=digitd n=ansible | Skipping callback 'minimal', as we already have a stdout callback.
2025-02-28 13:46:56,753 p=3280 u=digitd n=ansible | Skipping callback 'oneline', as we already have a stdout callback.
2025-02-28 13:46:56,753 p=3280 u=digitd n=ansible | PLAYBOOK: setup_backup.yml ****************************************************************************************************************************************************
2025-02-28 13:46:56,753 p=3280 u=digitd n=ansible | 2 plays in ./setup_backup.yml
2025-02-28 13:46:56,754 p=3280 u=digitd n=ansible | PLAY [Create directory for storing backups] ***********************************************************************************************************************************
2025-02-28 13:46:56,773 p=3280 u=digitd n=ansible | TASK [Create and setup rights] ************************************************************************************************************************************************
2025-02-28 13:46:57,751 p=3280 u=digitd n=ansible | ok: [db.etcd.lan] => {"ansible_facts": {"discovered_interpreter_python": "/usr/bin/python3"}, "changed": false, "gid": 110, "group": "postgres", "mode": "0764", "owner": "postgres", "path": "/mnt/pgbackrest_backups", "size": 4096, "state": "directory", "uid": 102}
2025-02-28 13:46:57,753 p=3280 u=digitd n=ansible | TASK [Create .ssh directory and authorized_keys file] *************************************************************************************************************************
2025-02-28 13:46:58,185 p=3280 u=digitd n=ansible | ok: [db.etcd.lan] => (item={'path': '/var/lib/postgresql/15/data/.ssh', 'state': 'directory', 'mode': '0700'}) => {"ansible_loop_var": "item", "changed": false, "gid": 110, "group": "postgres", "item": {"mode": "0700", "path": "/var/lib/postgresql/15/data/.ssh", "state": "directory"}, "mode": "0700", "owner": "postgres", "path": "/var/lib/postgresql/15/data/.ssh", "size": 4096, "state": "directory", "uid": 102}
2025-02-28 13:46:58,597 p=3280 u=digitd n=ansible | changed: [db.etcd.lan] => (item={'path': '/var/lib/postgresql/15/data/.ssh/authorized_keys', 'state': 'touch', 'mode': '0600'}) => {"ansible_loop_var": "item", "changed": true, "dest": "/var/lib/postgresql/15/data/.ssh/authorized_keys", "gid": 110, "group": "postgres", "item": {"mode": "0600", "path": "/var/lib/postgresql/15/data/.ssh/authorized_keys", "state": "touch"}, "mode": "0600", "owner": "postgres", "size": 0, "state": "file", "uid": 102}
2025-02-28 13:46:58,610 p=3280 u=digitd n=ansible | PLAY [Setup pgbackrest (postgres backup tool) on the patroni nodes] ***********************************************************************************************************
2025-02-28 13:46:58,617 p=3280 u=digitd n=ansible | TASK [Ensure that pgbackrest package is installed] ****************************************************************************************************************************
2025-02-28 13:47:09,499 p=3280 u=digitd n=ansible | ok: [db.slave.lan] => {"ansible_facts": {"discovered_interpreter_python": "/usr/bin/python3.11"}, "cache_update_time": 1740733242, "cache_updated": false, "changed": false}
2025-02-28 13:47:09,503 p=3280 u=digitd n=ansible | TASK [Copy files to the machines] *********************************************************************************************************************************************
2025-02-28 13:47:10,395 p=3280 u=digitd n=ansible | ok: [db.slave.lan] => {"changed": false, "checksum": "30b396d562c8f7467d7f0e39915effcb3d989e55", "dest": "/etc/pgbackrest.conf", "gid": 111, "group": "postgres", "mode": "0640", "owner": "postgres", "path": "/etc/pgbackrest.conf", "size": 566, "state": "file", "uid": 103}
2025-02-28 13:47:10,399 p=3280 u=digitd n=ansible | TASK [Scan sha1-hash] *********************************************************************************************************************************************************
2025-02-28 13:47:11,363 p=3280 u=digitd n=ansible | changed: [db.slave.lan] => {"changed": true, "cmd": ["sudo", "-u", "postgres", "ssh-keyscan", "-H", "db.etcd.lan", ">>", "/var/lib/postgresql/.ssh/known_hosts"], "delta": "0:00:00.431812", "end": "2025-02-28 13:47:11.403420", "msg": "", "rc": 0, "start": "2025-02-28 13:47:10.971608", "stderr": "getaddrinfo >>: Name or service not known\r\ngetaddrinfo >>: Name or service not known\r\ngetaddrinfo >>: Name or service not known\r\ngetaddrinfo >>: Name or service not known\r\ngetaddrinfo >>: Name or service not known\r\ngetaddrinfo /var/lib/postgresql/.ssh/known_hosts: Name or service not known\r\ngetaddrinfo /var/lib/postgresql/.ssh/known_hosts: Name or service not known\r\ngetaddrinfo /var/lib/postgresql/.ssh/known_hosts: Name or service not known\r\ngetaddrinfo /var/lib/postgresql/.ssh/known_hosts: Name or service not known\r\ngetaddrinfo /var/lib/postgresql/.ssh/known_hosts: Name or service not known", "stderr_lines": ["getaddrinfo >>: Name or service not known", "getaddrinfo >>: Name or service not known", "getaddrinfo >>: Name or service not known", "getaddrinfo >>: Name or service not known", "getaddrinfo >>: Name or service not known", "getaddrinfo /var/lib/postgresql/.ssh/known_hosts: Name or service not known", "getaddrinfo /var/lib/postgresql/.ssh/known_hosts: Name or service not known", "getaddrinfo /var/lib/postgresql/.ssh/known_hosts: Name or service not known", "getaddrinfo /var/lib/postgresql/.ssh/known_hosts: Name or service not known", "getaddrinfo /var/lib/postgresql/.ssh/known_hosts: Name or service not known"], "stdout": "# db.etcd.lan:22 SSH-2.0-OpenSSH_9.2p1 Debian-2+deb12u5\n|1|NKHGNdLr83CeLBoXYWAMI0MuLoA=|tJ6SXbXxXcQQnenCaUEvjeraD6E= ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBN0skod/ZCxD3lltYw6hNIrGwdY2fpKwhnmxWL3Zs9JWXPGf4kaUxp40PAFr8npVzyuNNe94fzpzkym5zfiEp2E=\n# db.etcd.lan:22 SSH-2.0-OpenSSH_9.2p1 Debian-2+deb12u5\n|1|qYN7PGJp/uO/FZDRKgvzMSnelC8=|6wNrc65ERuR340O50lDda7JDIKQ= ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCYYtwr+bKyS0H5pOMJsfddOblcEno3Ir8wPO/Qaiyu0LwmK6eRfnoEo6NgXCCNGM0PgcLIVuUMIImS7x6Htyh2EBYNkJwWmSy90ol5sUX7AdiploT+xxg7kA65MEE4tU+FtVyYygvd0mnSlQsUVXRL+w82sCLsC7ufpmBX2LQDiUhqjFvNRuIyfm4PH+e06mYqOT3h+9bIFLrIuGBLEWLtbl488nAmBtzzn6ahvctrvYPrH0W0jlpM7Qk69LMz8156aZHTot9LIVotZlnqSmxV41I2E4Y/VGuAVavbicKg4JqimU9kSJz7pNRZb771pDU4QBJxeRXipWXDWsVOkL3wZPsjWDKDfqW5aQERWITCQ0inhjO/H993zgMTqVGlbJeCvwakCe0F0y1/js7iGe8ZaH6IwQpp46sgg4cad9itdWejjPrgsLx8HE7f6Eo9Ue2S7OZhIp6vN6PWIUX+e/ARq4Qebyl3quCku0ZVAXgi4aH5c0Kc3niPAOc5hT/jM9c=\n# db.etcd.lan:22 SSH-2.0-OpenSSH_9.2p1 Debian-2+deb12u5\n|1|XmGMGvbbO9nsEFnCTpSp9XvTi2A=|FcKQDf68GvPtP285GyltK5RKRnA= ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIL/ZaaTZgBm91hbmIrW7xo4q28fr4Cg6DCQwx/JJT3On\n# db.etcd.lan:22 SSH-2.0-OpenSSH_9.2p1 Debian-2+deb12u5\n# db.etcd.lan:22 SSH-2.0-OpenSSH_9.2p1 Debian-2+deb12u5", "stdout_lines": ["# db.etcd.lan:22 SSH-2.0-OpenSSH_9.2p1 Debian-2+deb12u5", "|1|NKHGNdLr83CeLBoXYWAMI0MuLoA=|tJ6SXbXxXcQQnenCaUEvjeraD6E= ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBN0skod/ZCxD3lltYw6hNIrGwdY2fpKwhnmxWL3Zs9JWXPGf4kaUxp40PAFr8npVzyuNNe94fzpzkym5zfiEp2E=", "# db.etcd.lan:22 SSH-2.0-OpenSSH_9.2p1 Debian-2+deb12u5", "|1|qYN7PGJp/uO/FZDRKgvzMSnelC8=|6wNrc65ERuR340O50lDda7JDIKQ= ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCYYtwr+bKyS0H5pOMJsfddOblcEno3Ir8wPO/Qaiyu0LwmK6eRfnoEo6NgXCCNGM0PgcLIVuUMIImS7x6Htyh2EBYNkJwWmSy90ol5sUX7AdiploT+xxg7kA65MEE4tU+FtVyYygvd0mnSlQsUVXRL+w82sCLsC7ufpmBX2LQDiUhqjFvNRuIyfm4PH+e06mYqOT3h+9bIFLrIuGBLEWLtbl488nAmBtzzn6ahvctrvYPrH0W0jlpM7Qk69LMz8156aZHTot9LIVotZlnqSmxV41I2E4Y/VGuAVavbicKg4JqimU9kSJz7pNRZb771pDU4QBJxeRXipWXDWsVOkL3wZPsjWDKDfqW5aQERWITCQ0inhjO/H993zgMTqVGlbJeCvwakCe0F0y1/js7iGe8ZaH6IwQpp46sgg4cad9itdWejjPrgsLx8HE7f6Eo9Ue2S7OZhIp6vN6PWIUX+e/ARq4Qebyl3quCku0ZVAXgi4aH5c0Kc3niPAOc5hT/jM9c=", "# db.etcd.lan:22 SSH-2.0-OpenSSH_9.2p1 Debian-2+deb12u5", "|1|XmGMGvbbO9nsEFnCTpSp9XvTi2A=|FcKQDf68GvPtP285GyltK5RKRnA= ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIL/ZaaTZgBm91hbmIrW7xo4q28fr4Cg6DCQwx/JJT3On", "# db.etcd.lan:22 SSH-2.0-OpenSSH_9.2p1 Debian-2+deb12u5", "# db.etcd.lan:22 SSH-2.0-OpenSSH_9.2p1 Debian-2+deb12u5"]}
2025-02-28 13:47:11,366 p=3280 u=digitd n=ansible | TASK [Create stanza] **********************************************************************************************************************************************************
2025-02-28 13:47:12,837 p=3280 u=digitd n=ansible | changed: [db.slave.lan] => {"changed": true, "cmd": ["sudo", "-u", "postgres", "pgbackrest", "--stanza=testcluster", "--log-level-console=info", "stanza-create"], "delta": "0:00:01.028970", "end": "2025-02-28 13:47:12.895356", "msg": "", "rc": 0, "start": "2025-02-28 13:47:11.866386", "stderr": "ПРЕДУПРЕЖДЕНИЕ:  несовпадение версии для правила сортировки в базе данных \"postgres\"\nDETAIL:  База данных была создана с версией правила сортировки 2.36, но операционная система предоставляет версию 2.40.\nHINT:  Перестройте все объекты в этой базе, задействующие основное правило сортировки, и выполните ALTER DATABASE postgres REFRESH COLLATION VERSION, либо соберите PostgreSQL с правильной версией библиотеки.", "stderr_lines": ["ПРЕДУПРЕЖДЕНИЕ:  несовпадение версии для правила сортировки в базе данных \"postgres\"", "DETAIL:  База данных была создана с версией правила сортировки 2.36, но операционная система предоставляет версию 2.40.", "HINT:  Перестройте все объекты в этой базе, задействующие основное правило сортировки, и выполните ALTER DATABASE postgres REFRESH COLLATION VERSION, либо соберите PostgreSQL с правильной версией библиотеки."], "stdout": "2025-02-28 13:47:11.893 P00   INFO: stanza-create command begin 2.54.2: --exec-id=416477-cea1ac80 --log-level-console=info --pg1-path=/var/lib/postgresql/15/data --pg1-port=5050 --repo1-cipher-pass=<redacted> --repo1-cipher-type=aes-256-cbc --repo1-path=/mnt/pgbackrest_backups --repo1-sftp-host=db.etcd.lan --repo1-sftp-host-key-hash-type=sha1 --repo1-sftp-host-user=postgres --repo1-sftp-private-key-file=/var/lib/postgresql/.ssh/id_ed25519 --repo1-sftp-public-key-file=/var/lib/postgresql/.ssh/id_ed25519.pub --repo1-type=sftp --stanza=testcluster\n2025-02-28 13:47:11.921 P00   INFO: stanza-create for stanza 'testcluster' on repo1\n2025-02-28 13:47:12.891 P00   INFO: stanza-create command end: completed successfully (1002ms)", "stdout_lines": ["2025-02-28 13:47:11.893 P00   INFO: stanza-create command begin 2.54.2: --exec-id=416477-cea1ac80 --log-level-console=info --pg1-path=/var/lib/postgresql/15/data --pg1-port=5050 --repo1-cipher-pass=<redacted> --repo1-cipher-type=aes-256-cbc --repo1-path=/mnt/pgbackrest_backups --repo1-sftp-host=db.etcd.lan --repo1-sftp-host-key-hash-type=sha1 --repo1-sftp-host-user=postgres --repo1-sftp-private-key-file=/var/lib/postgresql/.ssh/id_ed25519 --repo1-sftp-public-key-file=/var/lib/postgresql/.ssh/id_ed25519.pub --repo1-type=sftp --stanza=testcluster", "2025-02-28 13:47:11.921 P00   INFO: stanza-create for stanza 'testcluster' on repo1", "2025-02-28 13:47:12.891 P00   INFO: stanza-create command end: completed successfully (1002ms)"]}
2025-02-28 13:47:12,839 p=3280 u=digitd n=ansible | TASK [Check] ******************************************************************************************************************************************************************
2025-02-28 13:47:38,671 p=3280 u=digitd n=ansible | changed: [db.slave.lan] => {"changed": true, "cmd": ["sudo", "-u", "postgres", "pgbackrest", "--stanza=testcluster", "--log-level-console=info", "check"], "delta": "0:00:25.263442", "end": "2025-02-28 13:47:38.634496", "msg": "", "rc": 0, "start": "2025-02-28 13:47:13.371054", "stderr": "ПРЕДУПРЕЖДЕНИЕ:  несовпадение версии для правила сортировки в базе данных \"postgres\"\nDETAIL:  База данных была создана с версией правила сортировки 2.36, но операционная система предоставляет версию 2.40.\nHINT:  Перестройте все объекты в этой базе, задействующие основное правило сортировки, и выполните ALTER DATABASE postgres REFRESH COLLATION VERSION, либо соберите PostgreSQL с правильной версией библиотеки.", "stderr_lines": ["ПРЕДУПРЕЖДЕНИЕ:  несовпадение версии для правила сортировки в базе данных \"postgres\"", "DETAIL:  База данных была создана с версией правила сортировки 2.36, но операционная система предоставляет версию 2.40.", "HINT:  Перестройте все объекты в этой базе, задействующие основное правило сортировки, и выполните ALTER DATABASE postgres REFRESH COLLATION VERSION, либо соберите PostgreSQL с правильной версией библиотеки."], "stdout": "2025-02-28 13:47:13.396 P00   INFO: check command begin 2.54.2: --exec-id=416506-5a8f4b9f --log-level-console=info --pg1-path=/var/lib/postgresql/15/data --pg1-port=5050 --repo1-cipher-pass=<redacted> --repo1-cipher-type=aes-256-cbc --repo1-path=/mnt/pgbackrest_backups --repo1-sftp-host=db.etcd.lan --repo1-sftp-host-key-hash-type=sha1 --repo1-sftp-host-user=postgres --repo1-sftp-private-key-file=/var/lib/postgresql/.ssh/id_ed25519 --repo1-sftp-public-key-file=/var/lib/postgresql/.ssh/id_ed25519.pub --repo1-type=sftp --stanza=testcluster\n2025-02-28 13:47:13.410 P00   INFO: check repo1 configuration (primary)\n2025-02-28 13:47:15.507 P00   INFO: check repo1 archive for WAL (primary)\n2025-02-28 13:47:38.622 P00   INFO: WAL segment 000000060000000000000009 successfully archived to '/mnt/pgbackrest_backups/archive/testcluster/15-1/0000000600000000/000000060000000000000009-171d424e863cbb19d6e55f17a0f4c7e1e7fdc746.gz' on repo1\n2025-02-28 13:47:38.622 P00   INFO: check command end: completed successfully (25229ms)", "stdout_lines": ["2025-02-28 13:47:13.396 P00   INFO: check command begin 2.54.2: --exec-id=416506-5a8f4b9f --log-level-console=info --pg1-path=/var/lib/postgresql/15/data --pg1-port=5050 --repo1-cipher-pass=<redacted> --repo1-cipher-type=aes-256-cbc --repo1-path=/mnt/pgbackrest_backups --repo1-sftp-host=db.etcd.lan --repo1-sftp-host-key-hash-type=sha1 --repo1-sftp-host-user=postgres --repo1-sftp-private-key-file=/var/lib/postgresql/.ssh/id_ed25519 --repo1-sftp-public-key-file=/var/lib/postgresql/.ssh/id_ed25519.pub --repo1-type=sftp --stanza=testcluster", "2025-02-28 13:47:13.410 P00   INFO: check repo1 configuration (primary)", "2025-02-28 13:47:15.507 P00   INFO: check repo1 archive for WAL (primary)", "2025-02-28 13:47:38.622 P00   INFO: WAL segment 000000060000000000000009 successfully archived to '/mnt/pgbackrest_backups/archive/testcluster/15-1/0000000600000000/000000060000000000000009-171d424e863cbb19d6e55f17a0f4c7e1e7fdc746.gz' on repo1", "2025-02-28 13:47:38.622 P00   INFO: check command end: completed successfully (25229ms)"]}
2025-02-28 13:47:38,674 p=3280 u=digitd n=ansible | TASK [Perform first backup of DB] *********************************************************************************************************************************************
2025-02-28 13:48:04,764 p=3280 u=digitd n=ansible | changed: [db.slave.lan] => {"changed": true, "cmd": ["sudo", "-u", "postgres", "pgbackrest", "--stanza=testcluster", "--log-level-console=info", "backup"], "delta": "0:00:25.559617", "end": "2025-02-28 13:48:04.820324", "msg": "", "rc": 0, "start": "2025-02-28 13:47:39.260707", "stderr": "ПРЕДУПРЕЖДЕНИЕ:  несовпадение версии для правила сортировки в базе данных \"postgres\"\nDETAIL:  База данных была создана с версией правила сортировки 2.36, но операционная система предоставляет версию 2.40.\nHINT:  Перестройте все объекты в этой базе, задействующие основное правило сортировки, и выполните ALTER DATABASE postgres REFRESH COLLATION VERSION, либо соберите PostgreSQL с правильной версией библиотеки.", "stderr_lines": ["ПРЕДУПРЕЖДЕНИЕ:  несовпадение версии для правила сортировки в базе данных \"postgres\"", "DETAIL:  База данных была создана с версией правила сортировки 2.36, но операционная система предоставляет версию 2.40.", "HINT:  Перестройте все объекты в этой базе, задействующие основное правило сортировки, и выполните ALTER DATABASE postgres REFRESH COLLATION VERSION, либо соберите PostgreSQL с правильной версией библиотеки."], "stdout": "2025-02-28 13:47:39.287 P00   INFO: backup command begin 2.54.2: --exec-id=416615-1e7492fe --log-level-console=info --pg1-path=/var/lib/postgresql/15/data --pg1-port=5050 --process-max=4 --repo1-block --repo1-bundle --repo1-cipher-pass=<redacted> --repo1-cipher-type=aes-256-cbc --repo1-path=/mnt/pgbackrest_backups --repo1-retention-diff=2 --repo1-retention-full=2 --repo1-sftp-host=db.etcd.lan --repo1-sftp-host-key-hash-type=sha1 --repo1-sftp-host-user=postgres --repo1-sftp-private-key-file=/var/lib/postgresql/.ssh/id_ed25519 --repo1-sftp-public-key-file=/var/lib/postgresql/.ssh/id_ed25519.pub --repo1-type=sftp --stanza=testcluster --start-fast\n2025-02-28 13:47:39.462 P00   WARN: no prior backup exists, incr backup has been changed to full\n2025-02-28 13:47:39.462 P00   INFO: execute non-exclusive backup start: backup begins after the requested immediate checkpoint completes\n2025-02-28 13:47:43.653 P00   INFO: backup start archive = 00000006000000000000000B, lsn = 0/B000060\n2025-02-28 13:47:43.653 P00   INFO: check archive for prior segment 00000006000000000000000A\n2025-02-28 13:47:57.387 P00   INFO: execute non-exclusive backup stop and wait for all WAL segments to archive\n2025-02-28 13:48:00.380 P00   INFO: backup stop archive = 00000006000000000000000B, lsn = 0/B000138\n2025-02-28 13:48:01.163 P00   INFO: check archive for segment(s) 00000006000000000000000B:00000006000000000000000B\n2025-02-28 13:48:01.867 P00   INFO: new backup label = 20250228-134739F\n2025-02-28 13:48:04.797 P00   INFO: full backup size = 29.3MB, file total = 1273\n2025-02-28 13:48:04.798 P00   INFO: backup command end: completed successfully (25514ms)\n2025-02-28 13:48:04.798 P00   INFO: expire command begin 2.54.2: --exec-id=416615-1e7492fe --log-level-console=info --repo1-cipher-pass=<redacted> --repo1-cipher-type=aes-256-cbc --repo1-path=/mnt/pgbackrest_backups --repo1-retention-diff=2 --repo1-retention-full=2 --repo1-sftp-host=db.etcd.lan --repo1-sftp-host-key-hash-type=sha1 --repo1-sftp-host-user=postgres --repo1-sftp-private-key-file=/var/lib/postgresql/.ssh/id_ed25519 --repo1-sftp-public-key-file=/var/lib/postgresql/.ssh/id_ed25519.pub --repo1-type=sftp --stanza=testcluster\n2025-02-28 13:48:04.812 P00   INFO: expire command end: completed successfully (14ms)", "stdout_lines": ["2025-02-28 13:47:39.287 P00   INFO: backup command begin 2.54.2: --exec-id=416615-1e7492fe --log-level-console=info --pg1-path=/var/lib/postgresql/15/data --pg1-port=5050 --process-max=4 --repo1-block --repo1-bundle --repo1-cipher-pass=<redacted> --repo1-cipher-type=aes-256-cbc --repo1-path=/mnt/pgbackrest_backups --repo1-retention-diff=2 --repo1-retention-full=2 --repo1-sftp-host=db.etcd.lan --repo1-sftp-host-key-hash-type=sha1 --repo1-sftp-host-user=postgres --repo1-sftp-private-key-file=/var/lib/postgresql/.ssh/id_ed25519 --repo1-sftp-public-key-file=/var/lib/postgresql/.ssh/id_ed25519.pub --repo1-type=sftp --stanza=testcluster --start-fast", "2025-02-28 13:47:39.462 P00   WARN: no prior backup exists, incr backup has been changed to full", "2025-02-28 13:47:39.462 P00   INFO: execute non-exclusive backup start: backup begins after the requested immediate checkpoint completes", "2025-02-28 13:47:43.653 P00   INFO: backup start archive = 00000006000000000000000B, lsn = 0/B000060", "2025-02-28 13:47:43.653 P00   INFO: check archive for prior segment 00000006000000000000000A", "2025-02-28 13:47:57.387 P00   INFO: execute non-exclusive backup stop and wait for all WAL segments to archive", "2025-02-28 13:48:00.380 P00   INFO: backup stop archive = 00000006000000000000000B, lsn = 0/B000138", "2025-02-28 13:48:01.163 P00   INFO: check archive for segment(s) 00000006000000000000000B:00000006000000000000000B", "2025-02-28 13:48:01.867 P00   INFO: new backup label = 20250228-134739F", "2025-02-28 13:48:04.797 P00   INFO: full backup size = 29.3MB, file total = 1273", "2025-02-28 13:48:04.798 P00   INFO: backup command end: completed successfully (25514ms)", "2025-02-28 13:48:04.798 P00   INFO: expire command begin 2.54.2: --exec-id=416615-1e7492fe --log-level-console=info --repo1-cipher-pass=<redacted> --repo1-cipher-type=aes-256-cbc --repo1-path=/mnt/pgbackrest_backups --repo1-retention-diff=2 --repo1-retention-full=2 --repo1-sftp-host=db.etcd.lan --repo1-sftp-host-key-hash-type=sha1 --repo1-sftp-host-user=postgres --repo1-sftp-private-key-file=/var/lib/postgresql/.ssh/id_ed25519 --repo1-sftp-public-key-file=/var/lib/postgresql/.ssh/id_ed25519.pub --repo1-type=sftp --stanza=testcluster", "2025-02-28 13:48:04.812 P00   INFO: expire command end: completed successfully (14ms)"]}
2025-02-28 13:48:04,770 p=3280 u=digitd n=ansible | PLAY RECAP ********************************************************************************************************************************************************************
2025-02-28 13:48:04,770 p=3280 u=digitd n=ansible | db.etcd.lan                : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2025-02-28 13:48:04,770 p=3280 u=digitd n=ansible | db.slave.lan               : ok=6    changed=4    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2025-02-28 16:50:28,735 p=12366 u=digitd n=ansible | PLAY [Create directory for storing backups] ***********************************************************************************************************************************
2025-02-28 16:50:28,755 p=12366 u=digitd n=ansible | TASK [Create and setup rights] ************************************************************************************************************************************************
2025-02-28 16:50:29,731 p=12366 u=digitd n=ansible | ok: [db.etcd.lan]
2025-02-28 16:50:29,734 p=12366 u=digitd n=ansible | TASK [Create .ssh directory and authorized_keys file] *************************************************************************************************************************
2025-02-28 16:50:30,161 p=12366 u=digitd n=ansible | ok: [db.etcd.lan] => (item={'path': '/var/lib/postgresql/15/data/.ssh', 'state': 'directory', 'mode': '0700'})
2025-02-28 16:50:30,561 p=12366 u=digitd n=ansible | changed: [db.etcd.lan] => (item={'path': '/var/lib/postgresql/15/data/.ssh/authorized_keys', 'state': 'touch', 'mode': '0600'})
2025-02-28 16:50:30,587 p=12366 u=digitd n=ansible | PLAY [Setup pgbackrest (postgres backup tool) on the patroni nodes] ***********************************************************************************************************
2025-02-28 16:50:30,595 p=12366 u=digitd n=ansible | TASK [Ensure that pgbackrest package is installed] ****************************************************************************************************************************
2025-02-28 16:50:39,939 p=12366 u=digitd n=ansible | ok: [db.master.lan]
2025-02-28 16:50:40,533 p=12366 u=digitd n=ansible | ok: [db.slave.lan]
2025-02-28 16:50:40,550 p=12366 u=digitd n=ansible | TASK [Copy files to the machines] *********************************************************************************************************************************************
2025-02-28 16:50:41,786 p=12366 u=digitd n=ansible | ok: [db.slave.lan]
2025-02-28 16:50:41,880 p=12366 u=digitd n=ansible | changed: [db.master.lan]
2025-02-28 16:50:41,883 p=12366 u=digitd n=ansible | TASK [Scan sha1-hash] *********************************************************************************************************************************************************
2025-02-28 16:50:43,112 p=12366 u=digitd n=ansible | changed: [db.master.lan]
2025-02-28 16:50:43,112 p=12366 u=digitd n=ansible | changed: [db.slave.lan]
2025-02-28 16:50:43,128 p=12366 u=digitd n=ansible | TASK [Ensure that patroni is running] *****************************************************************************************************************************************
2025-02-28 16:50:47,146 p=12366 u=digitd n=ansible | changed: [db.slave.lan]
2025-02-28 16:50:54,798 p=12366 u=digitd n=ansible | changed: [db.master.lan]
2025-02-28 16:50:54,802 p=12366 u=digitd n=ansible | TASK [Create stanza] **********************************************************************************************************************************************************
2025-02-28 16:50:55,432 p=12366 u=digitd n=ansible | fatal: [db.master.lan]: FAILED! => {"changed": true, "cmd": ["sudo", "-u", "postgres", "pgbackrest", "--stanza=testcluster", "--log-level-console=info", "stanza-create"], "delta": "0:00:00.086965", "end": "2025-02-28 16:50:55.528982", "msg": "non-zero return code", "rc": 56, "start": "2025-02-28 16:50:55.442017", "stderr": "", "stderr_lines": [], "stdout": "2025-02-28 16:50:55.493 P00   INFO: stanza-create command begin 2.54.2: --exec-id=481526-fc0d7ded --log-level-console=info --pg1-path=/var/lib/postgresql/15/data --pg1-port=5050 --repo1-cipher-pass=<redacted> --repo1-cipher-type=aes-256-cbc --repo1-path=/mnt/pgbackrest_backups --repo1-sftp-host=db.etcd.lan --repo1-sftp-host-key-hash-type=sha1 --repo1-sftp-host-user=postgres --repo1-sftp-private-key-file=/var/lib/postgresql/.ssh/id_ed25519 --repo1-sftp-public-key-file=/var/lib/postgresql/.ssh/id_ed25519.pub --repo1-type=sftp --stanza=testcluster\n2025-02-28 16:50:55.520 P00   WARN: unable to check pg1: [DbConnectError] unable to connect to 'dbname='postgres' port=5050': connection to server on socket \"/var/run/postgresql/.s.PGSQL.5050\" failed: No such file or directory\n                                    \tIs the server running locally and accepting connections on that socket?\n2025-02-28 16:50:55.525 P00  ERROR: [056]: unable to find primary cluster - cannot proceed\n                                    HINT: are all available clusters in recovery?\n2025-02-28 16:50:55.525 P00   INFO: stanza-create command end: aborted with exception [056]", "stdout_lines": ["2025-02-28 16:50:55.493 P00   INFO: stanza-create command begin 2.54.2: --exec-id=481526-fc0d7ded --log-level-console=info --pg1-path=/var/lib/postgresql/15/data --pg1-port=5050 --repo1-cipher-pass=<redacted> --repo1-cipher-type=aes-256-cbc --repo1-path=/mnt/pgbackrest_backups --repo1-sftp-host=db.etcd.lan --repo1-sftp-host-key-hash-type=sha1 --repo1-sftp-host-user=postgres --repo1-sftp-private-key-file=/var/lib/postgresql/.ssh/id_ed25519 --repo1-sftp-public-key-file=/var/lib/postgresql/.ssh/id_ed25519.pub --repo1-type=sftp --stanza=testcluster", "2025-02-28 16:50:55.520 P00   WARN: unable to check pg1: [DbConnectError] unable to connect to 'dbname='postgres' port=5050': connection to server on socket \"/var/run/postgresql/.s.PGSQL.5050\" failed: No such file or directory", "                                    \tIs the server running locally and accepting connections on that socket?", "2025-02-28 16:50:55.525 P00  ERROR: [056]: unable to find primary cluster - cannot proceed", "                                    HINT: are all available clusters in recovery?", "2025-02-28 16:50:55.525 P00   INFO: stanza-create command end: aborted with exception [056]"]}
2025-02-28 16:50:56,251 p=12366 u=digitd n=ansible | fatal: [db.slave.lan]: FAILED! => {"changed": true, "cmd": ["sudo", "-u", "postgres", "pgbackrest", "--stanza=testcluster", "--log-level-console=info", "stanza-create"], "delta": "0:00:00.925525", "end": "2025-02-28 16:50:56.361372", "msg": "non-zero return code", "rc": 56, "start": "2025-02-28 16:50:55.435847", "stderr": "", "stderr_lines": [], "stdout": "2025-02-28 16:50:55.503 P00   INFO: stanza-create command begin 2.54.2: --exec-id=450084-aef7b057 --log-level-console=info --pg1-path=/var/lib/postgresql/15/data --pg1-port=5050 --repo1-cipher-pass=<redacted> --repo1-cipher-type=aes-256-cbc --repo1-path=/mnt/pgbackrest_backups --repo1-sftp-host=db.etcd.lan --repo1-sftp-host-key-hash-type=sha1 --repo1-sftp-host-user=postgres --repo1-sftp-private-key-file=/var/lib/postgresql/.ssh/id_ed25519 --repo1-sftp-public-key-file=/var/lib/postgresql/.ssh/id_ed25519.pub --repo1-type=sftp --stanza=testcluster\n2025-02-28 16:50:56.349 P00   WARN: unable to check pg1: [DbConnectError] unable to connect to 'dbname='postgres' port=5050': connection to server on socket \"/var/run/postgresql/.s.PGSQL.5050\" failed: No such file or directory\n                                    \tIs the server running locally and accepting connections on that socket?\n2025-02-28 16:50:56.350 P00  ERROR: [056]: unable to find primary cluster - cannot proceed\n                                    HINT: are all available clusters in recovery?\n2025-02-28 16:50:56.350 P00   INFO: stanza-create command end: aborted with exception [056]", "stdout_lines": ["2025-02-28 16:50:55.503 P00   INFO: stanza-create command begin 2.54.2: --exec-id=450084-aef7b057 --log-level-console=info --pg1-path=/var/lib/postgresql/15/data --pg1-port=5050 --repo1-cipher-pass=<redacted> --repo1-cipher-type=aes-256-cbc --repo1-path=/mnt/pgbackrest_backups --repo1-sftp-host=db.etcd.lan --repo1-sftp-host-key-hash-type=sha1 --repo1-sftp-host-user=postgres --repo1-sftp-private-key-file=/var/lib/postgresql/.ssh/id_ed25519 --repo1-sftp-public-key-file=/var/lib/postgresql/.ssh/id_ed25519.pub --repo1-type=sftp --stanza=testcluster", "2025-02-28 16:50:56.349 P00   WARN: unable to check pg1: [DbConnectError] unable to connect to 'dbname='postgres' port=5050': connection to server on socket \"/var/run/postgresql/.s.PGSQL.5050\" failed: No such file or directory", "                                    \tIs the server running locally and accepting connections on that socket?", "2025-02-28 16:50:56.350 P00  ERROR: [056]: unable to find primary cluster - cannot proceed", "                                    HINT: are all available clusters in recovery?", "2025-02-28 16:50:56.350 P00   INFO: stanza-create command end: aborted with exception [056]"]}
2025-02-28 16:50:56,252 p=12366 u=digitd n=ansible | PLAY RECAP ********************************************************************************************************************************************************************
2025-02-28 16:50:56,252 p=12366 u=digitd n=ansible | db.etcd.lan                : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2025-02-28 16:50:56,253 p=12366 u=digitd n=ansible | db.master.lan              : ok=4    changed=3    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2025-02-28 16:50:56,253 p=12366 u=digitd n=ansible | db.slave.lan               : ok=4    changed=2    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2025-02-28 16:51:31,497 p=13042 u=digitd n=ansible | PLAY [Create directory for storing backups] ***********************************************************************************************************************************
2025-02-28 16:51:31,505 p=13042 u=digitd n=ansible | TASK [Create and setup rights] ************************************************************************************************************************************************
2025-02-28 16:51:32,438 p=13042 u=digitd n=ansible | ok: [db.etcd.lan]
2025-02-28 16:51:32,441 p=13042 u=digitd n=ansible | TASK [Create .ssh directory and authorized_keys file] *************************************************************************************************************************
2025-02-28 16:51:32,871 p=13042 u=digitd n=ansible | ok: [db.etcd.lan] => (item={'path': '/var/lib/postgresql/15/data/.ssh', 'state': 'directory', 'mode': '0700'})
2025-02-28 16:51:33,240 p=13042 u=digitd n=ansible | changed: [db.etcd.lan] => (item={'path': '/var/lib/postgresql/15/data/.ssh/authorized_keys', 'state': 'touch', 'mode': '0600'})
2025-02-28 16:51:33,251 p=13042 u=digitd n=ansible | PLAY [Setup pgbackrest (postgres backup tool) on the patroni nodes] ***********************************************************************************************************
2025-02-28 16:51:33,263 p=13042 u=digitd n=ansible | TASK [Ensure that pgbackrest package is installed] ****************************************************************************************************************************
2025-02-28 16:51:35,326 p=13042 u=digitd n=ansible | ok: [db.master.lan]
2025-02-28 16:51:35,739 p=13042 u=digitd n=ansible | ok: [db.slave.lan]
2025-02-28 16:51:35,742 p=13042 u=digitd n=ansible | TASK [Copy files to the machines] *********************************************************************************************************************************************
2025-02-28 16:51:36,660 p=13042 u=digitd n=ansible | ok: [db.master.lan]
2025-02-28 16:51:36,676 p=13042 u=digitd n=ansible | ok: [db.slave.lan]
2025-02-28 16:51:36,680 p=13042 u=digitd n=ansible | TASK [Scan sha1-hash] *********************************************************************************************************************************************************
2025-02-28 16:51:37,801 p=13042 u=digitd n=ansible | changed: [db.master.lan]
2025-02-28 16:51:37,802 p=13042 u=digitd n=ansible | changed: [db.slave.lan]
2025-02-28 16:51:37,804 p=13042 u=digitd n=ansible | TASK [Ensure that patroni is running] *****************************************************************************************************************************************
2025-02-28 16:51:39,431 p=13042 u=digitd n=ansible | ok: [db.master.lan]
2025-02-28 16:51:39,432 p=13042 u=digitd n=ansible | ok: [db.slave.lan]
2025-02-28 16:51:39,434 p=13042 u=digitd n=ansible | TASK [Create stanza] **********************************************************************************************************************************************************
2025-02-28 16:51:39,947 p=13042 u=digitd n=ansible | fatal: [db.slave.lan]: FAILED! => {"changed": true, "cmd": ["sudo", "-u", "postgres", "pgbackrest", "--stanza=testcluster", "--log-level-console=info", "stanza-create"], "delta": "0:00:00.086740", "end": "2025-02-28 16:51:40.078798", "msg": "non-zero return code", "rc": 56, "start": "2025-02-28 16:51:39.992058", "stderr": "", "stderr_lines": [], "stdout": "2025-02-28 16:51:40.017 P00   INFO: stanza-create command begin 2.54.2: --exec-id=450622-57a2d94a --log-level-console=info --pg1-path=/var/lib/postgresql/15/data --pg1-port=5050 --repo1-cipher-pass=<redacted> --repo1-cipher-type=aes-256-cbc --repo1-path=/mnt/pgbackrest_backups --repo1-sftp-host=db.etcd.lan --repo1-sftp-host-key-hash-type=sha1 --repo1-sftp-host-user=postgres --repo1-sftp-private-key-file=/var/lib/postgresql/.ssh/id_ed25519 --repo1-sftp-public-key-file=/var/lib/postgresql/.ssh/id_ed25519.pub --repo1-type=sftp --stanza=testcluster\n2025-02-28 16:51:40.072 P00  ERROR: [056]: unable to find primary cluster - cannot proceed\n                                    HINT: are all available clusters in recovery?\n2025-02-28 16:51:40.072 P00   INFO: stanza-create command end: aborted with exception [056]", "stdout_lines": ["2025-02-28 16:51:40.017 P00   INFO: stanza-create command begin 2.54.2: --exec-id=450622-57a2d94a --log-level-console=info --pg1-path=/var/lib/postgresql/15/data --pg1-port=5050 --repo1-cipher-pass=<redacted> --repo1-cipher-type=aes-256-cbc --repo1-path=/mnt/pgbackrest_backups --repo1-sftp-host=db.etcd.lan --repo1-sftp-host-key-hash-type=sha1 --repo1-sftp-host-user=postgres --repo1-sftp-private-key-file=/var/lib/postgresql/.ssh/id_ed25519 --repo1-sftp-public-key-file=/var/lib/postgresql/.ssh/id_ed25519.pub --repo1-type=sftp --stanza=testcluster", "2025-02-28 16:51:40.072 P00  ERROR: [056]: unable to find primary cluster - cannot proceed", "                                    HINT: are all available clusters in recovery?", "2025-02-28 16:51:40.072 P00   INFO: stanza-create command end: aborted with exception [056]"]}
2025-02-28 16:51:41,268 p=13042 u=digitd n=ansible | changed: [db.master.lan]
2025-02-28 16:51:41,271 p=13042 u=digitd n=ansible | TASK [Check] ******************************************************************************************************************************************************************
2025-02-28 16:52:00,412 p=13042 u=digitd n=ansible | changed: [db.master.lan]
2025-02-28 16:52:00,414 p=13042 u=digitd n=ansible | TASK [Perform first backup of DB] *********************************************************************************************************************************************
2025-02-28 16:52:14,219 p=13042 u=digitd n=ansible | changed: [db.master.lan]
2025-02-28 16:52:14,227 p=13042 u=digitd n=ansible | PLAY RECAP ********************************************************************************************************************************************************************
2025-02-28 16:52:14,227 p=13042 u=digitd n=ansible | db.etcd.lan                : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2025-02-28 16:52:14,227 p=13042 u=digitd n=ansible | db.master.lan              : ok=7    changed=4    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2025-02-28 16:52:14,227 p=13042 u=digitd n=ansible | db.slave.lan               : ok=4    changed=1    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2025-02-28 16:52:21,739 p=13574 u=digitd n=ansible | PLAY [Create directory for storing backups] ***********************************************************************************************************************************
2025-02-28 16:52:21,747 p=13574 u=digitd n=ansible | TASK [Create and setup rights] ************************************************************************************************************************************************
2025-02-28 16:52:22,355 p=13574 u=digitd n=ansible | ok: [db.etcd.lan]
2025-02-28 16:52:22,357 p=13574 u=digitd n=ansible | TASK [Create .ssh directory and authorized_keys file] *************************************************************************************************************************
2025-02-28 16:52:22,792 p=13574 u=digitd n=ansible | ok: [db.etcd.lan] => (item={'path': '/var/lib/postgresql/15/data/.ssh', 'state': 'directory', 'mode': '0700'})
2025-02-28 16:52:23,206 p=13574 u=digitd n=ansible | changed: [db.etcd.lan] => (item={'path': '/var/lib/postgresql/15/data/.ssh/authorized_keys', 'state': 'touch', 'mode': '0600'})
2025-02-28 16:52:23,215 p=13574 u=digitd n=ansible | PLAY [Setup pgbackrest (postgres backup tool) on the patroni nodes] ***********************************************************************************************************
2025-02-28 16:52:23,227 p=13574 u=digitd n=ansible | TASK [Ensure that pgbackrest package is installed] ****************************************************************************************************************************
2025-02-28 16:52:25,556 p=13574 u=digitd n=ansible | ok: [db.master.lan]
2025-02-28 16:52:25,886 p=13574 u=digitd n=ansible | ok: [db.slave.lan]
2025-02-28 16:52:25,890 p=13574 u=digitd n=ansible | TASK [Copy files to the machines] *********************************************************************************************************************************************
2025-02-28 16:52:26,787 p=13574 u=digitd n=ansible | ok: [db.master.lan]
2025-02-28 16:52:26,854 p=13574 u=digitd n=ansible | ok: [db.slave.lan]
2025-02-28 16:52:26,856 p=13574 u=digitd n=ansible | TASK [Scan sha1-hash] *********************************************************************************************************************************************************
2025-02-28 16:52:28,061 p=13574 u=digitd n=ansible | changed: [db.master.lan]
2025-02-28 16:52:28,063 p=13574 u=digitd n=ansible | changed: [db.slave.lan]
2025-02-28 16:52:28,065 p=13574 u=digitd n=ansible | TASK [Ensure that patroni is running] *****************************************************************************************************************************************
2025-02-28 16:52:29,724 p=13574 u=digitd n=ansible | ok: [db.master.lan]
2025-02-28 16:52:29,815 p=13574 u=digitd n=ansible | ok: [db.slave.lan]
2025-02-28 16:52:29,817 p=13574 u=digitd n=ansible | TASK [Create stanza] **********************************************************************************************************************************************************
2025-02-28 16:52:30,266 p=13574 u=digitd n=ansible | fatal: [db.slave.lan]: FAILED! => {"changed": true, "cmd": ["sudo", "-u", "postgres", "pgbackrest", "--stanza=testcluster", "--log-level-console=info", "stanza-create"], "delta": "0:00:00.055334", "end": "2025-02-28 16:52:30.403318", "msg": "non-zero return code", "rc": 56, "start": "2025-02-28 16:52:30.347984", "stderr": "", "stderr_lines": [], "stdout": "2025-02-28 16:52:30.368 P00   INFO: stanza-create command begin 2.54.2: --exec-id=451144-108c9bdd --log-level-console=info --pg1-path=/var/lib/postgresql/15/data --pg1-port=5050 --repo1-cipher-pass=<redacted> --repo1-cipher-type=aes-256-cbc --repo1-path=/mnt/pgbackrest_backups --repo1-sftp-host=db.etcd.lan --repo1-sftp-host-key-hash-type=sha1 --repo1-sftp-host-user=postgres --repo1-sftp-private-key-file=/var/lib/postgresql/.ssh/id_ed25519 --repo1-sftp-public-key-file=/var/lib/postgresql/.ssh/id_ed25519.pub --repo1-type=sftp --stanza=testcluster\n2025-02-28 16:52:30.398 P00  ERROR: [056]: unable to find primary cluster - cannot proceed\n                                    HINT: are all available clusters in recovery?\n2025-02-28 16:52:30.398 P00   INFO: stanza-create command end: aborted with exception [056]", "stdout_lines": ["2025-02-28 16:52:30.368 P00   INFO: stanza-create command begin 2.54.2: --exec-id=451144-108c9bdd --log-level-console=info --pg1-path=/var/lib/postgresql/15/data --pg1-port=5050 --repo1-cipher-pass=<redacted> --repo1-cipher-type=aes-256-cbc --repo1-path=/mnt/pgbackrest_backups --repo1-sftp-host=db.etcd.lan --repo1-sftp-host-key-hash-type=sha1 --repo1-sftp-host-user=postgres --repo1-sftp-private-key-file=/var/lib/postgresql/.ssh/id_ed25519 --repo1-sftp-public-key-file=/var/lib/postgresql/.ssh/id_ed25519.pub --repo1-type=sftp --stanza=testcluster", "2025-02-28 16:52:30.398 P00  ERROR: [056]: unable to find primary cluster - cannot proceed", "                                    HINT: are all available clusters in recovery?", "2025-02-28 16:52:30.398 P00   INFO: stanza-create command end: aborted with exception [056]"]}
2025-02-28 16:52:31,827 p=13574 u=digitd n=ansible | changed: [db.master.lan]
2025-02-28 16:52:31,830 p=13574 u=digitd n=ansible | TASK [Check] ******************************************************************************************************************************************************************
2025-02-28 16:52:37,674 p=13574 u=digitd n=ansible | changed: [db.master.lan]
2025-02-28 16:52:37,677 p=13574 u=digitd n=ansible | TASK [Perform first backup of DB] *********************************************************************************************************************************************
2025-02-28 16:52:55,190 p=13574 u=digitd n=ansible | changed: [db.master.lan]
2025-02-28 16:52:55,196 p=13574 u=digitd n=ansible | PLAY RECAP ********************************************************************************************************************************************************************
2025-02-28 16:52:55,196 p=13574 u=digitd n=ansible | db.etcd.lan                : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2025-02-28 16:52:55,196 p=13574 u=digitd n=ansible | db.master.lan              : ok=7    changed=4    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2025-02-28 16:52:55,197 p=13574 u=digitd n=ansible | db.slave.lan               : ok=4    changed=1    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2025-02-28 16:54:48,125 p=14451 u=digitd n=ansible | PLAY [Create directory for storing backups] ***********************************************************************************************************************************
2025-02-28 16:54:48,134 p=14451 u=digitd n=ansible | TASK [Create and setup rights] ************************************************************************************************************************************************
2025-02-28 16:54:49,056 p=14451 u=digitd n=ansible | ok: [db.etcd.lan]
2025-02-28 16:54:49,059 p=14451 u=digitd n=ansible | TASK [Create .ssh directory and authorized_keys file] *************************************************************************************************************************
2025-02-28 16:54:49,498 p=14451 u=digitd n=ansible | ok: [db.etcd.lan] => (item={'path': '/var/lib/postgresql/15/data/.ssh', 'state': 'directory', 'mode': '0700'})
2025-02-28 16:54:49,915 p=14451 u=digitd n=ansible | changed: [db.etcd.lan] => (item={'path': '/var/lib/postgresql/15/data/.ssh/authorized_keys', 'state': 'touch', 'mode': '0600'})
2025-02-28 16:54:49,924 p=14451 u=digitd n=ansible | PLAY [Setup pgbackrest (postgres backup tool) on the patroni nodes] ***********************************************************************************************************
2025-02-28 16:54:49,937 p=14451 u=digitd n=ansible | TASK [Ensure that pgbackrest package is installed] ****************************************************************************************************************************
2025-02-28 16:54:52,939 p=14451 u=digitd n=ansible | ok: [db.master.lan]
2025-02-28 16:54:53,927 p=14451 u=digitd n=ansible | ok: [db.slave.lan]
2025-02-28 16:54:53,930 p=14451 u=digitd n=ansible | TASK [Copy files to the machines] *********************************************************************************************************************************************
2025-02-28 16:54:54,817 p=14451 u=digitd n=ansible | ok: [db.master.lan]
2025-02-28 16:54:55,057 p=14451 u=digitd n=ansible | ok: [db.slave.lan]
2025-02-28 16:54:55,059 p=14451 u=digitd n=ansible | TASK [Scan sha1-hash] *********************************************************************************************************************************************************
2025-02-28 16:54:56,060 p=14451 u=digitd n=ansible | changed: [db.master.lan]
2025-02-28 16:54:56,377 p=14451 u=digitd n=ansible | changed: [db.slave.lan]
2025-02-28 16:54:56,390 p=14451 u=digitd n=ansible | PLAY [master] *****************************************************************************************************************************************************************
2025-02-28 16:54:56,400 p=14451 u=digitd n=ansible | TASK [Ensure that patroni is running] *****************************************************************************************************************************************
2025-02-28 16:54:57,974 p=14451 u=digitd n=ansible | ok: [db.master.lan]
2025-02-28 16:54:57,976 p=14451 u=digitd n=ansible | TASK [Create stanza] **********************************************************************************************************************************************************
2025-02-28 16:54:58,895 p=14451 u=digitd n=ansible | changed: [db.master.lan]
2025-02-28 16:54:58,898 p=14451 u=digitd n=ansible | TASK [Check] ******************************************************************************************************************************************************************
2025-02-28 16:55:03,146 p=14451 u=digitd n=ansible | changed: [db.master.lan]
2025-02-28 16:55:03,148 p=14451 u=digitd n=ansible | TASK [Perform first backup of DB] *********************************************************************************************************************************************
2025-02-28 16:55:17,929 p=14451 u=digitd n=ansible | changed: [db.master.lan]
2025-02-28 16:55:17,936 p=14451 u=digitd n=ansible | PLAY RECAP ********************************************************************************************************************************************************************
2025-02-28 16:55:17,936 p=14451 u=digitd n=ansible | db.etcd.lan                : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2025-02-28 16:55:17,936 p=14451 u=digitd n=ansible | db.master.lan              : ok=7    changed=4    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2025-02-28 16:55:17,936 p=14451 u=digitd n=ansible | db.slave.lan               : ok=3    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2025-02-28 17:03:30,046 p=17129 u=digitd n=ansible | PLAY [Create directory for storing backups] ***********************************************************************************************************************************
2025-02-28 17:03:30,057 p=17129 u=digitd n=ansible | TASK [Create and setup rights] ************************************************************************************************************************************************
2025-02-28 17:03:30,978 p=17129 u=digitd n=ansible | ok: [db.etcd.lan]
2025-02-28 17:03:30,980 p=17129 u=digitd n=ansible | TASK [Create .ssh directory and authorized_keys file] *************************************************************************************************************************
2025-02-28 17:03:31,423 p=17129 u=digitd n=ansible | ok: [db.etcd.lan] => (item={'path': '/var/lib/postgresql/15/data/.ssh', 'state': 'directory', 'mode': '0700'})
2025-02-28 17:03:31,821 p=17129 u=digitd n=ansible | changed: [db.etcd.lan] => (item={'path': '/var/lib/postgresql/15/data/.ssh/authorized_keys', 'state': 'touch', 'mode': '0600'})
2025-02-28 17:03:31,832 p=17129 u=digitd n=ansible | PLAY [Setup pgbackrest (postgres backup tool) on the patroni nodes] ***********************************************************************************************************
2025-02-28 17:03:31,845 p=17129 u=digitd n=ansible | TASK [Ensure that pgbackrest package is installed] ****************************************************************************************************************************
2025-02-28 17:03:36,250 p=17129 u=digitd n=ansible | ok: [db.master.lan]
2025-02-28 17:03:38,776 p=17129 u=digitd n=ansible | ok: [db.slave.lan]
2025-02-28 17:03:38,778 p=17129 u=digitd n=ansible | TASK [Copy files to the machines] *********************************************************************************************************************************************
2025-02-28 17:03:39,662 p=17129 u=digitd n=ansible | ok: [db.master.lan]
2025-02-28 17:03:39,810 p=17129 u=digitd n=ansible | ok: [db.slave.lan]
2025-02-28 17:03:39,813 p=17129 u=digitd n=ansible | TASK [Scan sha1-hash] *********************************************************************************************************************************************************
2025-02-28 17:03:40,893 p=17129 u=digitd n=ansible | changed: [db.slave.lan]
2025-02-28 17:03:40,897 p=17129 u=digitd n=ansible | changed: [db.master.lan]
2025-02-28 17:03:40,912 p=17129 u=digitd n=ansible | PLAY [Start backuping] ********************************************************************************************************************************************************
2025-02-28 17:03:40,917 p=17129 u=digitd n=ansible | TASK [Ensure that patroni is running] *****************************************************************************************************************************************
2025-02-28 17:03:42,554 p=17129 u=digitd n=ansible | ok: [db.master.lan]
2025-02-28 17:03:42,557 p=17129 u=digitd n=ansible | TASK [Create stanza] **********************************************************************************************************************************************************
2025-02-28 17:03:43,565 p=17129 u=digitd n=ansible | changed: [db.master.lan]
2025-02-28 17:03:43,568 p=17129 u=digitd n=ansible | TASK [Check] ******************************************************************************************************************************************************************
2025-02-28 17:03:46,443 p=17129 u=digitd n=ansible | changed: [db.master.lan]
2025-02-28 17:03:46,446 p=17129 u=digitd n=ansible | TASK [Perform first backup of DB] *********************************************************************************************************************************************
2025-02-28 17:03:56,122 p=17129 u=digitd n=ansible | changed: [db.master.lan]
2025-02-28 17:03:56,124 p=17129 u=digitd n=ansible | TASK [Show info about clusters] ***********************************************************************************************************************************************
2025-02-28 17:03:56,752 p=17129 u=digitd n=ansible | changed: [db.master.lan]
2025-02-28 17:03:56,767 p=17129 u=digitd n=ansible | TASK [Print it] ***************************************************************************************************************************************************************
2025-02-28 17:03:56,782 p=17129 u=digitd n=ansible | ok: [db.master.lan] => {
    "msg": [
        "stanza: testcluster",
        "    status: ok",
        "    cipher: aes-256-cbc",
        "",
        "    db (current)",
        "        wal archive min/max (15): 000000010000000000000001/00000002000000000000000F",
        "",
        "        full backup: 20250228-165201F",
        "            timestamp start/stop: 2025-02-28 16:52:01+03 / 2025-02-28 16:52:10+03",
        "            wal start/stop: 000000020000000000000006 / 000000020000000000000006",
        "            database size: 22.0MB, database backup size: 22.0MB",
        "            repo1: backup size: 2.9MB",
        "",
        "        incr backup: 20250228-165201F_20250228-165238I",
        "            timestamp start/stop: 2025-02-28 16:52:38+03 / 2025-02-28 16:52:51+03",
        "            wal start/stop: 000000020000000000000009 / 000000020000000000000009",
        "            database size: 22.0MB, database backup size: 8.3KB",
        "            repo1: backup size: 440B",
        "            backup reference total: 1 full",
        "",
        "        incr backup: 20250228-165201F_20250228-165503I",
        "            timestamp start/stop: 2025-02-28 16:55:03+03 / 2025-02-28 16:55:12+03",
        "            wal start/stop: 00000002000000000000000C / 00000002000000000000000C",
        "            database size: 22.0MB, database backup size: 8.3KB",
        "            repo1: backup size: 440B",
        "            backup reference total: 1 full, 1 incr",
        "",
        "        incr backup: 20250228-165201F_20250228-170347I",
        "            timestamp start/stop: 2025-02-28 17:03:47+03 / 2025-02-28 17:03:53+03",
        "            wal start/stop: 00000002000000000000000E / 00000002000000000000000F",
        "            database size: 22.0MB, database backup size: 8.3KB",
        "            repo1: backup size: 440B",
        "            backup reference total: 1 full, 2 incr"
    ]
}
2025-02-28 17:03:56,790 p=17129 u=digitd n=ansible | PLAY RECAP ********************************************************************************************************************************************************************
2025-02-28 17:03:56,790 p=17129 u=digitd n=ansible | db.etcd.lan                : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2025-02-28 17:03:56,790 p=17129 u=digitd n=ansible | db.master.lan              : ok=9    changed=5    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2025-02-28 17:03:56,791 p=17129 u=digitd n=ansible | db.slave.lan               : ok=3    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2025-02-28 17:11:20,278 p=19330 u=digitd n=ansible | PLAY [Create directory for storing backups] ***********************************************************************************************************************************
2025-02-28 17:11:20,287 p=19330 u=digitd n=ansible | TASK [Create and setup rights] ************************************************************************************************************************************************
2025-02-28 17:11:21,208 p=19330 u=digitd n=ansible | ok: [db.etcd.lan]
2025-02-28 17:11:21,210 p=19330 u=digitd n=ansible | TASK [Create .ssh directory and authorized_keys file] *************************************************************************************************************************
2025-02-28 17:11:21,653 p=19330 u=digitd n=ansible | ok: [db.etcd.lan] => (item={'path': '/var/lib/postgresql/15/data/.ssh', 'state': 'directory', 'mode': '0700'})
2025-02-28 17:11:22,095 p=19330 u=digitd n=ansible | changed: [db.etcd.lan] => (item={'path': '/var/lib/postgresql/15/data/.ssh/authorized_keys', 'state': 'touch', 'mode': '0600'})
2025-02-28 17:11:22,104 p=19330 u=digitd n=ansible | PLAY [Setup pgbackrest (postgres backup tool) on the patroni nodes] ***********************************************************************************************************
2025-02-28 17:11:22,118 p=19330 u=digitd n=ansible | TASK [Ensure that pgbackrest package is installed] ****************************************************************************************************************************
2025-02-28 17:11:25,048 p=19330 u=digitd n=ansible | ok: [db.master.lan]
2025-02-28 17:11:26,482 p=19330 u=digitd n=ansible | ok: [db.slave.lan]
2025-02-28 17:11:26,487 p=19330 u=digitd n=ansible | TASK [Copy files to the machines] *********************************************************************************************************************************************
2025-02-28 17:11:27,339 p=19330 u=digitd n=ansible | ok: [db.slave.lan]
2025-02-28 17:11:27,371 p=19330 u=digitd n=ansible | ok: [db.master.lan]
2025-02-28 17:11:27,373 p=19330 u=digitd n=ansible | TASK [Scan sha1-hash] *********************************************************************************************************************************************************
2025-02-28 17:11:28,451 p=19330 u=digitd n=ansible | changed: [db.slave.lan]
2025-02-28 17:11:28,451 p=19330 u=digitd n=ansible | changed: [db.master.lan]
2025-02-28 17:11:28,464 p=19330 u=digitd n=ansible | PLAY [Start backuping] ********************************************************************************************************************************************************
2025-02-28 17:11:28,470 p=19330 u=digitd n=ansible | TASK [Ensure that patroni is running] *****************************************************************************************************************************************
2025-02-28 17:11:29,941 p=19330 u=digitd n=ansible | ok: [db.master.lan]
2025-02-28 17:11:29,943 p=19330 u=digitd n=ansible | TASK [Create stanza] **********************************************************************************************************************************************************
2025-02-28 17:11:30,963 p=19330 u=digitd n=ansible | changed: [db.master.lan]
2025-02-28 17:11:30,965 p=19330 u=digitd n=ansible | TASK [Check] ******************************************************************************************************************************************************************
2025-02-28 17:11:32,928 p=19330 u=digitd n=ansible | changed: [db.master.lan]
2025-02-28 17:11:32,931 p=19330 u=digitd n=ansible | TASK [Perform first backup of DB] *********************************************************************************************************************************************
2025-02-28 17:11:42,780 p=19330 u=digitd n=ansible | changed: [db.master.lan]
2025-02-28 17:11:42,782 p=19330 u=digitd n=ansible | TASK [Show info about backups] ************************************************************************************************************************************************
2025-02-28 17:11:43,405 p=19330 u=digitd n=ansible | changed: [db.master.lan]
2025-02-28 17:11:43,408 p=19330 u=digitd n=ansible | TASK [Print it] ***************************************************************************************************************************************************************
2025-02-28 17:11:43,422 p=19330 u=digitd n=ansible | ok: [db.master.lan] => {
    "msg": [
        "stanza: testcluster",
        "    status: ok",
        "    cipher: aes-256-cbc",
        "",
        "    db (current)",
        "        wal archive min/max (15): 000000010000000000000001/000000020000000000000012",
        "",
        "        full backup: 20250228-165201F",
        "            timestamp start/stop: 2025-02-28 16:52:01+03 / 2025-02-28 16:52:10+03",
        "            wal start/stop: 000000020000000000000006 / 000000020000000000000006",
        "            database size: 22.0MB, database backup size: 22.0MB",
        "            repo1: backup size: 2.9MB",
        "",
        "        incr backup: 20250228-165201F_20250228-165238I",
        "            timestamp start/stop: 2025-02-28 16:52:38+03 / 2025-02-28 16:52:51+03",
        "            wal start/stop: 000000020000000000000009 / 000000020000000000000009",
        "            database size: 22.0MB, database backup size: 8.3KB",
        "            repo1: backup size: 440B",
        "            backup reference total: 1 full",
        "",
        "        incr backup: 20250228-165201F_20250228-165503I",
        "            timestamp start/stop: 2025-02-28 16:55:03+03 / 2025-02-28 16:55:12+03",
        "            wal start/stop: 00000002000000000000000C / 00000002000000000000000C",
        "            database size: 22.0MB, database backup size: 8.3KB",
        "            repo1: backup size: 440B",
        "            backup reference total: 1 full, 1 incr",
        "",
        "        incr backup: 20250228-165201F_20250228-170347I",
        "            timestamp start/stop: 2025-02-28 17:03:47+03 / 2025-02-28 17:03:53+03",
        "            wal start/stop: 00000002000000000000000E / 00000002000000000000000F",
        "            database size: 22.0MB, database backup size: 8.3KB",
        "            repo1: backup size: 440B",
        "            backup reference total: 1 full, 2 incr",
        "",
        "        incr backup: 20250228-165201F_20250228-171133I",
        "            timestamp start/stop: 2025-02-28 17:11:33+03 / 2025-02-28 17:11:40+03",
        "            wal start/stop: 000000020000000000000011 / 000000020000000000000012",
        "            database size: 22.0MB, database backup size: 8.3KB",
        "            repo1: backup size: 440B",
        "            backup reference total: 1 full, 3 incr"
    ]
}
2025-02-28 17:11:43,426 p=19330 u=digitd n=ansible | TASK [Create cron job] ********************************************************************************************************************************************************
2025-02-28 17:11:43,992 p=19330 u=digitd n=ansible | changed: [db.master.lan]
2025-02-28 17:11:44,000 p=19330 u=digitd n=ansible | PLAY RECAP ********************************************************************************************************************************************************************
2025-02-28 17:11:44,000 p=19330 u=digitd n=ansible | db.etcd.lan                : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2025-02-28 17:11:44,000 p=19330 u=digitd n=ansible | db.master.lan              : ok=10   changed=6    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2025-02-28 17:11:44,000 p=19330 u=digitd n=ansible | db.slave.lan               : ok=3    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2025-02-28 17:13:04,634 p=20216 u=digitd n=ansible | PLAY [Create directory for storing backups] ***********************************************************************************************************************************
2025-02-28 17:13:04,642 p=20216 u=digitd n=ansible | TASK [Create and setup rights] ************************************************************************************************************************************************
2025-02-28 17:13:05,573 p=20216 u=digitd n=ansible | ok: [db.etcd.lan]
2025-02-28 17:13:05,575 p=20216 u=digitd n=ansible | TASK [Create .ssh directory and authorized_keys file] *************************************************************************************************************************
2025-02-28 17:13:06,016 p=20216 u=digitd n=ansible | ok: [db.etcd.lan] => (item={'path': '/var/lib/postgresql/15/data/.ssh', 'state': 'directory', 'mode': '0700'})
2025-02-28 17:13:06,431 p=20216 u=digitd n=ansible | changed: [db.etcd.lan] => (item={'path': '/var/lib/postgresql/15/data/.ssh/authorized_keys', 'state': 'touch', 'mode': '0600'})
2025-02-28 17:13:06,439 p=20216 u=digitd n=ansible | PLAY [Setup pgbackrest (postgres backup tool) on the patroni nodes] ***********************************************************************************************************
2025-02-28 17:13:06,452 p=20216 u=digitd n=ansible | TASK [Ensure that pgbackrest package is installed] ****************************************************************************************************************************
2025-02-28 17:13:09,532 p=20216 u=digitd n=ansible | ok: [db.master.lan]
2025-02-28 17:13:11,513 p=20216 u=digitd n=ansible | ok: [db.slave.lan]
2025-02-28 17:13:11,516 p=20216 u=digitd n=ansible | TASK [Copy files to the machines] *********************************************************************************************************************************************
2025-02-28 17:13:12,412 p=20216 u=digitd n=ansible | ok: [db.master.lan]
2025-02-28 17:13:12,669 p=20216 u=digitd n=ansible | ok: [db.slave.lan]
2025-02-28 17:13:12,671 p=20216 u=digitd n=ansible | TASK [Scan sha1-hash] *********************************************************************************************************************************************************
2025-02-28 17:13:13,766 p=20216 u=digitd n=ansible | changed: [db.master.lan]
2025-02-28 17:13:13,766 p=20216 u=digitd n=ansible | changed: [db.slave.lan]
2025-02-28 17:13:13,778 p=20216 u=digitd n=ansible | PLAY [Start backuping] ********************************************************************************************************************************************************
2025-02-28 17:13:13,786 p=20216 u=digitd n=ansible | TASK [Ensure that patroni is running] *****************************************************************************************************************************************
2025-02-28 17:13:15,353 p=20216 u=digitd n=ansible | ok: [db.master.lan]
2025-02-28 17:13:15,356 p=20216 u=digitd n=ansible | TASK [Create stanza] **********************************************************************************************************************************************************
2025-02-28 17:13:16,503 p=20216 u=digitd n=ansible | changed: [db.master.lan]
2025-02-28 17:13:16,505 p=20216 u=digitd n=ansible | TASK [Check] ******************************************************************************************************************************************************************
2025-02-28 17:13:18,030 p=20216 u=digitd n=ansible | changed: [db.master.lan]
2025-02-28 17:13:18,032 p=20216 u=digitd n=ansible | TASK [Perform first backup of DB] *********************************************************************************************************************************************
2025-02-28 17:13:36,131 p=20216 u=digitd n=ansible | changed: [db.master.lan]
2025-02-28 17:13:36,133 p=20216 u=digitd n=ansible | TASK [Show info about backups] ************************************************************************************************************************************************
2025-02-28 17:13:36,771 p=20216 u=digitd n=ansible | changed: [db.master.lan]
2025-02-28 17:13:36,774 p=20216 u=digitd n=ansible | TASK [Print it] ***************************************************************************************************************************************************************
2025-02-28 17:13:36,790 p=20216 u=digitd n=ansible | ok: [db.master.lan] => {
    "msg": [
        "stanza: testcluster",
        "    status: ok",
        "    cipher: aes-256-cbc",
        "",
        "    db (current)",
        "        wal archive min/max (15): 000000010000000000000001/000000020000000000000015",
        "",
        "        full backup: 20250228-165201F",
        "            timestamp start/stop: 2025-02-28 16:52:01+03 / 2025-02-28 16:52:10+03",
        "            wal start/stop: 000000020000000000000006 / 000000020000000000000006",
        "            database size: 22.0MB, database backup size: 22.0MB",
        "            repo1: backup size: 2.9MB",
        "",
        "        incr backup: 20250228-165201F_20250228-165238I",
        "            timestamp start/stop: 2025-02-28 16:52:38+03 / 2025-02-28 16:52:51+03",
        "            wal start/stop: 000000020000000000000009 / 000000020000000000000009",
        "            database size: 22.0MB, database backup size: 8.3KB",
        "            repo1: backup size: 440B",
        "            backup reference total: 1 full",
        "",
        "        incr backup: 20250228-165201F_20250228-165503I",
        "            timestamp start/stop: 2025-02-28 16:55:03+03 / 2025-02-28 16:55:12+03",
        "            wal start/stop: 00000002000000000000000C / 00000002000000000000000C",
        "            database size: 22.0MB, database backup size: 8.3KB",
        "            repo1: backup size: 440B",
        "            backup reference total: 1 full, 1 incr",
        "",
        "        incr backup: 20250228-165201F_20250228-170347I",
        "            timestamp start/stop: 2025-02-28 17:03:47+03 / 2025-02-28 17:03:53+03",
        "            wal start/stop: 00000002000000000000000E / 00000002000000000000000F",
        "            database size: 22.0MB, database backup size: 8.3KB",
        "            repo1: backup size: 440B",
        "            backup reference total: 1 full, 2 incr",
        "",
        "        incr backup: 20250228-165201F_20250228-171133I",
        "            timestamp start/stop: 2025-02-28 17:11:33+03 / 2025-02-28 17:11:40+03",
        "            wal start/stop: 000000020000000000000011 / 000000020000000000000012",
        "            database size: 22.0MB, database backup size: 8.3KB",
        "            repo1: backup size: 440B",
        "            backup reference total: 1 full, 3 incr",
        "",
        "        incr backup: 20250228-165201F_20250228-171318I",
        "            timestamp start/stop: 2025-02-28 17:13:18+03 / 2025-02-28 17:13:31+03",
        "            wal start/stop: 000000020000000000000014 / 000000020000000000000015",
        "            database size: 22.0MB, database backup size: 8.3KB",
        "            repo1: backup size: 440B",
        "            backup reference total: 1 full, 4 incr"
    ]
}
2025-02-28 17:13:36,792 p=20216 u=digitd n=ansible | TASK [Create cron job] ********************************************************************************************************************************************************
2025-02-28 17:13:37,576 p=20216 u=digitd n=ansible | changed: [db.master.lan]
2025-02-28 17:13:37,584 p=20216 u=digitd n=ansible | PLAY RECAP ********************************************************************************************************************************************************************
2025-02-28 17:13:37,584 p=20216 u=digitd n=ansible | db.etcd.lan                : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2025-02-28 17:13:37,584 p=20216 u=digitd n=ansible | db.master.lan              : ok=10   changed=6    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2025-02-28 17:13:37,584 p=20216 u=digitd n=ansible | db.slave.lan               : ok=3    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2025-02-28 17:17:26,933 p=21860 u=digitd n=ansible | PLAY [Create directory for storing backups] ***********************************************************************************************************************************
2025-02-28 17:17:26,941 p=21860 u=digitd n=ansible | TASK [Create and setup rights] ************************************************************************************************************************************************
2025-02-28 17:17:27,895 p=21860 u=digitd n=ansible | ok: [db.etcd.lan]
2025-02-28 17:17:27,897 p=21860 u=digitd n=ansible | TASK [Create .ssh directory and authorized_keys file] *************************************************************************************************************************
2025-02-28 17:17:28,335 p=21860 u=digitd n=ansible | ok: [db.etcd.lan] => (item={'path': '/var/lib/postgresql/15/data/.ssh', 'state': 'directory', 'mode': '0700'})
2025-02-28 17:17:28,753 p=21860 u=digitd n=ansible | changed: [db.etcd.lan] => (item={'path': '/var/lib/postgresql/15/data/.ssh/authorized_keys', 'state': 'touch', 'mode': '0600'})
2025-02-28 17:17:28,763 p=21860 u=digitd n=ansible | PLAY [Setup pgbackrest (postgres backup tool) on the patroni nodes] ***********************************************************************************************************
2025-02-28 17:17:28,771 p=21860 u=digitd n=ansible | TASK [Ensure that pgbackrest package is installed] ****************************************************************************************************************************
2025-02-28 17:17:33,858 p=21860 u=digitd n=ansible | ok: [db.master.lan]
2025-02-28 17:17:40,486 p=21860 u=digitd n=ansible | ok: [db.slave.lan]
2025-02-28 17:17:40,489 p=21860 u=digitd n=ansible | TASK [Copy files to the machines] *********************************************************************************************************************************************
2025-02-28 17:17:41,435 p=21860 u=digitd n=ansible | ok: [db.master.lan]
2025-02-28 17:17:41,599 p=21860 u=digitd n=ansible | ok: [db.slave.lan]
2025-02-28 17:17:41,603 p=21860 u=digitd n=ansible | TASK [Scan sha1-hash] *********************************************************************************************************************************************************
2025-02-28 17:17:42,655 p=21860 u=digitd n=ansible | changed: [db.slave.lan]
2025-02-28 17:17:42,869 p=21860 u=digitd n=ansible | changed: [db.master.lan]
2025-02-28 17:17:42,882 p=21860 u=digitd n=ansible | PLAY [Start backuping] ********************************************************************************************************************************************************
2025-02-28 17:17:42,888 p=21860 u=digitd n=ansible | TASK [Ensure that patroni is running] *****************************************************************************************************************************************
2025-02-28 17:17:44,763 p=21860 u=digitd n=ansible | ok: [db.master.lan]
2025-02-28 17:17:44,765 p=21860 u=digitd n=ansible | TASK [Create stanza] **********************************************************************************************************************************************************
2025-02-28 17:17:48,373 p=21860 u=digitd n=ansible | changed: [db.master.lan]
2025-02-28 17:17:48,375 p=21860 u=digitd n=ansible | TASK [Check] ******************************************************************************************************************************************************************
2025-02-28 17:17:50,605 p=21860 u=digitd n=ansible | changed: [db.master.lan]
2025-02-28 17:17:50,607 p=21860 u=digitd n=ansible | TASK [Perform first backup of DB] *********************************************************************************************************************************************
2025-02-28 17:18:03,146 p=21860 u=digitd n=ansible | changed: [db.master.lan]
2025-02-28 17:18:03,148 p=21860 u=digitd n=ansible | TASK [Show info about backups] ************************************************************************************************************************************************
2025-02-28 17:18:03,769 p=21860 u=digitd n=ansible | changed: [db.master.lan]
2025-02-28 17:18:03,772 p=21860 u=digitd n=ansible | TASK [Print it] ***************************************************************************************************************************************************************
2025-02-28 17:18:03,789 p=21860 u=digitd n=ansible | ok: [db.master.lan] => {
    "msg": [
        "stanza: testcluster",
        "    status: ok",
        "    cipher: aes-256-cbc",
        "",
        "    db (current)",
        "        wal archive min/max (15): 000000010000000000000001/000000020000000000000018",
        "",
        "        full backup: 20250228-165201F",
        "            timestamp start/stop: 2025-02-28 16:52:01+03 / 2025-02-28 16:52:10+03",
        "            wal start/stop: 000000020000000000000006 / 000000020000000000000006",
        "            database size: 22.0MB, database backup size: 22.0MB",
        "            repo1: backup size: 2.9MB",
        "",
        "        incr backup: 20250228-165201F_20250228-165238I",
        "            timestamp start/stop: 2025-02-28 16:52:38+03 / 2025-02-28 16:52:51+03",
        "            wal start/stop: 000000020000000000000009 / 000000020000000000000009",
        "            database size: 22.0MB, database backup size: 8.3KB",
        "            repo1: backup size: 440B",
        "            backup reference total: 1 full",
        "",
        "        incr backup: 20250228-165201F_20250228-165503I",
        "            timestamp start/stop: 2025-02-28 16:55:03+03 / 2025-02-28 16:55:12+03",
        "            wal start/stop: 00000002000000000000000C / 00000002000000000000000C",
        "            database size: 22.0MB, database backup size: 8.3KB",
        "            repo1: backup size: 440B",
        "            backup reference total: 1 full, 1 incr",
        "",
        "        incr backup: 20250228-165201F_20250228-170347I",
        "            timestamp start/stop: 2025-02-28 17:03:47+03 / 2025-02-28 17:03:53+03",
        "            wal start/stop: 00000002000000000000000E / 00000002000000000000000F",
        "            database size: 22.0MB, database backup size: 8.3KB",
        "            repo1: backup size: 440B",
        "            backup reference total: 1 full, 2 incr",
        "",
        "        incr backup: 20250228-165201F_20250228-171133I",
        "            timestamp start/stop: 2025-02-28 17:11:33+03 / 2025-02-28 17:11:40+03",
        "            wal start/stop: 000000020000000000000011 / 000000020000000000000012",
        "            database size: 22.0MB, database backup size: 8.3KB",
        "            repo1: backup size: 440B",
        "            backup reference total: 1 full, 3 incr",
        "",
        "        incr backup: 20250228-165201F_20250228-171318I",
        "            timestamp start/stop: 2025-02-28 17:13:18+03 / 2025-02-28 17:13:31+03",
        "            wal start/stop: 000000020000000000000014 / 000000020000000000000015",
        "            database size: 22.0MB, database backup size: 8.3KB",
        "            repo1: backup size: 440B",
        "            backup reference total: 1 full, 4 incr",
        "",
        "        incr backup: 20250228-165201F_20250228-171751I",
        "            timestamp start/stop: 2025-02-28 17:17:51+03 / 2025-02-28 17:17:57+03",
        "            wal start/stop: 000000020000000000000017 / 000000020000000000000018",
        "            database size: 22.0MB, database backup size: 8.3KB",
        "            repo1: backup size: 440B",
        "            backup reference total: 1 full, 5 incr"
    ]
}
2025-02-28 17:18:03,791 p=21860 u=digitd n=ansible | TASK [Create cron job] ********************************************************************************************************************************************************
2025-02-28 17:18:04,420 p=21860 u=digitd n=ansible | ok: [db.master.lan]
2025-02-28 17:18:04,423 p=21860 u=digitd n=ansible | TASK [Create cron job] ********************************************************************************************************************************************************
2025-02-28 17:18:05,023 p=21860 u=digitd n=ansible | changed: [db.master.lan]
2025-02-28 17:18:05,024 p=21860 u=digitd n=ansible | TASK [Create cron job] ********************************************************************************************************************************************************
2025-02-28 17:18:05,646 p=21860 u=digitd n=ansible | changed: [db.master.lan]
2025-02-28 17:18:05,654 p=21860 u=digitd n=ansible | PLAY RECAP ********************************************************************************************************************************************************************
2025-02-28 17:18:05,654 p=21860 u=digitd n=ansible | db.etcd.lan                : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2025-02-28 17:18:05,655 p=21860 u=digitd n=ansible | db.master.lan              : ok=12   changed=7    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2025-02-28 17:18:05,655 p=21860 u=digitd n=ansible | db.slave.lan               : ok=3    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2025-02-28 17:20:16,826 p=22965 u=digitd n=ansible | PLAY [Create directory for storing backups] ***********************************************************************************************************************************
2025-02-28 17:20:16,834 p=22965 u=digitd n=ansible | TASK [Create and setup rights] ************************************************************************************************************************************************
2025-02-28 17:20:17,833 p=22965 u=digitd n=ansible | ok: [db.etcd.lan]
2025-02-28 17:20:17,835 p=22965 u=digitd n=ansible | TASK [Create .ssh directory and authorized_keys file] *************************************************************************************************************************
2025-02-28 17:20:18,276 p=22965 u=digitd n=ansible | ok: [db.etcd.lan] => (item={'path': '/var/lib/postgresql/15/data/.ssh', 'state': 'directory', 'mode': '0700'})
2025-02-28 17:20:18,685 p=22965 u=digitd n=ansible | changed: [db.etcd.lan] => (item={'path': '/var/lib/postgresql/15/data/.ssh/authorized_keys', 'state': 'touch', 'mode': '0600'})
2025-02-28 17:20:18,694 p=22965 u=digitd n=ansible | PLAY [Setup pgbackrest (postgres backup tool) on the patroni nodes] ***********************************************************************************************************
2025-02-28 17:20:18,705 p=22965 u=digitd n=ansible | TASK [Ensure that pgbackrest package is installed] ****************************************************************************************************************************
2025-02-28 17:20:24,237 p=22965 u=digitd n=ansible | ok: [db.master.lan]
2025-02-28 17:20:24,308 p=22965 u=digitd n=ansible | ok: [db.slave.lan]
2025-02-28 17:20:24,310 p=22965 u=digitd n=ansible | TASK [Copy files to the machines] *********************************************************************************************************************************************
2025-02-28 17:20:25,204 p=22965 u=digitd n=ansible | ok: [db.master.lan]
2025-02-28 17:20:25,663 p=22965 u=digitd n=ansible | ok: [db.slave.lan]
2025-02-28 17:20:25,665 p=22965 u=digitd n=ansible | TASK [Scan sha1-hash] *********************************************************************************************************************************************************
2025-02-28 17:20:26,636 p=22965 u=digitd n=ansible | changed: [db.master.lan]
2025-02-28 17:20:26,737 p=22965 u=digitd n=ansible | changed: [db.slave.lan]
2025-02-28 17:20:26,749 p=22965 u=digitd n=ansible | PLAY [Start backuping] ********************************************************************************************************************************************************
2025-02-28 17:20:26,754 p=22965 u=digitd n=ansible | TASK [Ensure that patroni is running] *****************************************************************************************************************************************
2025-02-28 17:20:28,294 p=22965 u=digitd n=ansible | ok: [db.master.lan]
2025-02-28 17:20:28,296 p=22965 u=digitd n=ansible | TASK [Create stanza] **********************************************************************************************************************************************************
2025-02-28 17:20:29,117 p=22965 u=digitd n=ansible | changed: [db.master.lan]
2025-02-28 17:20:29,120 p=22965 u=digitd n=ansible | TASK [Check] ******************************************************************************************************************************************************************
2025-02-28 17:20:31,308 p=22965 u=digitd n=ansible | changed: [db.master.lan]
2025-02-28 17:20:31,310 p=22965 u=digitd n=ansible | TASK [Perform first backup of DB] *********************************************************************************************************************************************
2025-02-28 17:20:46,182 p=22965 u=digitd n=ansible | changed: [db.master.lan]
2025-02-28 17:20:46,186 p=22965 u=digitd n=ansible | TASK [Show info about backups] ************************************************************************************************************************************************
2025-02-28 17:20:46,839 p=22965 u=digitd n=ansible | changed: [db.master.lan]
2025-02-28 17:20:46,842 p=22965 u=digitd n=ansible | TASK [Print it] ***************************************************************************************************************************************************************
2025-02-28 17:20:46,857 p=22965 u=digitd n=ansible | ok: [db.master.lan] => {
    "msg": [
        "stanza: testcluster",
        "    status: ok",
        "    cipher: aes-256-cbc",
        "",
        "    db (current)",
        "        wal archive min/max (15): 000000010000000000000001/00000002000000000000001B",
        "",
        "        full backup: 20250228-165201F",
        "            timestamp start/stop: 2025-02-28 16:52:01+03 / 2025-02-28 16:52:10+03",
        "            wal start/stop: 000000020000000000000006 / 000000020000000000000006",
        "            database size: 22.0MB, database backup size: 22.0MB",
        "            repo1: backup size: 2.9MB",
        "",
        "        incr backup: 20250228-165201F_20250228-165238I",
        "            timestamp start/stop: 2025-02-28 16:52:38+03 / 2025-02-28 16:52:51+03",
        "            wal start/stop: 000000020000000000000009 / 000000020000000000000009",
        "            database size: 22.0MB, database backup size: 8.3KB",
        "            repo1: backup size: 440B",
        "            backup reference total: 1 full",
        "",
        "        incr backup: 20250228-165201F_20250228-165503I",
        "            timestamp start/stop: 2025-02-28 16:55:03+03 / 2025-02-28 16:55:12+03",
        "            wal start/stop: 00000002000000000000000C / 00000002000000000000000C",
        "            database size: 22.0MB, database backup size: 8.3KB",
        "            repo1: backup size: 440B",
        "            backup reference total: 1 full, 1 incr",
        "",
        "        incr backup: 20250228-165201F_20250228-170347I",
        "            timestamp start/stop: 2025-02-28 17:03:47+03 / 2025-02-28 17:03:53+03",
        "            wal start/stop: 00000002000000000000000E / 00000002000000000000000F",
        "            database size: 22.0MB, database backup size: 8.3KB",
        "            repo1: backup size: 440B",
        "            backup reference total: 1 full, 2 incr",
        "",
        "        incr backup: 20250228-165201F_20250228-171133I",
        "            timestamp start/stop: 2025-02-28 17:11:33+03 / 2025-02-28 17:11:40+03",
        "            wal start/stop: 000000020000000000000011 / 000000020000000000000012",
        "            database size: 22.0MB, database backup size: 8.3KB",
        "            repo1: backup size: 440B",
        "            backup reference total: 1 full, 3 incr",
        "",
        "        incr backup: 20250228-165201F_20250228-171318I",
        "            timestamp start/stop: 2025-02-28 17:13:18+03 / 2025-02-28 17:13:31+03",
        "            wal start/stop: 000000020000000000000014 / 000000020000000000000015",
        "            database size: 22.0MB, database backup size: 8.3KB",
        "            repo1: backup size: 440B",
        "            backup reference total: 1 full, 4 incr",
        "",
        "        incr backup: 20250228-165201F_20250228-171751I",
        "            timestamp start/stop: 2025-02-28 17:17:51+03 / 2025-02-28 17:17:57+03",
        "            wal start/stop: 000000020000000000000017 / 000000020000000000000018",
        "            database size: 22.0MB, database backup size: 8.3KB",
        "            repo1: backup size: 440B",
        "            backup reference total: 1 full, 5 incr",
        "",
        "        incr backup: 20250228-165201F_20250228-172032I",
        "            timestamp start/stop: 2025-02-28 17:20:32+03 / 2025-02-28 17:20:42+03",
        "            wal start/stop: 00000002000000000000001B / 00000002000000000000001B",
        "            database size: 22.0MB, database backup size: 8.3KB",
        "            repo1: backup size: 440B",
        "            backup reference total: 1 full, 6 incr"
    ]
}
2025-02-28 17:20:46,860 p=22965 u=digitd n=ansible | TASK [Create cron job for full backup] ****************************************************************************************************************************************
2025-02-28 17:20:49,263 p=22965 u=digitd n=ansible | changed: [db.master.lan]
2025-02-28 17:20:49,266 p=22965 u=digitd n=ansible | TASK [Create cron job for diff backup] ****************************************************************************************************************************************
2025-02-28 17:20:49,915 p=22965 u=digitd n=ansible | changed: [db.master.lan]
2025-02-28 17:20:49,917 p=22965 u=digitd n=ansible | TASK [Create cron job for incr backup] ****************************************************************************************************************************************
2025-02-28 17:20:50,755 p=22965 u=digitd n=ansible | changed: [db.master.lan]
2025-02-28 17:20:50,763 p=22965 u=digitd n=ansible | PLAY RECAP ********************************************************************************************************************************************************************
2025-02-28 17:20:50,763 p=22965 u=digitd n=ansible | db.etcd.lan                : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2025-02-28 17:20:50,763 p=22965 u=digitd n=ansible | db.master.lan              : ok=12   changed=8    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2025-02-28 17:20:50,763 p=22965 u=digitd n=ansible | db.slave.lan               : ok=3    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2025-02-28 17:27:29,828 p=25078 u=digitd n=ansible | PLAY [Create directory for storing backups] ***********************************************************************************************************************************
2025-02-28 17:27:29,836 p=25078 u=digitd n=ansible | TASK [Create and setup rights] ************************************************************************************************************************************************
2025-02-28 17:27:30,753 p=25078 u=digitd n=ansible | ok: [db.etcd.lan]
2025-02-28 17:27:30,755 p=25078 u=digitd n=ansible | TASK [Create .ssh directory and authorized_keys file] *************************************************************************************************************************
2025-02-28 17:27:31,187 p=25078 u=digitd n=ansible | ok: [db.etcd.lan] => (item={'path': '/var/lib/postgresql/15/data/.ssh', 'state': 'directory', 'mode': '0700'})
2025-02-28 17:27:31,595 p=25078 u=digitd n=ansible | changed: [db.etcd.lan] => (item={'path': '/var/lib/postgresql/15/data/.ssh/authorized_keys', 'state': 'touch', 'mode': '0600'})
2025-02-28 17:27:31,604 p=25078 u=digitd n=ansible | PLAY [Setup pgbackrest (postgres backup tool) on the patroni nodes] ***********************************************************************************************************
2025-02-28 17:27:31,617 p=25078 u=digitd n=ansible | TASK [Ensure that pgbackrest package is installed] ****************************************************************************************************************************
2025-02-28 17:27:35,369 p=25078 u=digitd n=ansible | ok: [db.slave.lan]
2025-02-28 17:27:35,980 p=25078 u=digitd n=ansible | ok: [db.master.lan]
2025-02-28 17:27:35,982 p=25078 u=digitd n=ansible | TASK [Copy files to the machines] *********************************************************************************************************************************************
2025-02-28 17:27:36,815 p=25078 u=digitd n=ansible | ok: [db.master.lan]
2025-02-28 17:27:36,924 p=25078 u=digitd n=ansible | ok: [db.slave.lan]
2025-02-28 17:27:36,927 p=25078 u=digitd n=ansible | TASK [Scan sha1-hash] *********************************************************************************************************************************************************
2025-02-28 17:27:38,004 p=25078 u=digitd n=ansible | changed: [db.slave.lan]
2025-02-28 17:27:38,017 p=25078 u=digitd n=ansible | changed: [db.master.lan]
2025-02-28 17:27:38,043 p=25078 u=digitd n=ansible | PLAY [Start backuping] ********************************************************************************************************************************************************
2025-02-28 17:27:38,063 p=25078 u=digitd n=ansible | TASK [Ensure that patroni is running] *****************************************************************************************************************************************
2025-02-28 17:27:39,732 p=25078 u=digitd n=ansible | ok: [db.master.lan]
2025-02-28 17:27:39,734 p=25078 u=digitd n=ansible | TASK [Create stanza] **********************************************************************************************************************************************************
2025-02-28 17:27:41,507 p=25078 u=digitd n=ansible | changed: [db.master.lan]
2025-02-28 17:27:41,510 p=25078 u=digitd n=ansible | TASK [Check] ******************************************************************************************************************************************************************
2025-02-28 17:27:43,519 p=25078 u=digitd n=ansible | changed: [db.master.lan]
2025-02-28 17:27:43,521 p=25078 u=digitd n=ansible | TASK [Perform first backup of DB] *********************************************************************************************************************************************
2025-02-28 17:27:54,463 p=25078 u=digitd n=ansible | changed: [db.master.lan]
2025-02-28 17:27:54,467 p=25078 u=digitd n=ansible | TASK [Show info about backups] ************************************************************************************************************************************************
2025-02-28 17:27:55,100 p=25078 u=digitd n=ansible | changed: [db.master.lan]
2025-02-28 17:27:55,103 p=25078 u=digitd n=ansible | TASK [Print it] ***************************************************************************************************************************************************************
2025-02-28 17:27:55,118 p=25078 u=digitd n=ansible | ok: [db.master.lan] => {
    "msg": [
        "stanza: testcluster",
        "    status: ok",
        "    cipher: aes-256-cbc",
        "",
        "    db (current)",
        "        wal archive min/max (15): 000000010000000000000001/00000002000000000000001E",
        "",
        "        full backup: 20250228-165201F",
        "            timestamp start/stop: 2025-02-28 16:52:01+03 / 2025-02-28 16:52:10+03",
        "            wal start/stop: 000000020000000000000006 / 000000020000000000000006",
        "            database size: 22.0MB, database backup size: 22.0MB",
        "            repo1: backup size: 2.9MB",
        "",
        "        incr backup: 20250228-165201F_20250228-165238I",
        "            timestamp start/stop: 2025-02-28 16:52:38+03 / 2025-02-28 16:52:51+03",
        "            wal start/stop: 000000020000000000000009 / 000000020000000000000009",
        "            database size: 22.0MB, database backup size: 8.3KB",
        "            repo1: backup size: 440B",
        "            backup reference total: 1 full",
        "",
        "        incr backup: 20250228-165201F_20250228-165503I",
        "            timestamp start/stop: 2025-02-28 16:55:03+03 / 2025-02-28 16:55:12+03",
        "            wal start/stop: 00000002000000000000000C / 00000002000000000000000C",
        "            database size: 22.0MB, database backup size: 8.3KB",
        "            repo1: backup size: 440B",
        "            backup reference total: 1 full, 1 incr",
        "",
        "        incr backup: 20250228-165201F_20250228-170347I",
        "            timestamp start/stop: 2025-02-28 17:03:47+03 / 2025-02-28 17:03:53+03",
        "            wal start/stop: 00000002000000000000000E / 00000002000000000000000F",
        "            database size: 22.0MB, database backup size: 8.3KB",
        "            repo1: backup size: 440B",
        "            backup reference total: 1 full, 2 incr",
        "",
        "        incr backup: 20250228-165201F_20250228-171133I",
        "            timestamp start/stop: 2025-02-28 17:11:33+03 / 2025-02-28 17:11:40+03",
        "            wal start/stop: 000000020000000000000011 / 000000020000000000000012",
        "            database size: 22.0MB, database backup size: 8.3KB",
        "            repo1: backup size: 440B",
        "            backup reference total: 1 full, 3 incr",
        "",
        "        incr backup: 20250228-165201F_20250228-171318I",
        "            timestamp start/stop: 2025-02-28 17:13:18+03 / 2025-02-28 17:13:31+03",
        "            wal start/stop: 000000020000000000000014 / 000000020000000000000015",
        "            database size: 22.0MB, database backup size: 8.3KB",
        "            repo1: backup size: 440B",
        "            backup reference total: 1 full, 4 incr",
        "",
        "        incr backup: 20250228-165201F_20250228-171751I",
        "            timestamp start/stop: 2025-02-28 17:17:51+03 / 2025-02-28 17:17:57+03",
        "            wal start/stop: 000000020000000000000017 / 000000020000000000000018",
        "            database size: 22.0MB, database backup size: 8.3KB",
        "            repo1: backup size: 440B",
        "            backup reference total: 1 full, 5 incr",
        "",
        "        incr backup: 20250228-165201F_20250228-172032I",
        "            timestamp start/stop: 2025-02-28 17:20:32+03 / 2025-02-28 17:20:42+03",
        "            wal start/stop: 00000002000000000000001B / 00000002000000000000001B",
        "            database size: 22.0MB, database backup size: 8.3KB",
        "            repo1: backup size: 440B",
        "            backup reference total: 1 full, 6 incr",
        "",
        "        incr backup: 20250228-165201F_20250228-172744I",
        "            timestamp start/stop: 2025-02-28 17:27:44+03 / 2025-02-28 17:27:50+03",
        "            wal start/stop: 00000002000000000000001D / 00000002000000000000001E",
        "            database size: 22.0MB, database backup size: 8.3KB",
        "            repo1: backup size: 440B",
        "            backup reference total: 1 full, 7 incr"
    ]
}
2025-02-28 17:27:55,121 p=25078 u=digitd n=ansible | TASK [Create cron job for full backup] ****************************************************************************************************************************************
2025-02-28 17:27:55,852 p=25078 u=digitd n=ansible | changed: [db.master.lan]
2025-02-28 17:27:55,855 p=25078 u=digitd n=ansible | TASK [Create cron job for diff backup] ****************************************************************************************************************************************
2025-02-28 17:27:56,906 p=25078 u=digitd n=ansible | changed: [db.master.lan]
2025-02-28 17:27:56,910 p=25078 u=digitd n=ansible | TASK [Create cron job for incr backup] ****************************************************************************************************************************************
2025-02-28 17:27:57,597 p=25078 u=digitd n=ansible | changed: [db.master.lan]
2025-02-28 17:27:57,603 p=25078 u=digitd n=ansible | PLAY RECAP ********************************************************************************************************************************************************************
2025-02-28 17:27:57,603 p=25078 u=digitd n=ansible | db.etcd.lan                : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2025-02-28 17:27:57,603 p=25078 u=digitd n=ansible | db.master.lan              : ok=12   changed=8    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2025-02-28 17:27:57,603 p=25078 u=digitd n=ansible | db.slave.lan               : ok=3    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
